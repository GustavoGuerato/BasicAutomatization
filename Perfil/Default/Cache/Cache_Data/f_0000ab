{"version":3,"file":"chunk-app_assets_modules_github_onfocus_ts-app_assets_modules_github_visible_ts-app_components_sear-22e07f-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/jump-to/ranking.ts","app/assets/modules/github/jump-to/page-views.ts","app/assets/modules/github/onfocus.ts","app/assets/modules/github/visible.ts","app/components/search/experiments.ts","app/components/search/parsing/common.ts","app/components/search/qbsearch-input-element.ts","app/components/search/providers/history.ts","app/components/search/suggestions/languages.ts","app/components/search/providers/languages.ts","app/components/search/providers/repos.ts","app/components/search/providers/saved.ts","app/components/search/providers/owners.ts","app/components/search/providers/fixed.ts","app/components/search/providers/teams.ts","app/components/search/providers/projects.ts","app/components/search/providers/blackbird.ts","app/components/search/providers/input.ts","ui/packages/form-utils/form-utils.ts","ui/packages/form-utils/remote-submit.ts","ui/packages/hotkey/keyboard-shortcuts-helper.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/trusted-types-policies/jtml.ts","ui/packages/jtml-shimmed/jtml-shimmed.ts","ui/packages/query-builder-element/query-builder-api.ts","ui/packages/soft-navigate/soft-navigate.ts","ui/packages/subscription/subscription.ts"],"sourcesContent":["import type {PageViews} from './page-views'\n\nconst FEATURE_WEIGHTS = {frequency: 0.6, recency: 0.4}\n\nfunction sortBy<T>(items: T[], map: (item: T) => number): T[] {\n  return items.sort((a, b) => map(a) - map(b))\n}\n\ntype Scorer = (pageKey: string) => number\nexport function scorer(pageViews: PageViews): Scorer {\n  const frequencies = frequencyMap(pageViews)\n  const recencies = recencyMap(pageViews)\n  return function (pageKey: string): number {\n    return score(frequencies.get(pageKey) || 0, recencies.get(pageKey) || 0)\n  }\n}\n\nfunction score(frequency: number, recency: number): number {\n  return frequency * FEATURE_WEIGHTS.frequency + recency * FEATURE_WEIGHTS.recency\n}\n\n// Scores a relative frequency in the interval [0, 1] where higher means more frequent.\nfunction frequencyMap(pageViews: PageViews): Map<string, number> {\n  const totalVisits = [...Object.values(pageViews)].reduce((total, view) => total + view.visitCount, 0)\n  return new Map(Object.keys(pageViews).map(pageKey => [pageKey, pageViews[pageKey]!.visitCount / totalVisits]))\n}\n\n// Scores a relative recency value in the interval [0, 1] where higher means more recent.\nfunction recencyMap(pageViews: PageViews): Map<string, number> {\n  const recencyList = sortBy([...Object.keys(pageViews)], key => pageViews[key]!.lastVisitedAt)\n  const totalUniqueVisits = recencyList.length\n  return new Map(recencyList.map((key, index) => [key, (index + 1) / totalUniqueVisits]))\n}\n","import {scorer} from './ranking'\nexport {scorer} from './ranking'\n\ntype PageViewSummary = {\n  lastVisitedAt: number\n  visitCount: number\n}\n\nexport type PageViews = {[page_key: string]: PageViewSummary}\n\nconst TEAM_PAGE_REGEX = /^\\/orgs\\/([a-z0-9-]+)\\/teams\\/([\\w-]+)/\n\n// Of course this list is incomplete, but it should be good enough for the purposes of this prototype.\nconst REPOSITORY_PAGE_REGEXES = [\n  // This will overcount some things, but since every page view is ultimately compared to entities\n  // we can jump to it should be fine. Of course if we ever tried to add users or orgs to this it\n  // would break.\n  /^\\/([^/]+)\\/([^/]+)\\/?$/,\n\n  /^\\/([^/]+)\\/([^/]+)\\/blob/,\n  /^\\/([^/]+)\\/([^/]+)\\/tree/,\n  /^\\/([^/]+)\\/([^/]+)\\/issues/,\n  /^\\/([^/]+)\\/([^/]+)\\/pulls?/,\n  /^\\/([^/]+)\\/([^/]+)\\/pulse/,\n]\n\nconst PROJECT_PAGE_REGEXES = [\n  ['organization', /^\\/orgs\\/([a-z0-9-]+)\\/projects\\/([0-9-]+)/],\n  ['repository', /^\\/([^/]+)\\/([^/]+)\\/projects\\/([0-9-]+)/],\n]\n\nconst MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE = 100\n\nexport function logPageView(path: string) {\n  const teamPageMatch = path.match(TEAM_PAGE_REGEX)\n  if (teamPageMatch) {\n    logPageViewByKey(buildTeamKey(teamPageMatch[1]!, teamPageMatch[2]!))\n    return\n  }\n\n  let projectPageMatch\n  for (let i = 0, len = PROJECT_PAGE_REGEXES.length; i < len; i++) {\n    const [ownerType, projectRegex] = PROJECT_PAGE_REGEXES[i]!\n    projectPageMatch = path.match(projectRegex!)\n    if (projectPageMatch) {\n      let ownerSlug: string | null = null\n      let number: string | null = null\n      switch (ownerType) {\n        case 'organization':\n          ownerSlug = projectPageMatch[1]!\n          number = projectPageMatch[2]!\n          break\n        case 'repository':\n          ownerSlug = `${projectPageMatch[1]}/${projectPageMatch[2]}`\n          number = projectPageMatch[3]!\n          break\n        default:\n        // Should never get here.\n      }\n      if (ownerSlug && number) {\n        logPageViewByKey(buildProjectKey(ownerSlug, number))\n      }\n      return\n    }\n  }\n\n  let repositoryPageMatch\n  for (let i = 0, len = REPOSITORY_PAGE_REGEXES.length; i < len; i++) {\n    repositoryPageMatch = path.match(REPOSITORY_PAGE_REGEXES[i]!)\n    if (repositoryPageMatch) {\n      logPageViewByKey(buildRepositoryKey(repositoryPageMatch[1]!, repositoryPageMatch[2]!))\n      return\n    }\n  }\n}\n\n// Limits localStorage entries to 100 MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE\nfunction limitedPageViews(pageViews: PageViews) {\n  const keys = Object.keys(pageViews)\n  if (keys.length <= MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE) {\n    return pageViews\n  }\n  const scorePage = scorer(pageViews)\n  const ranked = keys.sort((a, b) => scorePage(b) - scorePage(a)).slice(0, MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE / 2)\n  return Object.fromEntries(ranked.map(key => [key, pageViews[key]!]))\n}\n\nfunction logPageViewByKey(key: string) {\n  const views = getPageViewsMap()\n  const now = currentEpochTimeInSeconds()\n  const hit = views[key] || {lastVisitedAt: now, visitCount: 0}\n  hit.visitCount += 1\n  hit.lastVisitedAt = now\n  views[key] = hit\n  setPageViewsMap(limitedPageViews(views))\n}\n\nfunction currentEpochTimeInSeconds(): number {\n  return Math.floor(Date.now() / 1000)\n}\n\nexport function buildTeamKey(organizationLogin: string, teamSlug: string): string {\n  return `team:${organizationLogin}/${teamSlug}`\n}\n\nexport function buildRepositoryKey(ownerLogin: string, name: string): string {\n  return `repository:${ownerLogin}/${name}`\n}\n\nexport function buildProjectKey(ownerSlug: string, number: string): string {\n  return `project:${ownerSlug}/${number}`\n}\n\nconst PAGE_VIEW_KEY_REGEX = /^(team|repository|project):[^/]+\\/[^/]+(\\/([^/]+))?$/\nconst VIEWS_KEY = 'jump_to:page_views'\n\nfunction setPageViewsMap(views: PageViews) {\n  setItem(VIEWS_KEY, JSON.stringify(views))\n}\n\nexport function getPageViewsMap(): PageViews {\n  const rawData = getItem(VIEWS_KEY)\n  if (!rawData) return {}\n\n  let json\n  try {\n    json = JSON.parse(rawData)\n  } catch {\n    // Clear localStorage since we know it's bad\n    setPageViewsMap({})\n    return {}\n  }\n\n  const pageViewMap: PageViews = {}\n  for (const key in json) {\n    if (key.match(PAGE_VIEW_KEY_REGEX)) {\n      pageViewMap[key] = json[key]\n    }\n  }\n  return pageViewMap\n}\n\nfunction setItem(key: string, value: string) {\n  try {\n    window.localStorage.setItem(key, value)\n  } catch {\n    // Storage quota exceeded.\n  }\n}\n\nfunction getItem(key: string): string | null {\n  try {\n    return window.localStorage.getItem(key)\n  } catch {\n    // Storage unavailable.\n    return null\n  }\n}\n","// React to elements receiving focus\n//\n// Often we need to apply some behavior to form elements when they start getting\n// interacted with. We could use `observe`, but that can be expensive if there\n// are many such elements on the page, and when we aren't actually interested in\n// those elements until they receive focus.\n//\n// This is a lightweight and preferred alternative to the family of methods\n// from `github/focused` module.\n//\n// Examples\n//\n//   onFocus('.js-widget', element => {\n//     // ...\n//   })\n\nimport SelectorSet from 'selector-set'\n\nlet initialized = false\nconst selectorSet: SelectorSet<(el: HTMLElement) => void> = new SelectorSet()\n\nfunction handleFocus(event: FocusEvent) {\n  const focused = event.target\n  if (focused instanceof HTMLElement && focused.nodeType !== Node.DOCUMENT_NODE) {\n    for (const match of selectorSet.matches(focused)) {\n      match.data.call(null, focused)\n    }\n  }\n}\n\nexport function onFocus(selector: string, fn: (el: HTMLElement) => unknown) {\n  if (!initialized) {\n    initialized = true\n    // We use the \"focus\" event in the capture phase because Firefox\n    // historically had a limitation with \"focusin\" not bubbling.\n    document.addEventListener('focus', handleFocus, true)\n  }\n  selectorSet.add(selector, fn)\n\n  if (document.activeElement instanceof HTMLElement && document.activeElement.matches(selector)) {\n    fn(document.activeElement)\n  }\n}\n\nexport function onKey(\n  eventType: 'keydown' | 'keypress' | 'keyup',\n  selector: string,\n  inputHandler: (event: KeyboardEvent) => unknown,\n) {\n  function blurHandler(event: Event) {\n    const currentTarget = event.currentTarget as HTMLElement\n    if (!currentTarget) return\n    currentTarget.removeEventListener(eventType, inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener(eventType, inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n\nexport function onInput(selector: string, inputHandler: EventListener) {\n  function blurHandler(event: Event) {\n    const {currentTarget} = event\n    if (!currentTarget) return\n\n    currentTarget.removeEventListener('input', inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener('input', inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n","// Due to the way `visible` is implemented, it causes the browser to\n// perform a full page reflow, it lays out all elements again, when called. This\n// is one of the most time consuming operations the browser can perform, so it\n// affects perceived page load times.\n//\n// The preferred way to determine element visibility is check for the presence\n// of the `hidden` attribute: `if (el.hidden) ...` and `el.hidden = false`.\n//\n// More info: https://github.com/github/eslint-plugin-github/blob/master/docs/rules/no-d-none.md.\n//\n// We would ideally like to remove the `visible` function and consistently\n// use the `hidden` attribute.\n//\n// Returns true if the element is hidden.\nfunction hidden(element: HTMLElement): boolean {\n  return element.offsetWidth <= 0 && element.offsetHeight <= 0\n}\n\nexport default function visible(element: HTMLElement): boolean {\n  return !hidden(element)\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst experimentsLocalStorageKey = 'blackbird_experiments'\nconst experimentsDebugScoringKey = 'blackbird_debug_scoring'\n\nexport function getBlackbirdExperiments(): string[] {\n  const experiments = safeStorage('localStorage').getItem(experimentsLocalStorageKey)\n  if (!experiments) return []\n\n  return experiments.split(',')\n}\n\nexport function setBlackbirdExperiments(experiments: string[]): void {\n  safeStorage('localStorage').setItem(experimentsLocalStorageKey, experiments.join(','))\n}\n\nexport function debugScoringInfoEnabled(): boolean {\n  const enabled = safeStorage('localStorage').getItem(experimentsDebugScoringKey)\n  return enabled !== null\n}\n\nexport function setDebugScoringInfoEnabled(enabled: boolean): void {\n  if (enabled) {\n    safeStorage('localStorage').setItem(experimentsDebugScoringKey, '1')\n  } else {\n    safeStorage('localStorage').removeItem(experimentsDebugScoringKey)\n  }\n}\n","// important to import type so we don't bring in all the code\nimport type {BaseNode, ContentNode, QualifierNode, NodeWithChildren} from '@github/blackbird-parser'\n\nexport const enum CaretPositionKind {\n  Is,\n  Repository,\n  Owner,\n  Language,\n  Path,\n  Regex,\n  Text,\n  Saved,\n  OtherQualifier,\n}\n\nexport function isQualifier(node: BaseNode): node is QualifierNode {\n  return !!(node as QualifierNode).qualifier\n}\n\nexport function isSavedQualifier(node: BaseNode): node is QualifierNode {\n  return !!isQualifier(node) && node.qualifier === 'Saved'\n}\n\nconst slashRegex = new RegExp('\\\\/', 'g')\n\nexport function shouldRedirectInsteadOfSearch(node: BaseNode, path: string): string | null {\n  // If the entire user's query is `repo:a/b`, it doesn't make sense to search\n  // within the repository with no actual query. They probably want to navigate to\n  // the repository itself, so let's just direct them there instead.\n  if (isQualifier(node) && isContentNode(node.content)) {\n    if (node.qualifier === 'Repo') {\n      // Only redirect if it looks like a repository, i.e. contains exactly one slash\n      if ([...node.content.value.toString().matchAll(slashRegex)].length !== 1) {\n        return null\n      }\n    } else if (node.qualifier === 'Org') {\n      // Only redirect if it looks like an organization, i.e. contains exactly zero slashes\n      if ([...node.content.value.toString().matchAll(slashRegex)].length !== 0) {\n        return null\n      }\n    } else {\n      // Don't do this redirect behaviour for any other qualifier type\n      return null\n    }\n\n    // Disallow redirects to repositories or organizations that begin with a /, since\n    // that would form an absolute URL!\n    if (node.content.value.toString().startsWith('/')) {\n      return null\n    }\n\n    const redirectURL = `/${node.content.value.toString().split('/').map(encodeURIComponent).join('/')}`\n\n    // If the redirect would take them to the path they're already on, then it's pointless, so\n    // just do a search instead.\n    if (redirectURL === path) {\n      return null\n    }\n\n    return redirectURL\n  }\n\n  return null\n}\n\n// this function is unfortunately duplicated from @github/blackbird-parser so that the code that\n// uses it doesn't import that whole huge module\nexport function isContentNode(node: BaseNode): node is ContentNode {\n  return (node as ContentNode).value !== undefined\n}\n\nexport function hasChildren(node: BaseNode): node is NodeWithChildren {\n  return !!(node as NodeWithChildren).children\n}\n\nexport function containsQualifier(node: BaseNode, qualifierKind: string): boolean {\n  if (isQualifier(node) && node.qualifier === qualifierKind) {\n    return true\n  }\n\n  if (hasChildren(node)) {\n    for (const child of node.children) {\n      if (containsQualifier(child, qualifierKind)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\n// Extract all of the text nodes from the AST, ignoring qualifiers. For example,\n// the query `lang:typescript repo:github/atom asdf` would return `['asdf']`.\nexport function extractTextQuery(node: BaseNode): string {\n  if (hasChildren(node)) {\n    return node.children\n      .map(extractTextQuery)\n      .filter(x => x.length > 0)\n      .join(' ')\n  }\n\n  if (isQualifier(node) || node.kind === 'Regex') {\n    return ''\n  }\n\n  if (isContentNode(node)) {\n    return node.value.toString()\n  }\n\n  return ''\n}\n\ninterface RepoOrgScope {\n  kind: 'repo' | 'org' | 'saved'\n  value: string\n}\n\n// Extract all repo and orgs mentioned in the query\nexport function extractRepoOrgScopes(node: BaseNode): RepoOrgScope[] {\n  if (node.kind === 'Not') {\n    return []\n  }\n\n  if (hasChildren(node)) {\n    return node.children.map(extractRepoOrgScopes).flat()\n  }\n\n  if (isQualifier(node)) {\n    if (node.qualifier === 'Repo' && isContentNode(node.content)) {\n      return [{kind: 'repo', value: node.content.value.toString()}]\n    } else if (node.qualifier === 'Org' && isContentNode(node.content)) {\n      return [{kind: 'org', value: node.content.value.toString()}]\n    } else if (isSavedQualifier(node) && isContentNode(node.content)) {\n      return [{kind: 'saved', value: node.content.value.toString()}]\n    }\n  }\n  return []\n}\n\nexport function restrictToScopedOrgs(node: BaseNode, orgs: string[]): string[] {\n  const repoOrgScopes = new Set(\n    extractRepoOrgScopes(node)\n      .map(scope => {\n        if (scope.kind === 'org') {\n          return scope.value\n        } else if (scope.kind === 'repo' && scope.value.includes('/')) {\n          return scope.value.split('/')[0]\n        } else {\n          return null\n        }\n      })\n      .filter(s => s !== null)\n      .map(s => s?.toLowerCase()),\n  )\n\n  if (repoOrgScopes.size === 0) {\n    return orgs\n  }\n\n  return orgs.filter(org => repoOrgScopes.has(org.toLowerCase()))\n}\n","import '@github/details-menu-element'\nimport {attr, controller, target} from '@github/catalyst'\nimport {CaretPositionKind, shouldRedirectInsteadOfSearch} from './parsing/common'\n// `import type` so that we don't bring the parser code in on every page load\nimport type {BaseNode, FinalNode, NothingNode} from '@github/blackbird-parser'\nimport type {SuggestionInputState, CustomScope} from './suggestions/types'\nimport {logPageView} from '../../assets/modules/github/jump-to/page-views'\nimport type {ModalDialogElement} from '@primer/view-components/app/components/primer/alpha/modal_dialog'\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport {softNavigate} from '@github-ui/soft-navigate'\nimport {getBlackbirdExperiments} from './experiments'\nimport type {QueryBuilderElement, Provider} from '@github-ui/query-builder-element'\nimport {parseFileAnchor} from '../../assets/modules/github/blob-anchor'\nimport {\n  type QueryElement,\n  type QueryTextElement,\n  type Parser,\n  TextElementStyle,\n} from '@github-ui/query-builder-element/query-builder-api'\n\nimport {HistoryProvider} from './providers/history'\nimport {LanguagesProvider} from './providers/languages'\nimport {ReposFilterProvider, ReposSearchProvider} from './providers/repos'\nimport {SavedScopeProvider} from './providers/saved'\nimport {OwnersProvider} from './providers/owners'\nimport {FixedValuesProvider} from './providers/fixed'\nimport {TeamsProvider} from './providers/teams'\nimport {ProjectsProvider} from './providers/projects'\nimport {BlackbirdProvider} from './providers/blackbird'\nimport {InputProvider} from './providers/input'\nimport type {CustomScopesElement} from './custom-scopes-element'\n// eslint-disable-next-line import/no-namespace\nimport type * as Parsing from './parsing/parsing'\n/** minimum number of milliseconds between parsing input */\nconst parseDelay = 15\nconst nonBreakingSpace = String.fromCharCode(160)\n\nconst MAX_LOCAL_HISTORY = 50\n\n// eslint-disable-next-line i18n-text/no-en\nconst PLACEHOLDER_SAFE_HTML = 'Type <kbd class=\"AppHeader-search-kbd\">/</kbd> to search'\n\nexport interface ParsedIntermediateRepresentation {\n  ast?: FinalNode\n  query: string\n  caretPositionKind?: CaretPositionKind\n  caretSelectedNode?: BaseNode\n  customScopes?: CustomScope[]\n}\n\n@controller\nexport class QbsearchInputElement extends HTMLElement {\n  @target inputButton: HTMLButtonElement\n  @target inputButtonText: HTMLSpanElement\n  @target queryBuilder: QueryBuilderElement\n  @target queryBuilderContainer: HTMLDivElement\n\n  @target clearInputButton: HTMLButtonElement\n  @target clearInputButtonSeparator: HTMLDivElement\n\n  @target searchSuggestionsDialog: ModalDialogElement\n  @target suggestionHeadingTemplate: HTMLTemplateElement\n  @target suggestionTemplate: HTMLTemplateElement\n  @target darkBackdrop: HTMLDivElement\n\n  @target customScopesManager: CustomScopesElement\n\n  @target feedbackDialog: ModalDialogElement\n\n  @attr headerRedesignEnabled = false\n\n  #isReactContext: boolean\n  #eventAbortController: AbortController | undefined\n  #cachesHaveBeenWarmed = false\n  #globalNavAlwaysHidden = false\n  private lastParsedQuery: string | null\n  private ast: FinalNode | undefined\n  #caretPositionKind: CaretPositionKind = CaretPositionKind.Text\n  #caretSelectedNode: BaseNode | undefined\n  // the parsing module is loaded asynchronously\n  private parsing: typeof Parsing | undefined\n  private parsingPromise: Promise<typeof Parsing> | undefined\n  #customScopesSuggestionProvider: SavedScopeProvider\n  #dialogFocusReturn: HTMLElement | undefined\n  #returnFocusElement: HTMLElement | null = null\n  #customScopesUrlPath: string\n  #customScopeManagerInitialized = false\n\n  parser: Parser<ParsedIntermediateRepresentation> = {\n    parse: (query: string, caretPosition: number | undefined) => {\n      if (!this.parsing) {\n        // if there is no query, we don't need to load the parser and parse\n        // but if we are expanded we should go ahead and get it ready\n        if (query || this.classList.contains('expanded')) {\n          ;(async () => {\n            await this.loadParser()\n            // Trigger re-parse when parser is available\n            this.queryBuilder.parseQuery()\n          })()\n        }\n        return {\n          query,\n        }\n      }\n      const [ast] = this.parsing.parseSearchInput(query)\n      const customScopes = this.#findCustomScopesNeededForSearch(ast)\n\n      // If a caret position is specified, calculate caret position metadata\n      let caretPositionKind = undefined\n      let caretSelectedNode = undefined\n      if (caretPosition !== undefined) {\n        const caretData = this.parsing.getCaretPositionKindFromIndex(ast, caretPosition)\n        caretPositionKind = caretData.kind\n        caretSelectedNode = caretData.node\n      }\n\n      return {\n        ast,\n        query,\n        caretPositionKind,\n        caretSelectedNode,\n        customScopes,\n      }\n    },\n    flatten: this.flattenASTForQueryBuilder.bind(this),\n  }\n\n  get query() {\n    return this.queryBuilder.input?.value || ''\n  }\n\n  set query(v: string) {\n    // input can be undefined if the query builder has not been upgraded.\n    // it's ok to ignore this because we will update query in the whenDefined handler\n    if (this.queryBuilder.input) {\n      this.queryBuilder.input.value = v\n      this.queryBuilder.parseQuery()\n      this.setButtonText(v)\n      ;(async () => {\n        await this.parseSearchInputRaw()\n        this.syncRichButtonText()\n      })()\n    }\n  }\n\n  flattenASTForQueryBuilder(ir: ParsedIntermediateRepresentation): QueryElement[] {\n    const highlights = this.parsing?.getHighlights(ir.ast as BaseNode) || []\n    highlights.sort((a, b) => a.location.start - b.location.start)\n    let pos = 0\n    const output: QueryTextElement[] = []\n    for (const highlight of highlights) {\n      if (highlight.location.start > pos) {\n        output.push({\n          type: 'text',\n          value: ir.query.substring(pos, highlight.location.start),\n        })\n      }\n\n      if (pos > highlight.location.start) {\n        continue\n      }\n\n      let style = TextElementStyle.Normal\n      if (highlight.className === 'pl-en') {\n        style = TextElementStyle.Entity\n      } else if (highlight.className === 'pl-c1') {\n        style = TextElementStyle.Constant\n      } else if (highlight.className === 'input-parsed-symbol') {\n        style = TextElementStyle.FilterValue\n      }\n\n      output.push({\n        type: 'text',\n        value: ir.query.substring(highlight.location.start, highlight.location.end),\n        style,\n      })\n\n      pos = highlight.location.end\n    }\n\n    if (pos < ir.query.length) {\n      output.push({\n        type: 'text',\n        value: ir.query.substring(pos),\n      })\n    }\n\n    return output\n  }\n\n  isLoggedIn(): boolean {\n    return this.getAttribute('data-logged-in') === 'true'\n  }\n\n  copilotChatEnabled(): boolean {\n    return this.getAttribute('data-copilot-chat-enabled') === 'true'\n  }\n\n  connectedCallback(): void {\n    this.#isReactContext = false\n    if (this.isLoggedIn()) {\n      this.#customScopesUrlPath = this.getAttribute('data-custom-scopes-path') || ''\n      this.#customScopesSuggestionProvider = new SavedScopeProvider(this.queryBuilder, this.#customScopesUrlPath)\n      // Initialize custom scopes manager when it is loaded\n      ;(async () => {\n        await window.customElements.whenDefined('custom-scopes')\n        this.customScopesManager.initialize(\n          this.#customScopesSuggestionProvider.customScopesCache,\n          () => {\n            return this.#customScopesSuggestionProvider.fetchSuggestions()\n          },\n          this.#customScopesUrlPath,\n          this.getAttribute('data-delete-custom-scopes-csrf') || '',\n        )\n\n        this.#customScopeManagerInitialized = true\n      })()\n    }\n    // listen for react startup\n    const {signal} = (this.#eventAbortController = new AbortController())\n    window.addEventListener(\n      'blackbird_monolith_react_connected',\n      () => {\n        this.#isReactContext = true\n      },\n      {signal},\n    )\n\n    // Listen for when react disconnects. This can happen e.g. during a Turbo page navigation,\n    // where React is lost, but the search input isn't refreshed!\n    window.addEventListener(\n      'blackbird_monolith_react_disconnected',\n      () => {\n        this.#isReactContext = false\n      },\n      {signal},\n    )\n\n    window.addEventListener(\n      'blackbird_provide_feedback',\n      () => {\n        this.feedbackDialog.show()\n      },\n      {signal},\n    )\n\n    window.addEventListener(\n      'blackbird_monolith_set_global_nav_visibility',\n      event => {\n        const globalNavVisibility = (event as CustomEvent).detail\n        this.setGlobalNavVisibility(globalNavVisibility)\n        this.setGlobalBarAlwaysExpanded(!globalNavVisibility)\n\n        this.#globalNavAlwaysHidden = !globalNavVisibility\n\n        if (this.#globalNavAlwaysHidden) {\n          this.classList.add('flex-1')\n        } else {\n          this.classList.remove('flex-1')\n        }\n\n        this.setButtonText(this.query)\n      },\n      {signal},\n    )\n\n    // In case react loaded before we did, emit request to re-transmit react startup\n    window.dispatchEvent(new CustomEvent('blackbird_monolith_retransmit_react'))\n\n    window.addEventListener(\n      'blackbird_monolith_update_input',\n      event => {\n        this.query = (event as CustomEvent).detail\n      },\n      {signal},\n    )\n\n    window.addEventListener(\n      'blackbird_monolith_append_and_focus_input',\n      async event => {\n        const {\n          appendQuery,\n          retainScrollPosition,\n          returnTarget,\n        }: {appendQuery?: string; retainScrollPosition?: boolean; returnTarget?: HTMLElement} = (event as CustomEvent)\n          .detail\n\n        if (returnTarget && retainScrollPosition) {\n          this.expandAndRetainScrollPosition(returnTarget)\n        } else {\n          await this.expand()\n          if (returnTarget) {\n            this.#returnFocusElement = returnTarget\n          }\n        }\n\n        if (appendQuery && !this.query.trim().endsWith(appendQuery)) {\n          this.query += ` ${appendQuery}`\n        }\n        if (!this.parsing) {\n          await this.loadParser()\n        }\n        this.moveCaretToEndOfInput()\n        await this.parseSearchInputRaw()\n      },\n      {signal},\n    )\n\n    window.addEventListener(\n      'blackbird_monolith_save_query_as_custom_scope',\n      event => {\n        this.saveQueryAsCustomScope(event as CustomEvent<HTMLElement>)\n      },\n      {signal},\n    )\n    ;(async () => {\n      await window.customElements.whenDefined('query-builder')\n\n      const loggedInProviders: Provider[] = [\n        new HistoryProvider(this.queryBuilder),\n        new SavedScopeProvider(this.queryBuilder, this.#customScopesUrlPath),\n        new BlackbirdProvider(this.queryBuilder, this),\n      ]\n\n      const providers: Provider[] = [\n        new LanguagesProvider(this.queryBuilder),\n        new ReposFilterProvider(this.queryBuilder, this),\n        new ReposSearchProvider(this.queryBuilder, this),\n        new OwnersProvider(this.queryBuilder, this),\n        new FixedValuesProvider(this.queryBuilder),\n        new TeamsProvider(this.queryBuilder, this),\n        new ProjectsProvider(this.queryBuilder, this),\n        new InputProvider(this.queryBuilder, this, this.copilotChatEnabled()),\n      ]\n\n      if (this.isLoggedIn()) {\n        providers.push(...loggedInProviders)\n      }\n\n      this.queryBuilder.initialize(this.parser, providers)\n      // Sync the initial state with querybuilder\n      this.query = this.getAttribute('data-initial-value') || ''\n    })()\n\n    this.queryBuilder.parentElement?.addEventListener('submit', (event: Event) => {\n      this.search(this.queryBuilder.query)\n      this.retract()\n      this.queryBuilder.inputSubmit()\n      event.preventDefault()\n    })\n\n    this.queryBuilder.addEventListener('blackbird-monolith.manageCustomScopes', e => {\n      if (this.#customScopeManagerInitialized) {\n        this.#openManageCustomScopesDialog(e)\n      }\n    })\n\n    this.queryBuilder.addEventListener('query-builder:navigate', e => {\n      // If the navigation is a hash navigation, emit the scrollLineIntoView event\n      const href = (e as CustomEvent).detail?.url\n      if (href) {\n        const url = new URL(href, window.location.origin)\n        if (url.origin === window.location.origin && url.pathname === window.location.pathname) {\n          const anchInfo = parseFileAnchor(url.hash)\n          if (anchInfo.blobRange?.start?.line) {\n            window.dispatchEvent(\n              new CustomEvent('react_blob_view_scroll_line_into_view', {\n                detail: {line: anchInfo.blobRange.start.line},\n              }),\n            )\n          }\n        }\n      }\n      this.retract()\n    })\n\n    this.queryBuilder.addEventListener('blackbird-monolith.search', e => {\n      this.search((e as CustomEvent).detail?.query ?? '')\n    })\n\n    this.queryBuilder.addEventListener('search-copilot-chat', e => {\n      window.dispatchEvent(\n        new SearchCopilotEvent((e as CustomEvent).detail?.content, (e as CustomEvent).detail?.repoNwo),\n      )\n      this.retract()\n    })\n\n    // add current page to recently visited list for jump-to\n    logPageView(window.location.pathname)\n  }\n\n  syncRichButtonText() {\n    if (!this.#globalNavAlwaysHidden) {\n      return\n    }\n\n    if (this.query === '') {\n      const placeholder = this.inputButton.getAttribute('placeholder')\n      placeholder\n        ? (this.inputButtonText.textContent = this.inputButton.getAttribute('placeholder'))\n        : (this.inputButtonText.innerHTML = PLACEHOLDER_SAFE_HTML)\n      this.inputButton.classList.add('placeholder')\n    } else {\n      // TODO: get styled content from query builder\n      const flat = this.parser.flatten(this.parser.parse(this.query, undefined))\n\n      const segments = []\n      for (const el of flat) {\n        const span = document.createElement('span')\n        span.textContent = el.value\n        if (el.style === TextElementStyle.FilterValue) {\n          span.classList.add('input-parsed-symbol')\n        } else if (el.style === TextElementStyle.Constant) {\n          span.classList.add('pl-c1')\n        } else if (el.style === TextElementStyle.Entity) {\n          span.classList.add('pl-en')\n        }\n\n        segments.push(span)\n      }\n\n      this.inputButtonText.replaceChildren(...segments)\n    }\n  }\n\n  setButtonText(newText: string) {\n    // Only overwrite the button text if we're on a page with a wide search bar.\n    if (!this.#globalNavAlwaysHidden || newText.trim() === '') {\n      const placeholder = this.inputButton.getAttribute('placeholder')\n      if (placeholder) {\n        this.inputButtonText.textContent = this.inputButton.getAttribute('placeholder')\n      } else if (this.inputButtonText.innerHTML.trim() !== PLACEHOLDER_SAFE_HTML) {\n        this.inputButtonText.innerHTML = PLACEHOLDER_SAFE_HTML\n      }\n      this.inputButton.classList.add('placeholder')\n    } else {\n      this.inputButtonText.textContent = newText\n      this.inputButton.classList.remove('placeholder')\n    }\n  }\n\n  async moveCaretToEndOfInput() {\n    await window.customElements.whenDefined('query-builder')\n    this.queryBuilder.moveCaretToEndOfInput()\n  }\n\n  disconnectedCallback() {\n    this.#eventAbortController?.abort()\n  }\n\n  // todo: remove?\n  getSuggestionInputState(): SuggestionInputState {\n    let customScopes: CustomScope[] = []\n    if (this.ast) {\n      customScopes = this.#findCustomScopesNeededForSearch(this.ast)\n    }\n    return {\n      query: this.query.replaceAll(nonBreakingSpace, ' '),\n      ast: this.ast,\n      selectedNode: this.#caretSelectedNode,\n      mode: this.#caretPositionKind,\n      customScopes,\n      type: this.ast ? this.chooseSearchType(this.ast) : ('' as Parsing.SearchType),\n    }\n  }\n\n  setGlobalNavVisibility(visible: boolean) {\n    const globalNav = document.querySelector('#global-nav') as HTMLElement\n    const mediaQuery = window.matchMedia('(min-width: 768px)')\n    if (globalNav && mediaQuery.matches) {\n      globalNav.hidden = !visible\n    }\n  }\n\n  setGlobalBarAlwaysExpanded(alwaysExpanded: boolean) {\n    if (!this.headerRedesignEnabled) return\n\n    const globalBar = document.querySelector('.js-global-bar') as HTMLElement\n    if (globalBar) {\n      if (alwaysExpanded) {\n        globalBar.classList.add('always-expanded')\n      } else {\n        globalBar.classList.remove('always-expanded')\n      }\n    }\n  }\n\n  setGlobalBarModalOpen(modalOpen: boolean) {\n    if (!this.headerRedesignEnabled) return\n\n    const globalBar = document.querySelector('.js-global-bar') as HTMLElement\n    if (globalBar) {\n      if (modalOpen) {\n        globalBar.classList.add('search-expanded')\n      } else {\n        globalBar.classList.remove('search-expanded')\n      }\n    }\n  }\n\n  // NOTE: when the search input container is clicked directly, we should expand\n  // the search input. But pretty much everything inside it will bubble up click\n  // events here, so we should ignore clicks on any INNER element that bubbles\n  // up to the container.\n  searchInputContainerClicked(event: MouseEvent) {\n    if ((event.target as HTMLDivElement).classList.contains('search-input-container')) {\n      this.expand()\n    }\n    sendEvent('blackbird.click', {target: 'SEARCH_BOX'})\n  }\n\n  async updateQueryBuilderVisibility() {\n    await window.customElements.whenDefined('query-builder')\n    this.queryBuilderContainer.hidden = !this.classList.contains('expanded')\n    this.darkBackdrop.hidden = this.queryBuilderContainer.hidden\n  }\n\n  expandAndRetainScrollPosition(trigger: HTMLElement | null) {\n    if (window.scrollY > 200) {\n      this.classList.add('search-input-absolute')\n      this.style.top = `${window.scrollY + 25}px`\n      this.expand(true)\n      this.#returnFocusElement = trigger\n    } else {\n      this.expand()\n    }\n  }\n\n  handleExpand() {\n    this.expand(false)\n  }\n\n  async expand(retainScrollPosition?: boolean) {\n    this.possiblyWarmCaches()\n\n    if (this.classList.contains('expanded')) return\n\n    if (!retainScrollPosition) {\n      window.scrollTo(0, 0)\n    }\n\n    this.#returnFocusElement = this.inputButton\n    this.searchSuggestionsDialog.show()\n\n    this.classList.add('expanded')\n    this.setGlobalNavVisibility(false)\n    this.setGlobalBarModalOpen(true)\n    this.updateQueryBuilderVisibility()\n\n    // Ensure that querybuilder is connected\n    await window.customElements.whenDefined('query-builder')\n\n    if (this.query === '' && this.getAttribute('data-scope')) {\n      this.query = `${this.getAttribute('data-scope')} `\n    }\n\n    this.queryBuilder.inputFocus()\n    this.moveCaretToEndOfInput()\n    this.queryBuilder.inputChange()\n\n    this.parseSearchInputRaw()\n  }\n\n  handleClose = (e: Event) => {\n    this.syncRichButtonText()\n    this.classList.remove('expanded')\n    if (!this.#globalNavAlwaysHidden) {\n      this.setGlobalNavVisibility(true)\n    }\n    this.setGlobalBarModalOpen(false)\n    this.updateQueryBuilderVisibility()\n\n    e.preventDefault()\n\n    if (this.classList.contains('search-input-absolute')) {\n      this.classList.remove('search-input-absolute')\n    }\n\n    // When the dialog is closed, the focus gets moved to the search element by default\n    // We need to guarantee that this is called after that happens, so set a timeout for 0ms\n    // which will cause this to run on the next cycle.\n    setTimeout(() => {\n      this.#returnFocusElement?.focus()\n    }, 0)\n  }\n\n  retract = () => {\n    this.searchSuggestionsDialog.close()\n    this.#returnFocusElement?.focus()\n  }\n\n  possiblyWarmCaches() {\n    if (!this.#cachesHaveBeenWarmed && this.isLoggedIn()) {\n      this.#cachesHaveBeenWarmed = true\n      // This request warms the blackbird caches, making searches faster. It's\n      // OK to call repeatedly since it's a noop if the caches are already warm.\n      // We don't need to check for a valid response.\n      fetch('/search/warm_blackbird_caches', {\n        headers: {Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n      })\n    }\n  }\n\n  chooseSearchType(ast: BaseNode): Parsing.SearchType {\n    const type = new URLSearchParams(window.location.search).get('type') as Parsing.SearchTypeURLParameter\n    if (type) return this.parsing!.mapURLParamToSearchType(type)\n    return this.parsing!.chooseSearchType(ast, this.isLoggedIn())\n  }\n\n  async search(query: string, openInNewWindow = false) {\n    const parser = await this.loadParser()\n    const ast = parser.parseString(query)\n    const customScopes = this.#findCustomScopesNeededForSearch(ast)\n    const searchType = parser.mapSearchTypeToURLParam(this.chooseSearchType(ast))\n\n    const redirectURL = shouldRedirectInsteadOfSearch(ast, window.location.pathname)\n    if (redirectURL) {\n      softNavigate(redirectURL)\n      return\n    }\n\n    if (this.#isReactContext && !openInNewWindow) {\n      const searchParams: {\n        type: Parsing.SearchTypeURLParameter\n        saved_searches?: string\n        p: null\n        l: null\n        expanded_query?: string\n      } = {\n        type: searchType,\n        // Set page to null so that the search jumps us back to page zero\n        p: null,\n        l: null,\n      }\n\n      if (customScopes.length > 0) {\n        searchParams['saved_searches'] = JSON.stringify(customScopes)\n        searchParams['expanded_query'] = parser.getExpandedQuery(query, customScopes, ast)\n      } else {\n        // Set to undefined to clear them from the URL when there are no saved searches in query\n        searchParams['saved_searches'] = undefined\n        searchParams['expanded_query'] = undefined\n      }\n\n      // If we're in a react context, then allow react to do the searching for us\n      window.dispatchEvent(\n        new CustomEvent('blackbird_monolith_search', {\n          detail: {\n            search: query,\n            searchParams,\n          },\n        }),\n      )\n    } else {\n      // If we're not in a react context, then we need to do the search ourselves\n      let typeParam = ''\n      if (searchType !== '') {\n        typeParam = `&type=${encodeURIComponent(searchType)}`\n      }\n\n      let href = `/search?q=${encodeURIComponent(query)}${typeParam}`\n\n      // Only add the saved_searches param if it's not empty\n      if (customScopes.length > 0) {\n        href += `&saved_searches=${encodeURIComponent(JSON.stringify(customScopes))}`\n        const expandedQuery = encodeURIComponent(parser.getExpandedQuery(query, customScopes, ast))\n        href += `&expanded_query=${expandedQuery}`\n      }\n\n      const experimentsParam = getBlackbirdExperiments().join(',')\n      if (experimentsParam !== '') {\n        href += `&experiments=${experimentsParam}`\n      }\n\n      if (openInNewWindow) {\n        // this actually usually goes to a new tab, except in Chrome and Safari where if you use shift+enter, it opens in a new window for magical reasons\n        window.open(href, '_blank')\n      } else {\n        softNavigate(href)\n      }\n    }\n  }\n\n  #findCustomScopesNeededForSearch(ast: BaseNode): CustomScope[] {\n    // It shouldn't be possible for parsing not to be loaded here, since we are\n    // being passed a parsed AST.\n    if (!this.parsing) {\n      return []\n    }\n\n    const customScopeNames = this.parsing.getCustomScopeNames(ast)\n\n    let customScopesFromUrl: CustomScope[]\n    try {\n      customScopesFromUrl = JSON.parse(new URLSearchParams(window.location.search).get('saved_searches') || '[]')\n      if (!Array.isArray(customScopesFromUrl)) {\n        customScopesFromUrl = []\n      }\n    } catch (e) {\n      customScopesFromUrl = []\n    }\n\n    const customScopesNeededForSearch: CustomScope[] = []\n    for (const customScopeName of customScopeNames) {\n      const customScope =\n        customScopesFromUrl.find(scope => scope.name === customScopeName) ||\n        this.#customScopesSuggestionProvider.customScopesCache.get()?.find(scope => scope.name === customScopeName)\n      if (customScope) {\n        customScopesNeededForSearch.push({name: customScope.name, query: customScope.query} as CustomScope)\n      }\n    }\n    return customScopesNeededForSearch\n  }\n\n  setLocalHistory(query: string) {\n    // Don't save empty queries\n    if (query.trim() === '') return\n\n    let localStorage: string[] = JSON.parse(window.localStorage.getItem('github-search-history') ?? '[]')\n    if (localStorage.length >= MAX_LOCAL_HISTORY) {\n      // keep the last 50 items\n      localStorage = localStorage.slice(0, MAX_LOCAL_HISTORY - 1)\n    }\n\n    if (!localStorage.find(item => item.toLowerCase() === query.toLowerCase())) {\n      localStorage.unshift(query)\n    }\n\n    window.localStorage.setItem('github-search-history', JSON.stringify(localStorage))\n  }\n\n  handleChange() {\n    this.parseSearchInput()\n  }\n\n  async loadParser() {\n    if (!this.parsingPromise) {\n      this.parsingPromise = import('./parsing/parsing')\n      this.parsing = await this.parsingPromise\n    }\n    return this.parsingPromise\n  }\n\n  #waitingToParse = false\n  #lastParseTime = 0\n  parseSearchInput() {\n    // the throttle() function in @github/mini-throttle is broken (although debounce() works), so\n    // implement our own throttling here until that gets fixed\n    const now = Date.now()\n    if (now - this.#lastParseTime > parseDelay && !this.#waitingToParse) {\n      this.parseSearchInputRaw()\n    } else if (!this.#waitingToParse) {\n      this.#waitingToParse = true\n      setTimeout(\n        () => {\n          this.#waitingToParse = false\n          this.parseSearchInputRaw()\n        },\n        parseDelay - (now - this.#lastParseTime),\n      )\n    }\n  }\n\n  // NOTE: this is the non-debounced version of parseSearchInput\n  async parseSearchInputRaw() {\n    if (!this.query) {\n      // if the query is blank we don't need to parse or load the parser\n      this.lastParsedQuery = this.query\n      this.ast = {kind: 'Nothing'} as NothingNode\n      this.#caretPositionKind = CaretPositionKind.Text\n      this.#caretSelectedNode = undefined\n      return\n    }\n\n    if (!this.parsing) {\n      await this.loadParser()\n    }\n\n    this.#lastParseTime = Date.now()\n    if (!this.ast || this.query !== this.lastParsedQuery) {\n      this.lastParsedQuery = this.query\n      const [ast /*, nodes */] = this.parsing!.parseSearchInput(this.lastParsedQuery)\n      this.ast = ast\n    }\n\n    // TODO: get caret position properly\n    const caretData = this.parsing!.getCaretPositionKindFromIndex(this.ast, 0)\n    this.#caretPositionKind = caretData.kind\n    this.#caretSelectedNode = caretData.node\n  }\n\n  handleSubmit(openInNewWindow = false) {\n    // If the query is totally empty, just do nothing and ignore it\n    if (this.query.trim().length === 0) {\n      return\n    }\n\n    this.setLocalHistory(this.query)\n    this.search(this.query, openInNewWindow)\n    this.retract()\n  }\n\n  editCustomScope(event: Event) {\n    this.customScopesManager.editCustomScope(event)\n  }\n\n  async #openManageCustomScopesDialog(event: Event) {\n    this.retract()\n    this.customScopesManager.show()\n\n    // Stop propagation so that the scope isn't also selected\n    event.stopPropagation()\n  }\n\n  newCustomScope(event: Event) {\n    this.customScopesManager.create('')\n    event.stopPropagation()\n  }\n\n  saveQueryAsCustomScope(event: CustomEvent<HTMLElement>) {\n    this.customScopesManager.create(this.query)\n    this.#dialogFocusReturn = event.detail\n  }\n\n  handleDialogClose() {\n    // after the dialog closes, attempt to return the focus to the element that opened it\n    setTimeout(() => {\n      if (this.#dialogFocusReturn) {\n        this.#dialogFocusReturn?.focus()\n        this.#dialogFocusReturn = undefined\n      } else {\n        this.inputButton.focus()\n      }\n    })\n  }\n\n  showFeedbackDialog(event: Event) {\n    this.feedbackDialog.show()\n    this.retract()\n    // Stop propagation so that the modal will stay open\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  async submitFeedback(event: Event) {\n    event.preventDefault()\n\n    const form = (event.target as HTMLButtonElement).form!\n    await fetch(form.action, {\n      method: 'POST',\n      body: new FormData(form),\n    })\n    this.feedbackDialog.close()\n  }\n}\n\nclass SearchCopilotEvent extends Event {\n  declare content: string\n  declare repoNwo: string\n  constructor(content: string, repoNwo: string) {\n    super('search-copilot-chat', {\n      bubbles: false,\n      cancelable: true,\n    })\n\n    this.content = content\n    this.repoNwo = repoNwo\n  }\n}\n","import type {SearchProvider, QueryEvent} from '@github-ui/query-builder-element/query-builder-api'\nimport {SearchItem, Octicon} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport safeStorage from '@github-ui/safe-storage'\nimport {CaretPositionKind} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\n\nconst safeLocalStorage = safeStorage('localStorage')\n\nexport class HistoryProvider extends EventTarget implements SearchProvider {\n  priority = 5\n  name = 'History'\n  singularItemName = 'history'\n  value = 'history'\n  type = 'search' as const\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n  }\n\n  handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n    if (!state || state.caretPositionKind !== CaretPositionKind.Text) {\n      return []\n    }\n\n    const query = event.toString()\n    let suggestions: string[] = JSON.parse(safeLocalStorage.getItem('github-search-history') ?? '[]')\n\n    const trimmedQuery = state.query.trim()\n    if (trimmedQuery.length !== 0) {\n      return []\n    }\n\n    // Deduplicate suggestions\n    const seen: Record<string, boolean> = {}\n    suggestions = suggestions.filter(item => {\n      if (!seen[item]) {\n        seen[item] = true\n        return true\n      }\n      return false\n    })\n\n    let suggestionCount = 0\n    for (const suggestion of suggestions) {\n      if (suggestionCount >= 5) break\n\n      const historyQuery = suggestion.trim()\n      if (historyQuery.startsWith(query)) {\n        suggestionCount += 1\n        this.dispatchEvent(\n          new SearchItem({\n            value: historyQuery,\n            icon: Octicon.Search,\n            scope: 'GENERAL',\n            priority: historyQuery.length,\n            action: {url: `/search?q=${historyQuery}`},\n          }),\n        )\n      }\n    }\n  }\n}\n","export interface Language {\n  name: string\n  color: string\n}\n\n// NOTE: this is not intended to be an exhaustive list of supported languages,\n// but just a list suitable to be rendered as suggestions. The list is copied\n// from Enry's data (which is what is used within Blackbird's backend), see\n// https://github.com/src-d/enry/blob/master/data/colors.go\nexport const PopularLanguages: Language[] = [\n  {name: 'C++', color: '#f34b7d'},\n  {name: 'Go', color: '#00ADD8'},\n  {name: 'Java', color: '#b07219'},\n  {name: 'JavaScript', color: '#f1e05a'},\n  {name: 'PHP', color: '#4F5D95'},\n  {name: 'Python', color: '#3572A5'},\n  {name: 'Ruby', color: '#701516'},\n  {name: 'TypeScript', color: '#2b7489'},\n  {name: 'ABAP', color: '#E8274B'},\n  {name: 'AGS Script', color: '#B9D9FF'},\n  {name: 'AMPL', color: '#E6EFBB'},\n  {name: 'ANTLR', color: '#9DC3FF'},\n  {name: 'API Blueprint', color: '#2ACCA8'},\n  {name: 'APL', color: '#5A8164'},\n  {name: 'ASP', color: '#6a40fd'},\n  {name: 'ATS', color: '#1ac620'},\n  {name: 'ActionScript', color: '#882B0F'},\n  {name: 'Ada', color: '#02f88c'},\n  {name: 'Agda', color: '#315665'},\n  {name: 'Alloy', color: '#64C800'},\n  {name: 'AngelScript', color: '#C7D7DC'},\n  {name: 'AppleScript', color: '#101F1F'},\n  {name: 'Arc', color: '#aa2afe'},\n  {name: 'AspectJ', color: '#a957b0'},\n  {name: 'Assembly', color: '#6E4C13'},\n  {name: 'Asymptote', color: '#4a0c0c'},\n  {name: 'AutoHotkey', color: '#6594b9'},\n  {name: 'AutoIt', color: '#1C3552'},\n  {name: 'Ballerina', color: '#FF5000'},\n  {name: 'Batchfile', color: '#C1F12E'},\n  {name: 'BlitzMax', color: '#cd6400'},\n  {name: 'Boo', color: '#d4bec1'},\n  {name: 'C', color: '#555555'},\n  {name: 'C#', color: '#178600'},\n  {name: 'CSS', color: '#563d7c'},\n  {name: 'Ceylon', color: '#dfa535'},\n  {name: 'Chapel', color: '#8dc63f'},\n  {name: 'Cirru', color: '#ccccff'},\n  {name: 'Clarion', color: '#db901e'},\n  {name: 'Clean', color: '#3F85AF'},\n  {name: 'Click', color: '#E4E6F3'},\n  {name: 'Clojure', color: '#db5855'},\n  {name: 'CoffeeScript', color: '#244776'},\n  {name: 'ColdFusion', color: '#ed2cd6'},\n  {name: 'Common Lisp', color: '#3fb68b'},\n  {name: 'Common Workflow Language', color: '#B5314C'},\n  {name: 'Component Pascal', color: '#B0CE4E'},\n  {name: 'Crystal', color: '#000100'},\n  {name: 'Cuda', color: '#3A4E3A'},\n  {name: 'D', color: '#ba595e'},\n  {name: 'DM', color: '#447265'},\n  {name: 'Dart', color: '#00B4AB'},\n  {name: 'DataWeave', color: '#003a52'},\n  {name: 'Dhall', color: '#dfafff'},\n  {name: 'Dockerfile', color: '#384d54'},\n  {name: 'Dogescript', color: '#cca760'},\n  {name: 'Dylan', color: '#6c616e'},\n  {name: 'E', color: '#ccce35'},\n  {name: 'ECL', color: '#8a1267'},\n  {name: 'EQ', color: '#a78649'},\n  {name: 'Eiffel', color: '#946d57'},\n  {name: 'Elixir', color: '#6e4a7e'},\n  {name: 'Elm', color: '#60B5CC'},\n  {name: 'Emacs Lisp', color: '#c065db'},\n  {name: 'EmberScript', color: '#FFF4F3'},\n  {name: 'Erlang', color: '#B83998'},\n  {name: 'F#', color: '#b845fc'},\n  {name: 'F*', color: '#572e30'},\n  {name: 'FLUX', color: '#88ccff'},\n  {name: 'Factor', color: '#636746'},\n  {name: 'Fancy', color: '#7b9db4'},\n  {name: 'Fantom', color: '#14253c'},\n  {name: 'Forth', color: '#341708'},\n  {name: 'Fortran', color: '#4d41b1'},\n  {name: 'FreeMarker', color: '#0050b2'},\n  {name: 'Frege', color: '#00cafe'},\n  {name: 'G-code', color: '#D08CF2'},\n  {name: 'GDScript', color: '#355570'},\n  {name: 'Game Maker Language', color: '#71b417'},\n  {name: 'Genie', color: '#fb855d'},\n  {name: 'Gherkin', color: '#5B2063'},\n  {name: 'Glyph', color: '#c1ac7f'},\n  {name: 'Gnuplot', color: '#f0a9f0'},\n  {name: 'Groovy', color: '#e69f56'},\n  {name: 'HTML', color: '#e34c26'},\n  {name: 'Hack', color: '#878787'},\n  {name: 'Harbour', color: '#0e60e3'},\n  {name: 'Haskell', color: '#5e5086'},\n  {name: 'Haxe', color: '#df7900'},\n  {name: 'HiveQL', color: '#dce200'},\n  {name: 'HolyC', color: '#ffefaf'},\n  {name: 'Hy', color: '#7790B2'},\n  {name: 'IDL', color: '#a3522f'},\n  {name: 'Idris', color: '#b30000'},\n  {name: 'Io', color: '#a9188d'},\n  {name: 'Ioke', color: '#078193'},\n  {name: 'Isabelle', color: '#FEFE00'},\n  {name: 'J', color: '#9EEDFF'},\n  {name: 'JSONiq', color: '#40d47e'},\n  {name: 'Jolie', color: '#843179'},\n  {name: 'Jsonnet', color: '#0064bd'},\n  {name: 'Julia', color: '#a270ba'},\n  {name: 'Jupyter Notebook', color: '#DA5B0B'},\n  {name: 'KRL', color: '#28430A'},\n  {name: 'Kotlin', color: '#F18E33'},\n  {name: 'LFE', color: '#4C3023'},\n  {name: 'LLVM', color: '#185619'},\n  {name: 'LSL', color: '#3d9970'},\n  {name: 'Lasso', color: '#999999'},\n  {name: 'Lex', color: '#DBCA00'},\n  {name: 'LiveScript', color: '#499886'},\n  {name: 'LookML', color: '#652B81'},\n  {name: 'Lua', color: '#000080'},\n  {name: 'MATLAB', color: '#e16737'},\n  {name: 'MAXScript', color: '#00a6a6'},\n  {name: 'MQL4', color: '#62A8D6'},\n  {name: 'MQL5', color: '#4A76B8'},\n  {name: 'MTML', color: '#b7e1f4'},\n  {name: 'Makefile', color: '#427819'},\n  {name: 'Markdown', color: '#083fa1'},\n  {name: 'Mask', color: '#f97732'},\n  {name: 'Max', color: '#c4a79c'},\n  {name: 'Mercury', color: '#ff2b2b'},\n  {name: 'Meson', color: '#007800'},\n  {name: 'Metal', color: '#8f14e9'},\n  {name: 'Mirah', color: '#c7a938'},\n  {name: 'Modula-3', color: '#223388'},\n  {name: 'NCL', color: '#28431f'},\n  {name: 'Nearley', color: '#990000'},\n  {name: 'Nemerle', color: '#3d3c6e'},\n  {name: 'NetLinx', color: '#0aa0ff'},\n  {name: 'NetLinx+ERB', color: '#747faa'},\n  {name: 'NetLogo', color: '#ff6375'},\n  {name: 'NewLisp', color: '#87AED7'},\n  {name: 'Nextflow', color: '#3ac486'},\n  {name: 'Nim', color: '#37775b'},\n  {name: 'Nit', color: '#009917'},\n  {name: 'Nix', color: '#7e7eff'},\n  {name: 'Nu', color: '#c9df40'},\n  {name: 'OCaml', color: '#3be133'},\n  {name: 'ObjectScript', color: '#424893'},\n  {name: 'Objective-C', color: '#438eff'},\n  {name: 'Objective-C++', color: '#6866fb'},\n  {name: 'Objective-J', color: '#ff0c5a'},\n  {name: 'Omgrofl', color: '#cabbff'},\n  {name: 'Opal', color: '#f7ede0'},\n  {name: 'Oxygene', color: '#cdd0e3'},\n  {name: 'Oz', color: '#fab738'},\n  {name: 'P4', color: '#7055b5'},\n  {name: 'PLSQL', color: '#dad8d8'},\n  {name: 'Pan', color: '#cc0000'},\n  {name: 'Papyrus', color: '#6600cc'},\n  {name: 'Parrot', color: '#f3ca0a'},\n  {name: 'Pascal', color: '#E3F171'},\n  {name: 'Pawn', color: '#dbb284'},\n  {name: 'Pep8', color: '#C76F5B'},\n  {name: 'Perl', color: '#0298c3'},\n  {name: 'Perl 6', color: '#0000fb'},\n  {name: 'PigLatin', color: '#fcd7de'},\n  {name: 'Pike', color: '#005390'},\n  {name: 'PogoScript', color: '#d80074'},\n  {name: 'PostScript', color: '#da291c'},\n  {name: 'PowerBuilder', color: '#8f0f8d'},\n  {name: 'PowerShell', color: '#012456'},\n  {name: 'Processing', color: '#0096D8'},\n  {name: 'Prolog', color: '#74283c'},\n  {name: 'Propeller Spin', color: '#7fa2a7'},\n  {name: 'Puppet', color: '#302B6D'},\n  {name: 'PureBasic', color: '#5a6986'},\n  {name: 'PureScript', color: '#1D222D'},\n  {name: 'Protocol Buffers', color: '#CCCCCC'},\n  {name: 'QML', color: '#44a51c'},\n  {name: 'Quake', color: '#882233'},\n  {name: 'R', color: '#198CE7'},\n  {name: 'RAML', color: '#77d9fb'},\n  {name: 'Racket', color: '#3c5caa'},\n  {name: 'Ragel', color: '#9d5200'},\n  {name: 'Rascal', color: '#fffaa0'},\n  {name: 'Rebol', color: '#358a5b'},\n  {name: 'Red', color: '#f50000'},\n  {name: \"Ren'Py\", color: '#ff7f7f'},\n  {name: 'Ring', color: '#2D54CB'},\n  {name: 'Roff', color: '#ecdebe'},\n  {name: 'Rouge', color: '#cc0088'},\n  {name: 'Rust', color: '#dea584'},\n  {name: 'SAS', color: '#B34936'},\n  {name: 'SQF', color: '#3F3F3F'},\n  {name: 'SQL', color: '#e38c00'},\n  {name: 'SRecode Template', color: '#348a34'},\n  {name: 'SaltStack', color: '#646464'},\n  {name: 'Scala', color: '#c22d40'},\n  {name: 'Scheme', color: '#1e4aec'},\n  {name: 'Self', color: '#0579aa'},\n  {name: 'Shell', color: '#89e051'},\n  {name: 'Shen', color: '#120F14'},\n  {name: 'Slash', color: '#007eff'},\n  {name: 'Slice', color: '#003fa2'},\n  {name: 'Smalltalk', color: '#596706'},\n  {name: 'Solidity', color: '#AA6746'},\n  {name: 'SourcePawn', color: '#5c7611'},\n  {name: 'Squirrel', color: '#800000'},\n  {name: 'Stan', color: '#b2011d'},\n  {name: 'Standard ML', color: '#dc566d'},\n  {name: 'SuperCollider', color: '#46390b'},\n  {name: 'Swift', color: '#ffac45'},\n  {name: 'SystemVerilog', color: '#DAE1C2'},\n  {name: 'TI Program', color: '#A0AA87'},\n  {name: 'Tcl', color: '#e4cc98'},\n  {name: 'TeX', color: '#3D6117'},\n  {name: 'Terra', color: '#00004c'},\n  {name: 'Turing', color: '#cf142b'},\n  {name: 'UnrealScript', color: '#a54c4d'},\n  {name: 'VCL', color: '#148AA8'},\n  {name: 'VHDL', color: '#adb2cb'},\n  {name: 'Vala', color: '#fbe5cd'},\n  {name: 'Verilog', color: '#b2b7f8'},\n  {name: 'Vim script', color: '#199f4b'},\n  {name: 'Visual Basic', color: '#945db7'},\n  {name: 'Volt', color: '#1F1F1F'},\n  {name: 'Vue', color: '#2c3e50'},\n  {name: 'WebAssembly', color: '#04133b'},\n  {name: 'Wollok', color: '#a23738'},\n  {name: 'X10', color: '#4B6BEF'},\n  {name: 'XC', color: '#99DA07'},\n  {name: 'XQuery', color: '#5232e7'},\n  {name: 'XSLT', color: '#EB8CEB'},\n  {name: 'YARA', color: '#220000'},\n  {name: 'YASnippet', color: '#32AB90'},\n  {name: 'Yacc', color: '#4B6C4B'},\n  {name: 'ZAP', color: '#0d665e'},\n  {name: 'ZIL', color: '#dc75e5'},\n  {name: 'ZenScript', color: '#00BCD1'},\n  {name: 'Zephir', color: '#118f9e'},\n  {name: 'Zig', color: '#ec915c'},\n  {name: 'eC', color: '#913960'},\n  {name: 'mcfunction', color: '#E22837'},\n  {name: 'nesC', color: '#94B0C7'},\n  {name: 'ooc', color: '#b0b77e'},\n  {name: 'sed', color: '#64b970'},\n  {name: 'wdl', color: '#42f1f4'},\n  {name: 'wisp', color: '#7582D1'},\n  {name: 'xBase', color: '#403a40'},\n]\n","import {filterSort} from '../../../assets/modules/github/filter-sort'\nimport {html} from '@github-ui/jtml-shimmed'\nimport {compare, fuzzyScore} from '../../../assets/modules/github/fuzzy-filter'\nimport type {QueryEvent, CustomIcon, FilterProvider} from '@github-ui/query-builder-element/query-builder-api'\nimport {FilterItem} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport type {Language} from '../suggestions/languages'\nimport {PopularLanguages} from '../suggestions/languages'\nimport {CaretPositionKind, isContentNode, isQualifier} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\n\nexport class LanguagesProvider extends EventTarget implements FilterProvider {\n  priority = 10\n  name = 'Languages'\n  singularItemName = 'language'\n  value = 'language'\n  type = 'filter' as const\n  manuallyDetermineFilterEligibility = true\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n  }\n\n  #icon(color: string): CustomIcon {\n    const node = document.createElement('div')\n    const tmpl = html`<div\n      style=\"border-radius: 8px; display: inline-block; height: 10px; width: 10px; background-color: ${color}\"\n    ></div>`\n\n    tmpl.renderInto(node)\n\n    return {\n      html: node.innerHTML as SafeHTMLString,\n    }\n  }\n\n  handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (!state || state.caretPositionKind !== CaretPositionKind.Language) {\n      return []\n    }\n\n    let term = ''\n\n    if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n      if (isContentNode(state.caretSelectedNode.content)) {\n        term = state.caretSelectedNode.content.value as string\n      }\n    } else {\n      return []\n    }\n\n    let suggestions: Language[] = PopularLanguages.slice(0, 7)\n    if (term.length === 1) {\n      suggestions = PopularLanguages.filter(r => r.name.startsWith(term.toUpperCase())).slice(0, 7)\n    } else if (term.length > 1) {\n      const fuzzyQuery = term.replace(/\\s/g, '')\n      const key = (r: {name: string; color: string}) => {\n        const score = fuzzyScore(r.name, fuzzyQuery)\n        return score > 0 ? {score, text: r.name} : null\n      }\n      suggestions = filterSort(PopularLanguages, key, compare)\n    }\n\n    const suggestionCount = 0\n    for (const suggestion of suggestions) {\n      if (suggestionCount >= 8) break\n\n      let rewriteStart = state.caretSelectedNode.location.end\n      let rewriteEnd = state.caretSelectedNode.location.end\n      if (isContentNode(state.caretSelectedNode.content)) {\n        rewriteStart = state.caretSelectedNode.content.location.start\n        rewriteEnd = state.caretSelectedNode.content.location.end\n      }\n\n      const quotedName = suggestion.name.includes(' ') ? `\"${suggestion.name}\"` : suggestion.name\n      const newQuery = `${state.query.slice(0, rewriteStart) + quotedName} ${state.query.slice(rewriteEnd)}`\n\n      this.dispatchEvent(\n        new FilterItem({\n          filter: 'lang',\n          value: suggestion.name,\n          icon: this.#icon(suggestion.color),\n          priority: 0,\n          action: {\n            query: newQuery,\n            replaceQueryWith: newQuery,\n            moveCaretTo: rewriteStart + quotedName.length + 1,\n          },\n        }),\n      )\n    }\n  }\n}\n","import {filterSort} from '../../../assets/modules/github/filter-sort'\nimport {compare, fuzzyScore} from '../../../assets/modules/github/fuzzy-filter'\nimport type {\n  QueryEvent,\n  FilterProvider,\n  QueryBuilderAction,\n  SearchProvider,\n} from '@github-ui/query-builder-element/query-builder-api'\nimport {FilterItem, Octicon, SearchItem} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport {getSuggestions} from '../../../assets/modules/github/jump-to'\nimport {CaretPositionKind, extractRepoOrgScopes, extractTextQuery, isContentNode, isQualifier} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\n\nclass ReposProviderBase extends EventTarget {\n  #input: HTMLElement\n  #suggestedRepos: string[] | null = null\n\n  constructor(input: HTMLElement) {\n    super()\n    this.#input = input\n  }\n\n  protected async getMatchingRepositories({state}: {state: ParsedIntermediateRepresentation}) {\n    let term = ''\n    const scopedOrgs: string[] = []\n    if (state.ast) {\n      const scopes = extractRepoOrgScopes(state.ast)\n      let isScopedToRepository = false\n      for (const scope of scopes) {\n        if (scope.kind === 'repo' || scope.kind === 'saved') {\n          isScopedToRepository = true\n        } else if (scope.kind === 'org') {\n          scopedOrgs.push(scope.value.toLowerCase())\n        }\n      }\n\n      // Don't suggest repositories if we are scoped to a repo and aren't currently\n      // editing that qualifier\n      if (isScopedToRepository && state.caretPositionKind !== CaretPositionKind.Repository) {\n        return []\n      }\n\n      term = extractTextQuery(state.ast)\n    }\n\n    if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n      if (isContentNode(state.caretSelectedNode.content)) {\n        term = state.caretSelectedNode.content.value as string\n      } else {\n        term = ''\n      }\n    }\n\n    if (this.#suggestedRepos === null) {\n      this.#suggestedRepos = (await getSuggestions(this.#input)).filter(r => r.type === 'Repository').map(r => r.name)\n    }\n\n    let matches = this.#suggestedRepos\n    if (term.length > 0) {\n      const fuzzyQuery = term.replace(/\\s/g, '')\n      const key = (r: string) => {\n        const score = fuzzyScore(r, fuzzyQuery)\n        return score > 0 ? {score, text: r} : null\n      }\n      matches = filterSort(this.#suggestedRepos, key, compare)\n    }\n\n    // Filter matches match orgs specified in the query\n    if (scopedOrgs.length > 0) {\n      matches = matches.filter(r => {\n        const org = r.split('/')[0]!.toLowerCase()\n        return scopedOrgs.find(o => org.startsWith(o))\n      })\n    }\n\n    return matches\n  }\n}\n\nexport class ReposFilterProvider extends ReposProviderBase implements FilterProvider {\n  priority = 6\n  name = 'Repositories'\n  singularItemName = 'repository'\n  value = 'repository-filter'\n  type = 'filter' as const\n  manuallyDetermineFilterEligibility = true\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    input: HTMLElement,\n  ) {\n    super(input)\n    this.queryBuilder.addEventListener('query', this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (!state) {\n      return []\n    }\n\n    if (\n      state.caretPositionKind !== CaretPositionKind.Repository &&\n      state.caretPositionKind !== CaretPositionKind.Owner\n    ) {\n      return []\n    }\n\n    const matches = await this.getMatchingRepositories({state})\n\n    for (const suggestion of matches.slice(0, 5)) {\n      let action: QueryBuilderAction = {\n        url: `/${suggestion}`,\n      }\n\n      if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n        let rewriteStart = state.caretSelectedNode.location.end\n        let rewriteEnd = state.caretSelectedNode.location.end\n        if (isContentNode(state.caretSelectedNode.content)) {\n          rewriteStart = state.caretSelectedNode.content.location.start\n          rewriteEnd = state.caretSelectedNode.content.location.end\n        }\n\n        const newQuery = `${state.query.slice(0, rewriteStart) + suggestion} ${state.query.slice(rewriteEnd)}`\n        action = {\n          replaceQueryWith: newQuery,\n          moveCaretTo: rewriteStart + suggestion.length + 1,\n        }\n      }\n\n      this.dispatchEvent(\n        new FilterItem({\n          filter: 'repo',\n          value: suggestion,\n          icon: Octicon.Repo,\n          priority: 0,\n          action,\n        }),\n      )\n    }\n  }\n}\n\nexport class ReposSearchProvider extends ReposProviderBase implements SearchProvider {\n  priority = 6\n  name = 'Repositories'\n  singularItemName = 'repository'\n  value = 'repository-search'\n  type = 'search' as const\n  manuallyDetermineFilterEligibility = true\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    input: HTMLElement,\n  ) {\n    super(input)\n    this.queryBuilder.addEventListener('query', this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n    if (!state || state.caretPositionKind !== CaretPositionKind.Text) {\n      return []\n    }\n\n    const matches = await this.getMatchingRepositories({\n      state,\n    })\n\n    for (const suggestion of matches.slice(0, 5)) {\n      this.dispatchEvent(\n        new SearchItem({\n          value: suggestion,\n          icon: Octicon.Repo,\n          priority: 0,\n          action: {\n            url: `/${suggestion}`,\n          },\n        }),\n      )\n    }\n  }\n}\n","import {filterSort} from '../../../assets/modules/github/filter-sort'\nimport {compare, fuzzyScore} from '../../../assets/modules/github/fuzzy-filter'\nimport type {QueryEvent, SearchProvider} from '@github-ui/query-builder-element/query-builder-api'\nimport {Octicon, SearchItem} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport {CaretPositionKind, containsQualifier, isQualifier, isSavedQualifier, isContentNode} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\nimport type {CustomScope} from '../suggestions/types'\n\nexport class CustomScopeCache {\n  #cache: CustomScope[] = []\n  #filled: boolean\n\n  set(scopes: CustomScope[]) {\n    this.#cache = scopes\n    this.#filled = true\n  }\n\n  get() {\n    if (this.#filled) return this.#cache\n    return undefined\n  }\n\n  len() {\n    return this.#cache.length\n  }\n\n  clear() {\n    this.#filled = false\n    this.#cache = []\n  }\n}\n\nexport class SavedScopeProvider extends EventTarget implements SearchProvider {\n  priority = 4\n  name = 'Saved queries'\n  singularItemName = 'saved query'\n  value = 'saved query'\n  type = 'search' as const\n  #customScopesUrl: string | null\n  customScopesCache = new CustomScopeCache()\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    customScopesUrl: string,\n  ) {\n    super()\n    this.#customScopesUrl = customScopesUrl\n    this.queryBuilder.addEventListener('query', this)\n  }\n\n  async fetchSuggestions(): Promise<CustomScope[]> {\n    let data = []\n    if (this.#customScopesUrl) {\n      const response = await fetch(this.#customScopesUrl, {\n        method: 'GET',\n        mode: 'same-origin',\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n      if (!response.ok) {\n        return []\n      }\n      data = await response.json()\n      this.#replaceCustomScopesCache(data)\n    }\n    return data\n  }\n\n  #replaceCustomScopesCache(data: CustomScope[]): void {\n    this.customScopesCache.set(data)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (\n      !state ||\n      (state.caretPositionKind !== CaretPositionKind.Text && state.caretPositionKind !== CaretPositionKind.Saved)\n    ) {\n      return []\n    }\n\n    // If the query already contains a saved search, and the caret isn't over it, don't suggest any more\n    if (state.caretPositionKind !== CaretPositionKind.Saved && state.ast && containsQualifier(state.ast, 'Saved')) {\n      return []\n    }\n\n    // If the query already contains an org or repo term, don't suggest saved searches\n    if (state.ast && (containsQualifier(state.ast, 'Repo') || containsQualifier(state.ast, 'Org'))) {\n      return []\n    }\n\n    let term = ''\n    if (state.caretSelectedNode) {\n      if (isSavedQualifier(state.caretSelectedNode)) {\n        if (isContentNode(state.caretSelectedNode.content)) {\n          term = String(state.caretSelectedNode.content.value)\n        }\n      } else if (isContentNode(state.caretSelectedNode)) {\n        term = String(state.caretSelectedNode.value)\n      }\n    }\n\n    let suggestions = this.customScopesCache.get()\n    if (suggestions === undefined) {\n      suggestions = await this.fetchSuggestions()\n    }\n\n    if (term.trim().length > 0) {\n      // Remove whitespace and quotes (which can surround saved searches)\n      const fuzzyQuery = term.replace(/[\\s\"]/g, '')\n      const key = (s: CustomScope) => {\n        const score = fuzzyScore(s.name, fuzzyQuery)\n        return score > 0 ? {score, text: s.name} : null\n      }\n      suggestions = filterSort(suggestions, key, compare)\n    }\n\n    for (const suggestion of suggestions) {\n      const qualifier = 'saved:'\n\n      let quotedName = suggestion.name.includes(' ') ? `\"${suggestion.name}\"` : suggestion.name\n\n      let replaceQueryWith = ''\n      if (state.query.endsWith(' ') || state.query === '') {\n        replaceQueryWith = `${state.query}${qualifier + quotedName} `\n      } else {\n        replaceQueryWith = `${state.query} ${qualifier + quotedName} `\n      }\n      let moveCaretTo = replaceQueryWith.length\n\n      if (state.caretSelectedNode && (isContentNode(state.caretSelectedNode) || isQualifier(state.caretSelectedNode))) {\n        const rewriteStart = state.caretSelectedNode.location.start\n        let rewriteEnd = state.caretSelectedNode.location.end\n        if (isQualifier(state.caretSelectedNode) && isContentNode(state.caretSelectedNode.content)) {\n          rewriteEnd = state.caretSelectedNode.content.location.end\n        }\n\n        const queryStart = state.query.slice(0, rewriteStart)\n        const queryEnd = state.query.slice(rewriteEnd).trimEnd()\n        if (queryEnd === '') {\n          quotedName += ' ' // Add a space if the insertion is at the end\n        }\n\n        const newQuery = queryStart + qualifier + quotedName + queryEnd\n        replaceQueryWith = newQuery\n        moveCaretTo = rewriteStart + qualifier.length + quotedName.length\n      }\n\n      this.dispatchEvent(\n        new SearchItem({\n          value: `saved:${suggestion.name}`,\n          icon: Octicon.Bookmark,\n          priority: 0,\n          action: {\n            replaceQueryWith,\n            moveCaretTo,\n          },\n        }),\n      )\n    }\n\n    if (state.caretPositionKind === CaretPositionKind.Saved) {\n      this.dispatchEvent(\n        new SearchItem({\n          value: `Manage saved searches`,\n          icon: Octicon.PlusCircle,\n          scope: 'COMMAND',\n          priority: 0,\n          action: {\n            commandName: 'blackbird-monolith.manageCustomScopes',\n            data: {},\n          },\n        }),\n      )\n    }\n  }\n}\n","import {filterSort} from '../../../assets/modules/github/filter-sort'\nimport {compare, fuzzyScore} from '../../../assets/modules/github/fuzzy-filter'\nimport type {QueryEvent, SearchProvider, QueryBuilderAction} from '@github-ui/query-builder-element/query-builder-api'\nimport {SearchItem, Octicon} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport {getSuggestions} from '../../../assets/modules/github/jump-to'\nimport {CaretPositionKind, extractRepoOrgScopes, extractTextQuery, isContentNode, isQualifier} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\n\nexport class OwnersProvider extends EventTarget implements SearchProvider {\n  priority = 5\n  name = 'Owners'\n  singularItemName = 'owner'\n  value = 'owner'\n  type = 'search' as const\n  manuallyDetermineFilterEligibility = true\n\n  #suggestedOwners: string[] | null = null\n  #input: HTMLElement\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    input: HTMLElement,\n  ) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n    this.#input = input\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (!state) {\n      return []\n    }\n\n    if (state.caretPositionKind === CaretPositionKind.Text && state.ast) {\n      // If the query is already scoped, don't suggest any more orgs\n      if (extractRepoOrgScopes(state.ast).length) {\n        return []\n      }\n      // Check that there are no existing scopes already applied\n    } else if (state.caretPositionKind !== CaretPositionKind.Owner) {\n      return []\n    }\n\n    let term = ''\n    const scopedOrgs: string[] = []\n    if (state.ast) {\n      term = extractTextQuery(state.ast)\n    }\n\n    if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n      if (isContentNode(state.caretSelectedNode.content)) {\n        term = state.caretSelectedNode.content.value as string\n      } else {\n        term = ''\n      }\n    }\n\n    if (this.#suggestedOwners === null) {\n      const owners = (await getSuggestions(this.#input))\n        .filter(r => r.type === 'Repository')\n        .map(r => r.name.split('/')[0]!)\n      this.#suggestedOwners = [...new Set(owners)]\n    }\n\n    let matches = this.#suggestedOwners\n    if (term.length > 0) {\n      const fuzzyQuery = term.replace(/\\s/g, '')\n      const key = (r: string) => {\n        const score = fuzzyScore(r, fuzzyQuery)\n        return score > 0 ? {score, text: r} : null\n      }\n      matches = filterSort(this.#suggestedOwners, key, compare)\n    }\n\n    // Filter matches match orgs specified in the query\n    if (scopedOrgs.length > 0) {\n      matches = matches.filter(r => {\n        const org = r.split('/')[0]!.toLowerCase()\n        return scopedOrgs.find(o => org.startsWith(o))\n      })\n    }\n\n    for (const suggestion of matches.slice(0, 5)) {\n      let action: QueryBuilderAction = {\n        url: `/${suggestion}`,\n      }\n\n      if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n        let rewriteStart = state.caretSelectedNode.location.end\n        let rewriteEnd = state.caretSelectedNode.location.end\n        if (isContentNode(state.caretSelectedNode.content)) {\n          rewriteStart = state.caretSelectedNode.content.location.start\n          rewriteEnd = state.caretSelectedNode.content.location.end\n        }\n\n        const newQuery = `${state.query.slice(0, rewriteStart) + suggestion} ${state.query.slice(rewriteEnd)}`\n        action = {\n          replaceQueryWith: newQuery,\n          moveCaretTo: rewriteStart + suggestion.length + 1,\n        }\n      }\n\n      this.dispatchEvent(\n        new SearchItem({\n          value: suggestion,\n          icon: Octicon.Repo,\n          priority: 0,\n          action,\n        }),\n      )\n    }\n  }\n}\n","import {filterSort} from '../../../assets/modules/github/filter-sort'\nimport {compare, fuzzyScore} from '../../../assets/modules/github/fuzzy-filter'\nimport type {QueryEvent, FilterProvider} from '@github-ui/query-builder-element/query-builder-api'\nimport {FilterItem, Octicon} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport {CaretPositionKind, isContentNode, isQualifier} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\nimport type {BaseNode} from '@github/blackbird-parser'\n// eslint-disable-next-line import/no-namespace\nimport type * as Parsing from '../parsing/parsing'\n\nexport class FixedValuesProvider extends EventTarget implements FilterProvider {\n  priority = 3\n  name = 'Values'\n  singularItemName = 'value'\n  value = 'value'\n  type = 'filter' as const\n  manuallyDetermineFilterEligibility = true\n\n  #parsing: typeof Parsing | undefined\n\n  constructor(public queryBuilder: QueryBuilderElement) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (!state) {\n      return []\n    }\n\n    if (\n      state.caretPositionKind !== CaretPositionKind.OtherQualifier &&\n      state.caretPositionKind !== CaretPositionKind.Is\n    ) {\n      return []\n    }\n\n    if (!state.caretSelectedNode || !isQualifier(state.caretSelectedNode)) {\n      return []\n    }\n\n    if (!this.#parsing) {\n      this.#parsing = await import('../parsing/parsing')\n    }\n\n    let matches = []\n\n    const isLicense = state.caretSelectedNode.qualifier === 'License'\n    const isLanguage = state.caretSelectedNode.qualifier === 'Language'\n\n    if (isLicense) {\n      matches = [\n        ['BSD Zero Clause License', '0bsd'],\n        ['MIT License', 'mit'],\n        ['Apache License 2.0', 'apache-2.0'],\n        ['Creative Commons', 'cc'],\n        ['GNU General Public License', 'gpl'],\n        ['GNU Lesser General Public License', 'lgpl'],\n      ]\n    } else {\n      matches = this.#parsing\n        .getPossibleQualifierValues(\n          this.#parsing.chooseSearchType(state.ast as BaseNode, true),\n          state.caretSelectedNode.qualifier,\n        )\n        .map(r => [r, r])\n    }\n\n    let term = state.query\n    if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n      if (isContentNode(state.caretSelectedNode.content)) {\n        term = state.caretSelectedNode.content.value as string\n      } else {\n        term = ''\n      }\n    }\n\n    if (term.length > 0) {\n      const fuzzyQuery = term.replace(/\\s/g, '')\n      const key = (r: string[]) => {\n        const t = r[0] === r[1] ? r[0]! : `${r[0]} ${r[1]}`\n        const score = fuzzyScore(t, fuzzyQuery)\n        return score > 0 ? {score, text: t} : undefined\n      }\n      matches = filterSort(matches, key, compare)\n    }\n\n    for (const suggestion of matches.slice(0, 5)) {\n      if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n        let rewriteStart = state.caretSelectedNode.location.end\n        let rewriteEnd = state.caretSelectedNode.location.end\n        if (isContentNode(state.caretSelectedNode.content)) {\n          rewriteStart = state.caretSelectedNode.content.location.start\n          rewriteEnd = state.caretSelectedNode.content.location.end\n        }\n\n        const quotedValue = suggestion[1]!.includes(' ') ? `\"${suggestion[1]}\"` : suggestion[1]!\n\n        const newQuery = `${state.query.slice(0, rewriteStart) + quotedValue} ${state.query.slice(rewriteEnd)}`\n        const action = {\n          replaceQueryWith: newQuery,\n          moveCaretTo: rewriteStart + quotedValue.length + 1,\n        }\n        this.dispatchEvent(\n          new FilterItem({\n            filter: 'owner',\n            value: suggestion[0]!,\n            icon: isLanguage ? Octicon.Circle : undefined,\n            priority: 0,\n            action,\n          }),\n        )\n      }\n    }\n  }\n}\n","import {filterSort} from '../../../assets/modules/github/filter-sort'\nimport {compare, fuzzyScore} from '../../../assets/modules/github/fuzzy-filter'\nimport type {QueryEvent, SearchProvider} from '@github-ui/query-builder-element/query-builder-api'\nimport {SearchItem, Octicon} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport {CaretPositionKind, isContentNode, isQualifier} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\nimport {getSuggestions} from '../../../assets/modules/github/jump-to'\n\ninterface Team {\n  name: string\n  path: string\n}\n\nexport class TeamsProvider extends EventTarget implements SearchProvider {\n  priority = 7\n  name = 'Teams'\n  singularItemName = 'team'\n  value = 'team'\n  type = 'search' as const\n  manuallyDetermineFilterEligibility = true\n\n  #suggestedTeams: Team[] | null = null\n  #input: HTMLElement\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    input: HTMLElement,\n  ) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n    this.#input = input\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (!state || state.caretPositionKind !== CaretPositionKind.Text) {\n      return []\n    }\n\n    let term = state.query\n    if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n      if (isContentNode(state.caretSelectedNode.content)) {\n        term = state.caretSelectedNode.content.value as string\n      } else {\n        term = ''\n      }\n    }\n\n    if (this.#suggestedTeams === null) {\n      this.#suggestedTeams = (await getSuggestions(this.#input))\n        .filter(r => r.type === 'Team')\n        .map(r => {\n          return {\n            name: r.name,\n            path: r.path,\n          }\n        })\n    }\n\n    let matches = this.#suggestedTeams.slice(0, 4)\n    if (term.length > 0) {\n      const fuzzyQuery = term.replace(/\\s/g, '')\n      const key = (team: Team) => {\n        const score = fuzzyScore(team.name, fuzzyQuery)\n        return score > 0 ? {score, text: team.name} : null\n      }\n      matches = filterSort(this.#suggestedTeams, key, compare)\n    }\n\n    for (const suggestion of matches.slice(0, 5)) {\n      this.dispatchEvent(\n        new SearchItem({\n          value: suggestion.name,\n          icon: Octicon.Team,\n          priority: 0,\n          action: {\n            url: suggestion.path,\n          },\n        }),\n      )\n    }\n  }\n}\n","import {filterSort} from '../../../assets/modules/github/filter-sort'\nimport {compare, fuzzyScore} from '../../../assets/modules/github/fuzzy-filter'\nimport {\n  type QueryEvent,\n  FilterItem,\n  type FilterProvider,\n  Octicon,\n} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport {CaretPositionKind, isContentNode, isQualifier} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\nimport {getSuggestions} from '../../../assets/modules/github/jump-to'\n\ninterface Project {\n  name: string\n  path: string\n}\n\nexport class ProjectsProvider extends EventTarget implements FilterProvider {\n  priority = 8\n  name = 'Projects'\n  singularItemName = 'project'\n  value = 'project'\n  type = 'filter' as const\n  manuallyDetermineFilterEligibility = true\n\n  #suggestedProjects: Project[] | null = null\n  #input: HTMLElement\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    input: HTMLElement,\n  ) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n    this.#input = input\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (!state || state.caretPositionKind !== CaretPositionKind.Text) {\n      return []\n    }\n\n    let term = state.query\n    if (state.caretSelectedNode && isQualifier(state.caretSelectedNode)) {\n      if (isContentNode(state.caretSelectedNode.content)) {\n        term = state.caretSelectedNode.content.value as string\n      } else {\n        term = ''\n      }\n    }\n\n    if (this.#suggestedProjects === null) {\n      this.#suggestedProjects = (await getSuggestions(this.#input))\n        .filter(r => r.type === 'Project')\n        .map(r => {\n          return {\n            name: r.name,\n            path: r.path,\n          }\n        })\n    }\n\n    let matches = this.#suggestedProjects.slice(0, 4)\n    if (term.length > 0) {\n      const fuzzyQuery = term.replace(/\\s/g, '')\n      const key = (p: Project) => {\n        const score = fuzzyScore(p.name, fuzzyQuery)\n        return score > 0 ? {score, text: p.name} : null\n      }\n      matches = filterSort(this.#suggestedProjects, key, compare)\n    }\n\n    for (const suggestion of matches.slice(0, 5)) {\n      this.dispatchEvent(\n        new FilterItem({\n          filter: 'project',\n          value: suggestion.name,\n          icon: Octicon.Project,\n          priority: 0,\n          action: {\n            url: suggestion.path,\n          },\n        }),\n      )\n    }\n  }\n}\n","import type {QueryEvent, SearchProvider} from '@github-ui/query-builder-element/query-builder-api'\nimport {Octicon, SearchItem, PrefixColor, FetchDataEvent} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport {CaretPositionKind} from '../parsing/common'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\nimport {SymbolKind} from '@github-ui/code-nav'\n\ninterface BlackbirdSymbol {\n  fully_qualified_name: string\n  kind: string\n}\n\ninterface BlackbirdSuggestion {\n  kind: string\n  query: string\n  repository_nwo: string\n  language: string\n  path: string\n  repository_id: number\n  commit_sha: string\n  line_number: number\n  symbol: BlackbirdSymbol | null\n}\n\ntype SuggestionsResponse = {\n  suggestions: BlackbirdSuggestion[]\n  queryErrors: []\n  failed: boolean\n}\n\nexport class BlackbirdProvider extends EventTarget implements SearchProvider {\n  priority = 9\n  name = 'Code'\n  singularItemName = 'code'\n  value = 'code'\n  type = 'search' as const\n  manuallyDetermineFilterEligibility = true\n\n  #cache: Record<string, BlackbirdSuggestion[]> = {}\n  #input: HTMLElement\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    input: HTMLElement,\n  ) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n    this.#input = input\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const result = this.fetchData(event)\n    this.dispatchEvent(new FetchDataEvent(result))\n    const suggestions = (await result)!\n\n    let suggestionsEmitted = 0\n    for (const suggestion of suggestions) {\n      if (suggestionsEmitted >= 5) return\n\n      if (suggestion.kind === 'SUGGESTION_KIND_PATH') {\n        if (!suggestion.path) continue\n\n        const trailingSlashPos = suggestion.path.lastIndexOf('/')\n        const filename = suggestion.path.substring(trailingSlashPos + 1)\n        const path = truncatePath(suggestion.path.substring(0, trailingSlashPos + 1))\n\n        // TODO: omit this if the query is scoped to a repo already\n        const repoPrefix = suggestion.repository_nwo\n        const separator = repoPrefix.length > 0 && path.length > 0 ? ' · ' : ''\n        const encodedPath = suggestion.path.split('/').map(encodeURIComponent).join('/')\n\n        this.dispatchEvent(\n          new SearchItem({\n            value: filename,\n            icon: Octicon.FileCode,\n            description: `${repoPrefix}${separator}${path}`,\n            priority: 0,\n            action: {\n              url: `/${suggestion.repository_nwo}/blob/${suggestion.commit_sha}/${encodedPath}#L${suggestion.line_number}`,\n            },\n          }),\n        )\n      } else if (suggestion.kind === 'SUGGESTION_KIND_SYMBOL') {\n        const path = truncatePath(suggestion.path)\n\n        // TODO: omit this if the query is scoped to a repo already\n        const repoPrefix = suggestion.repository_nwo\n        const separator = repoPrefix.length > 0 && path.length > 0 ? ' · ' : ''\n        const encodedPath = suggestion.path.split('/').map(encodeURIComponent).join('/')\n        const kind = new SymbolKind({kind: suggestion.symbol?.kind ?? ''})\n\n        this.dispatchEvent(\n          new SearchItem({\n            value: suggestion.symbol?.fully_qualified_name ?? '',\n            prefixText: kind.fullName,\n            prefixColor: prefixColorForSymbolKind(kind),\n            icon: Octicon.FileCode,\n            description: `${repoPrefix}${separator}${path}`,\n            priority: 0,\n            action: {\n              url: `/${suggestion.repository_nwo}/blob/${suggestion.commit_sha}/${encodedPath}#L${suggestion.line_number}`,\n            },\n          }),\n        )\n      } else {\n        // Unsupported suggestion type, skip\n        continue\n      }\n      suggestionsEmitted++\n    }\n  }\n\n  async fetchData(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (!state || !state.query) {\n      return []\n    }\n\n    if (state.caretPositionKind !== CaretPositionKind.Text && state.caretPositionKind !== CaretPositionKind.Path) {\n      return []\n    }\n\n    if (this.#cache[state.query]) {\n      return this.#cache[state.query]\n    }\n\n    if (this.#input.getAttribute('data-logged-in') === 'false') {\n      return []\n    }\n\n    const urlParams = new URLSearchParams({query: state.query, saved_searches: JSON.stringify(state.customScopes)})\n    const url = this.#input.getAttribute('data-blackbird-suggestions-path')\n    if (!url) throw new Error('could not get blackbird suggestions path')\n    const response = (await (\n      await fetch(`${url}?${urlParams}`, {\n        method: 'GET',\n        mode: 'same-origin',\n        headers: {\n          Accept: 'application/json',\n        },\n      })\n    ).json()) as SuggestionsResponse\n\n    if (response.failed) {\n      return []\n    }\n\n    // Store the cached response\n    this.#cache[state.query] = response.suggestions\n\n    return response.suggestions\n  }\n}\n\nfunction prefixColorForSymbolKind(kind: SymbolKind): PrefixColor {\n  switch (kind.plColor) {\n    case 'prettylights.syntax.entity':\n      return PrefixColor.Entity\n    case 'prettylights.syntax.constant':\n      return PrefixColor.Constant\n    case 'prettylights.syntax.keyword':\n      return PrefixColor.Keyword\n    case 'prettylights.syntax.variable':\n      return PrefixColor.Variable\n    case 'prettylights.syntax.string':\n      return PrefixColor.String\n    default:\n      return PrefixColor.Entity\n  }\n}\n\nfunction truncatePath(path: string) {\n  if (path.length > 60) {\n    return `...${path.substring(path.length - 60 + 3)}`\n  }\n\n  return path\n}\n","import type {QueryEvent, SearchProvider, SearchScopeText} from '@github-ui/query-builder-element/query-builder-api'\nimport {FetchDataEvent, Octicon, SearchItem} from '@github-ui/query-builder-element/query-builder-api'\nimport type {QueryBuilderElement} from '@github-ui/query-builder-element'\nimport type {ParsedIntermediateRepresentation} from '../qbsearch-input-element'\nimport type {TextNode, QualifierNode, NodeWithChildren, ContentNode} from '@github/blackbird-parser'\nimport {CaretPositionKind, extractRepoOrgScopes, hasChildren, isQualifier} from '../parsing/common'\n// eslint-disable-next-line import/no-namespace\nimport type * as Parsing from '../parsing/parsing'\n\nenum IndexingStatus {\n  INDEXING = 'indexing',\n  INDEXED = 'indexed',\n  NOTINDEXED = 'notindexed',\n  UNKNOWN = 'unknown',\n}\n\nexport class InputProvider extends EventTarget implements SearchProvider {\n  priority = 0\n  name = ''\n  singularItemName = 'search'\n  value = 'search'\n  type = 'search' as const\n  copilotChatEnabled: boolean = false\n  #input: HTMLElement\n  #cache: Record<string, IndexingStatus> = {}\n  #parser: typeof Parsing | undefined\n\n  constructor(\n    public queryBuilder: QueryBuilderElement,\n    input: HTMLElement,\n    copilotChatEnabled: boolean,\n  ) {\n    super()\n    this.queryBuilder.addEventListener('query', this)\n    this.#input = input\n    this.copilotChatEnabled = copilotChatEnabled\n    if (copilotChatEnabled) {\n      this.fetchInitialRepoIndexingStatus()\n    }\n  }\n\n  async fetchInitialRepoIndexingStatus(): Promise<void> {\n    const repo = this.#input.getAttribute('data-current-repository')\n    const token = this.#input.getAttribute('data-blackbird-indexed-repo-csrf')\n    if (repo && token) {\n      const fetchUrl = new URL(`/search/check_indexing_status?nwo=${encodeURIComponent(repo)}`, window.location.origin)\n      const indexedResponse = await fetch(fetchUrl.href, {\n        method: 'GET',\n        mode: 'same-origin',\n        headers: {\n          Accept: 'application/json',\n          'Scoped-CSRF-Token': token,\n          'X-Requested-With': 'XMLHttpRequest',\n        },\n      })\n\n      if (indexedResponse.ok) {\n        const jsonResponse = await indexedResponse.json()\n        const status = jsonResponse.code_status\n        if (status !== IndexingStatus.INDEXING) {\n          this.#cache[repo] = status\n        }\n      }\n    }\n  }\n\n  async handleEvent(event: QueryEvent) {\n    const state = event.parsedMetadata as ParsedIntermediateRepresentation | undefined\n\n    if (event.rawQuery) {\n      // Always emit a fallback suggestion, if no other suggestions exist\n      this.dispatchEvent(\n        new SearchItem({\n          value: event.rawQuery,\n          scope: 'GITHUB',\n          icon: Octicon.Search,\n          priority: 0,\n          action: {\n            query: event.rawQuery,\n          },\n          isFallbackSuggestion: true,\n        }),\n      )\n    }\n\n    if (!state || state.caretPositionKind !== CaretPositionKind.Text) {\n      return []\n    }\n\n    let trimmedQuery = state.query.trim()\n\n    let repo = this.#input.getAttribute('data-current-repository')\n    let org = this.#input.getAttribute('data-current-org')\n    let orgNode: QualifierNode | undefined = undefined\n    let user = this.#input.getAttribute('data-current-owner')\n\n    if (!this.#parser) {\n      this.#parser = await import('../parsing/parsing')\n    }\n\n    // Use query to extract the current qualifier for suggestions\n    const astNode: NodeWithChildren = this.#parser.parseString(trimmedQuery || '') as NodeWithChildren\n\n    // No qualifiers found\n    if (astNode.children) {\n      const qualifierNodes = astNode.children.filter(node => node.kind === 'Qualifier') as QualifierNode[]\n      repo = (qualifierNodes.find(node => node.qualifier === 'Repo')?.content as ContentNode)?.value?.toString() || repo\n      orgNode = qualifierNodes.find(node => node.qualifier === 'Org')\n      org = (orgNode?.content as ContentNode)?.value?.toString() || org\n      user =\n        (\n          qualifierNodes.find(node => node.qualifier === 'Org' && node.raw === 'user:')?.content as ContentNode\n        )?.value?.toString() || user\n      // Get owner from nwo\n      if (repo && !orgNode) {\n        org = repo.split('/')[0]!\n      }\n    }\n\n    interface Suggestion {\n      query: string\n      scope?: keyof typeof SearchScopeText\n    }\n    const suggestions: Suggestion[] = []\n    let containsScopes = false\n\n    if (state.ast) {\n      const node = state.ast\n\n      // check if node has query text attached to it (not just qualifier)\n      if (hasChildren(node)) {\n        trimmedQuery = (node.children.filter(item => item.kind === 'Text') as TextNode[])\n          .map(item => item.value)\n          .join(' ')\n\n        const scopes = extractRepoOrgScopes(node)\n        // If the scopes contains a saved scope, don't generate input suggestions,\n        // since we can't generate sensible parent scopes.\n        if (scopes.find(s => s.kind === 'saved')) {\n          return []\n        }\n\n        // If text has a repo or org qualifier within it, show just query text at the bottom of input\n        if (scopes.length) {\n          containsScopes = true\n        }\n      } else if (isQualifier(node)) {\n        // if node is only a qualifier, don't include it as part of query text\n        trimmedQuery = ''\n      }\n\n      if (repo && repo.length > 0) {\n        suggestions.push({\n          query: `repo:${repo} ${trimmedQuery}`,\n          scope: 'REPO',\n        })\n      }\n      if (orgNode) {\n        suggestions.push({\n          query: `${orgNode.raw}${org} ${trimmedQuery}`,\n          scope: 'ORG',\n        })\n      } else {\n        if (org && org.length > 0) {\n          suggestions.push({\n            query: `org:${org} ${trimmedQuery}`,\n            scope: 'ORG',\n          })\n        }\n        if (user && user.length > 0) {\n          suggestions.push({\n            query: `user:${user} ${trimmedQuery}`,\n            scope: 'OWNER',\n          })\n        }\n      }\n    }\n\n    if (trimmedQuery.length > 0) {\n      !containsScopes\n        ? suggestions.unshift({\n            query: trimmedQuery,\n            scope: 'GITHUB',\n          })\n        : suggestions.push({query: trimmedQuery, scope: 'GITHUB'})\n    }\n\n    const token = this.#input.getAttribute('data-blackbird-indexed-repo-csrf')\n    const shouldShowCopilotSuggestion =\n      repo !== null && repo.length > 0 && trimmedQuery.length > 0 && this.copilotChatEnabled && token !== undefined\n\n    // If we are currently on a non-root tree view page, offer to search within\n    // the current directory.\n    const path = getPathQualifier(window.location.pathname)\n    if (path) {\n      const query = `repo:${repo} path:${path} ${trimmedQuery}`\n      this.dispatchEvent(\n        new SearchItem({\n          value: query,\n          scope: 'DIRECTORY',\n          icon: Octicon.Search,\n          priority: 0,\n          action: {\n            commandName: 'blackbird-monolith.search',\n            data: {\n              query,\n            },\n          },\n        }),\n      )\n    }\n\n    // If we are going to show the copilot suggestion, let's not show the first suggestion (repo scoped search)\n    for (const suggestion of suggestions.slice(shouldShowCopilotSuggestion ? 1 : 0, 3)) {\n      this.dispatchEvent(\n        new SearchItem({\n          value: suggestion.query,\n          scope: suggestion.scope,\n          icon: Octicon.Search,\n          priority: 0,\n          action: {\n            commandName: 'blackbird-monolith.search',\n            data: {\n              query: suggestion.query,\n            },\n          },\n        }),\n      )\n    }\n\n    if (shouldShowCopilotSuggestion && token) {\n      const fetchUrl = new URL(`/search/check_indexing_status?nwo=${encodeURIComponent(repo!)}`, window.location.origin)\n      let status: IndexingStatus = this.#cache[repo!] ?? IndexingStatus.UNKNOWN\n      if (status === IndexingStatus.UNKNOWN) {\n        const indexedResponsePromise = fetch(fetchUrl.href, {\n          method: 'GET',\n          mode: 'same-origin',\n          headers: {\n            Accept: 'application/json',\n            'Scoped-CSRF-Token': token,\n            'X-Requested-With': 'XMLHttpRequest',\n          },\n        })\n\n        this.dispatchEvent(new FetchDataEvent(indexedResponsePromise))\n        const indexedResponse = await indexedResponsePromise\n        if (indexedResponse.ok) {\n          const jsonResponse = await indexedResponse.json()\n          status = jsonResponse.code_status\n          if (status !== IndexingStatus.INDEXING) {\n            this.#cache[repo!] = status\n          }\n        }\n      }\n\n      if (status === IndexingStatus.INDEXED) {\n        this.dispatchEvent(\n          new SearchItem({\n            value: `repo:${repo} ${trimmedQuery}`,\n            scope: 'COPILOT',\n            icon: Octicon.Copilot,\n            priority: 0,\n            action: {\n              commandName: 'search-copilot-chat',\n              data: {\n                content: trimmedQuery,\n                repoNwo: repo,\n              },\n            },\n          }),\n        )\n      }\n    }\n  }\n\n  getQualifierType(input: string): string {\n    if (input.includes('repo')) {\n      // eslint-disable-next-line i18n-text/no-en\n      return 'In this repository'\n    } else if (input.includes('org')) {\n      // eslint-disable-next-line i18n-text/no-en\n      return 'In this organization'\n    } else if (input.includes('user')) {\n      // eslint-disable-next-line i18n-text/no-en\n      return 'In this user'\n    } else if (input.includes('owner')) {\n      // eslint-disable-next-line i18n-text/no-en\n      return 'In this owner'\n    } else {\n      // eslint-disable-next-line i18n-text/no-en\n      return 'All of GitHub'\n    }\n  }\n}\n\nfunction buildRegexQuery(path: string): string {\n  // Decode any URL characters\n  path = decodeURIComponent(path)\n\n  // Strip trailing slash\n  if (path.endsWith('/')) {\n    path = path.substring(0, path.length - 1)\n  }\n\n  // Escape regex chars\n  const escaped = path.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\n  // Build path regex query\n  return `/^${escaped.replaceAll('/', '\\\\/')}\\\\//`\n}\n\nexport function getPathQualifier(pathname: string): string | undefined {\n  const treeRegex = /^\\/[^/]+\\/[^/]+\\/tree\\/[^/]+\\/(.*)/\n\n  const m = treeRegex.exec(pathname)\n  if (m) {\n    for (let i = 1; i < m.length; i++) {\n      if (m[i]) {\n        return buildRegexQuery(m[i]!)\n      }\n    }\n  }\n\n  return undefined\n}\n","import {persistSubmitButtonValue} from './remote-submit'\n\ntype TextField = HTMLInputElement | HTMLTextAreaElement\ntype Button = HTMLInputElement | HTMLButtonElement\n\nfunction fire(target: HTMLElement, name: string, cancelable: boolean): boolean {\n  return target.dispatchEvent(\n    new CustomEvent(name, {\n      bubbles: true,\n      cancelable,\n    }),\n  )\n}\n\n// Submit a form while ensuring that `submit` event is also triggered.\n//\n// Calling native `form.submit()` method immediately submits the form without triggering the `submit` event.\n// As a result, code that wants to hook into form submits would never execute.\n//\n// This method first triggers the `submit` event and, if that event wasn't `preventDefault`d, submits the\n// form natively.\nexport function requestSubmit(form: HTMLFormElement, submitter?: Button) {\n  if (submitter) {\n    checkButtonValidity(form, submitter)\n    persistSubmitButtonValue(submitter)\n  }\n  if (fire(form, 'submit', true)) {\n    form.submit()\n  }\n}\n\n// Check submitter validity for form.requestSubmit compatibility.\n// See https://html.spec.whatwg.org/#dom-form-requestsubmit.\nfunction checkButtonValidity(form: HTMLFormElement, submitter: Button) {\n  if (!(form instanceof HTMLFormElement)) throw new TypeError('The specified element is not of type HTMLFormElement.')\n  if (!(submitter instanceof HTMLElement)) throw new TypeError('The specified element is not of type HTMLElement.')\n  if (submitter.type !== 'submit') throw new TypeError('The specified element is not a submit button.')\n  if (!form || form !== submitter.form) throw new Error('The specified element is not owned by the form element.')\n}\n\n// Set a form field value while ensuring that `change` event is also triggered.\n//\n// Having the `change` event fire is important for various behaviors to react, such as form validation.\nexport function changeValue(input: TextField, value: string | boolean) {\n  if (typeof value === 'boolean') {\n    if (input instanceof HTMLInputElement) {\n      input.checked = value\n    } else {\n      throw new TypeError('only checkboxes can be set to boolean value')\n    }\n  } else {\n    if (input.type === 'checkbox') {\n      throw new TypeError(\"checkbox can't be set to string value\")\n    } else {\n      input.value = value\n    }\n  }\n  fire(input, 'change', false)\n}\n\n// Fill multiple form fields by item name.\nexport function fillFormValues(form: HTMLFormElement, fields: {[key: string]: string}) {\n  for (const name in fields) {\n    const value = fields[name]\n    const element = form.elements.namedItem(name)\n\n    if (element instanceof HTMLInputElement) {\n      element.value = value!\n    } else if (element instanceof HTMLTextAreaElement) {\n      element.value = value!\n    }\n  }\n}\n\n// Test if element is a form field.\nexport function isFormField(element: Node): boolean {\n  if (!(element instanceof HTMLElement)) {\n    return false\n  }\n\n  const name = element.nodeName.toLowerCase()\n  const type = (element.getAttribute('type') || '').toLowerCase()\n  return (\n    name === 'select' ||\n    name === 'textarea' ||\n    (name === 'input' && type !== 'submit' && type !== 'reset') ||\n    element.isContentEditable\n  )\n}\n\nfunction searchParamsFromFormData(formData: FormData): URLSearchParams {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new URLSearchParams(formData as any)\n}\n\n// Get a `?` search string for a URL for a GET form, using its `action` attribute as well as its other fields.\nexport function combineGetFormSearchParams(formAction: URL, formData: FormData): string {\n  const allSearchParams = new URLSearchParams(formAction.search)\n  const searchParamsFromInputs = searchParamsFromFormData(formData)\n  for (const [key, value] of searchParamsFromInputs) {\n    allSearchParams.append(key, value)\n  }\n  return allSearchParams.toString()\n}\n\n// Serialize form data into string.\nexport function serialize(form: HTMLFormElement): string {\n  return searchParamsFromFormData(new FormData(form)).toString()\n}\n","// Emulates submit button submission values by inserting a hidden input to the form.\n//\n// Submit events can be triggerd in the following ways:\n// - User clicks on a submit button.\n// - User press Enter when focusing on a form field; also known as \"implicit submission\".\n// - Programmatically via requestSubmit helper.\n//\n// On GitHub.com, the submission is either handled by the browser or remoteForm.\n//\n// For submissions triggered by user actions, the name and value of the clicked submit button (also known as\n// \"the submitter\") is passed along in the request, and can be programmatically retrieved with FormData.entries().\n//\n// However, this value will be lost in the following cases:\n// - 1. When the submitter button is disabled, most commonly by [data-disable-with].\n// - 2. When submitting via requestSubmit (from form.js), because the submission does not originated from a submitter.\n// - 3. When submitting with remoteForm, because FormData(form).entries() does not know about the submitter. In Safari\n// the submitter is known during the submission steps, but this behavior is not supported in any other browsers.\n//\n// @see {@link https://github.com/github/form-data-entries/pull/7}.\n//\n// For the exact workarounds, refer to ./form.js and ./remote.js.\nexport function persistSubmitButtonValue(button: HTMLButtonElement | HTMLInputElement) {\n  const form = button.closest('form')\n  if (!(form instanceof HTMLFormElement)) {\n    return\n  }\n\n  let input = findPersistedSubmitButtonValue(form)\n\n  if (button.name) {\n    const defaultValue = button.matches('input[type=submit]') ? 'Submit' : ''\n    const value = button.value || defaultValue\n    if (!input) {\n      input = document.createElement('input')\n      input.type = 'hidden'\n      input.classList.add('js-submit-button-value')\n      form.prepend(input)\n    }\n    input.name = button.name\n    input.value = value\n  } else if (input) {\n    input.remove()\n  }\n}\n\nexport function findPersistedSubmitButtonValue(form: HTMLFormElement): HTMLInputElement | null {\n  const input = form.querySelector('input.js-submit-button-value')\n  return input instanceof HTMLInputElement ? input : null\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {eventToHotkeyString} from './hotkey'\n\n/** Returns false if a user has explicitly disabled character key shortcuts. */\nexport const areCharacterKeyShortcutsEnabled = () => {\n  const keyboardShortcutsPreference = document.querySelector<HTMLMetaElement>(\n    'meta[name=keyboard-shortcuts-preference]',\n  )\n  if (keyboardShortcutsPreference) {\n    return keyboardShortcutsPreference.content === 'all'\n  }\n  return true\n}\n\n/**\n * Character-key shortcuts are implemented only with lowercase characters (\"g\", \"g f\"), uppercase characters (\"Shift+A\", \"a\"),\n * symbols (\"Alt+g\"), and punctuation (\"?\", \"!\", \"/\").\n *\n * Returns true if string is NOT what we define as a character key shortcut.\n */\nexport const isNonCharacterKeyShortcut = (hotkey: string) => {\n  return /Enter|Arrow|Escape|Meta|Control|Esc/.test(hotkey) || (hotkey.includes('Alt') && hotkey.includes('Shift'))\n}\n\nconst nonEditableInputTypes = new Set([\n  'button',\n  'checkbox',\n  'color',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit',\n])\n\n/**\n * Returns true if `element` is editable - that is, if it can be focused and typed in like an input or textarea.\n */\nexport function isEditableElement(target: EventTarget | null): boolean {\n  if (!(target instanceof HTMLElement)) return false\n\n  const name = target.nodeName.toLowerCase()\n  const type = target.getAttribute('type')?.toLowerCase() ?? 'text'\n\n  const isReadonly =\n    target.ariaReadOnly === 'true' ||\n    target.getAttribute('aria-readonly') === 'true' ||\n    target.getAttribute('readonly') !== null\n\n  return (\n    (name === 'select' ||\n      name === 'textarea' ||\n      (name === 'input' && !nonEditableInputTypes.has(type)) ||\n      target.isContentEditable) &&\n    !isReadonly\n  )\n}\n\n/**\n * Returns false if a user settings has character key shortcut disabled and keyboard event corresponds to a character\n * key shortcut. Character key shortcuts are never enabled on editable form inputs.\n */\nexport const isShortcutAllowed = (event: KeyboardEvent) => {\n  const hotkey = eventToHotkeyString(event)\n\n  const disallowCharKeyShortcutsBecauseEditable =\n    isEditableElement(event.target) && isFeatureEnabled('no_character_key_shortcuts_in_inputs')\n\n  const allowCharacterKeyShortcuts = areCharacterKeyShortcutsEnabled() && !disallowCharKeyShortcutsBecauseEditable\n\n  return isNonCharacterKeyShortcut(hotkey) || allowCharacterKeyShortcuts\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'jtml-no-op'\n\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveJtmlPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveJtmlPolicy} from '@github-ui/trusted-types-policies/jtml'\n// eslint-disable-next-line no-restricted-imports\nimport {TemplateResult} from '@github/jtml'\n\n// eslint-disable-next-line no-restricted-imports\nexport {html, unsafeHTML, render} from '@github/jtml'\n\nTemplateResult.setCSPTrustedTypesPolicy(temporaryPermissiveJtmlPolicy)\nexport {TemplateResult}\n","import type {SafeHTMLString} from '@github-ui/safe-html'\n\nexport type QueryBuilderAction = URLAction | QueryAction | RewriteQueryAction | CommandAction\nexport enum SearchScopeText {\n  DIRECTORY = 'Search in this directory',\n  ORG = 'Search in this organization',\n  OWNER = 'Search in this owner',\n  REPO = 'Search in this repository',\n  GITHUB = 'Search all of GitHub',\n  GENERAL = 'Submit search',\n  COMMAND = 'Run command',\n  COPILOT = 'Ask Copilot',\n  DEFAULT = 'Jump to',\n}\n\nexport const AutocompleteText = 'Autocomplete'\n\nexport type Provider = SearchProvider | FilterProvider\n\nexport interface Parser<IntermediateRepresentation> {\n  // Note, the intermediate representation data will be available within\n  // providers on the QueryEvent as QueryEvent.parsedMetadata\n  parse(input: string, caretPosition: number | undefined): IntermediateRepresentation\n\n  // Flattens the intermediate representation into a list of QueryElements that\n  // can be styled by QueryBuilder\n  flatten(input: IntermediateRepresentation): QueryElement[]\n}\n\ninterface FilterItemData {\n  filter: string\n  value: string\n  name?: string\n  description?: string\n  inlineDescription?: boolean\n  priority?: number\n  icon?: Icon\n  avatar?: Avatar\n  action?: QueryBuilderAction\n}\n\nexport interface Avatar {\n  type: 'user' | 'org' | 'team'\n  url: string\n}\n\n/**\n * FilterItem represents a value that can be used in a filter. Some examples:\n * - filter is `repo:`, value is `github/github`\n * - filter is `author:`, value is `@keithamus`\n */\nexport class FilterItem extends Event {\n  public name: string\n  public filter: string\n  public value: string\n  public description: string\n  public inlineDescription = false\n  public action?: QueryBuilderAction\n  public priority: number\n  public icon?: Icon\n  public avatar?: Avatar\n\n  constructor({\n    filter,\n    value,\n    name = '',\n    description = '',\n    inlineDescription = false,\n    priority = Infinity,\n    icon = undefined,\n    avatar = undefined,\n    action,\n  }: FilterItemData) {\n    super('filter-item')\n    this.filter = filter\n    this.value = value\n    this.name = name\n    this.description = description\n    this.inlineDescription = inlineDescription\n    this.priority = priority\n    this.icon = icon\n    this.avatar = avatar\n    this.action = action\n  }\n}\n\n/* URLAction represents the URL a SearchItem will navigate to when enacted on */\ninterface URLAction {\n  url: string\n}\n\n/* QueryAction Represents the new Query String that a SearchItem will populate\n * the query-builder input with, when enacted on*/\ninterface QueryAction {\n  query: string\n}\n\ninterface RewriteQueryAction {\n  // Replaces the entire query with the provided string\n  replaceQueryWith: string\n  // The position in the query to move the caret to\n  moveCaretTo: number\n}\n\ninterface CommandAction {\n  commandName: string\n  data: Record<string, unknown>\n}\n\nexport interface CustomIcon {\n  html: SafeHTMLString\n}\n\nexport function isCustomIcon(icon: Icon): icon is CustomIcon {\n  return icon instanceof Object\n}\n\nexport enum Octicon {\n  Apps = 'apps',\n  Archived = 'archived',\n  Bookmark = 'bookmark',\n  Branch = 'branch',\n  Calendar = 'calendar',\n  Circle = 'circle',\n  Code = 'code',\n  Comment = 'comment',\n  Copilot = 'copilot',\n  Default = 'default',\n  Discussion = 'discussion',\n  Draft = 'draft',\n  FileIcon = 'file-icon',\n  FileCode = 'file-code',\n  Filter = 'filter',\n  Forbidden = 'forbidden',\n  History = 'history',\n  Issue = 'issue',\n  IssueClosed = 'issueClosed',\n  Iterations = 'iterations',\n  Mention = 'mention',\n  Merged = 'merged',\n  No = 'no',\n  Not = 'not',\n  Milestone = 'milestone',\n  Organization = 'organization',\n  Pencil = 'pencil',\n  Person = 'person',\n  PlusCircle = 'plus-circle',\n  Project = 'project',\n  PullRequest = 'pullRequest',\n  Reaction = 'reaction',\n  Repo = 'repo',\n  Search = 'search',\n  SingleSelect = 'single-select',\n  Sort = 'sort',\n  Tag = 'tag',\n  Team = 'team',\n  Trash = 'trash',\n  Question = 'question',\n}\n\nexport enum PrefixColor {\n  Entity = '--color-prettylights-syntax-entity',\n  Constant = '--color-prettylights-syntax-constant',\n  Keyword = '--color-prettylights-syntax-keyword',\n  Variable = '--color-prettylights-syntax-variable',\n  String = '--color-prettylights-syntax-string',\n}\n\nexport type Icon = Octicon | CustomIcon\n\ninterface SearchItemData {\n  priority: number\n  value: string\n  action: QueryBuilderAction\n  description?: string\n  icon?: Icon\n  scope?: keyof typeof SearchScopeText\n  prefixText?: string\n  prefixColor?: PrefixColor\n\n  // If set, the item will only be rendered if no other providers\n  // sent items.\n  isFallbackSuggestion?: boolean\n}\n\n/* SearchItem represents a result that appears in the results list, and has an action for a user to enact on */\nexport class SearchItem extends Event {\n  public priority: number\n  public value: string\n  public action: QueryBuilderAction\n  public description: string\n  public icon?: Icon\n  public scope: keyof typeof SearchScopeText\n  public prefixText?: string\n  public prefixColor?: PrefixColor\n  public isFallbackSuggestion: boolean\n\n  constructor({\n    priority,\n    value,\n    action,\n    description = '',\n    icon = undefined,\n    scope = 'DEFAULT',\n    prefixText,\n    prefixColor,\n    isFallbackSuggestion,\n  }: SearchItemData) {\n    super('search-item')\n    this.priority = priority\n    this.value = value\n    this.prefixText = prefixText\n    this.prefixColor = prefixColor\n    this.action = action\n    this.description = description\n    this.icon = icon\n    this.scope = scope\n    this.isFallbackSuggestion = isFallbackSuggestion || false\n  }\n}\n\nexport interface SearchProvider extends EventTarget {\n  priority: number\n  icon?: Icon\n  name: string // plural group name (i.e. \"repositories\" or \"teams\") - will be the visual header\n  description?: string\n  singularItemName: string // singular name for an item (i.e. \"repository\" or \"team\") to construct a meaningful aria-label, doesn't appear visually\n  value: string // visual name of the filter (i.e. \"is:\")\n  type: 'search'\n}\n\nexport interface FilterProvider extends EventTarget {\n  priority: number\n  icon?: Icon\n  name: string // plural group name (i.e. \"repositories\" or \"teams\") - will be the visual header\n  description?: string\n  singularItemName: string // singular name for an item (i.e. \"repository\" or \"team\") to construct a meaningful aria-label, doesn't appear visually\n  value: string // visual name of the filter (i.e. \"is:\")\n  type: 'filter'\n  // When set, if a filter provider emits filter items, always render them in the UI. If not set,\n  // filter items will only be rendered if the querybuilder thinks a filter item is being written\n  // by the user, which may be incorrect if using a custom parser.\n  manuallyDetermineFilterEligibility?: boolean\n}\n\nexport type QueryElement = QueryFilterElement | QueryTextElement\n\nexport interface QueryFilterElement {\n  type: 'filter'\n  filter: string\n  value: string\n  style?: TextElementStyle\n}\n\nexport interface QueryTextElement {\n  type: 'text'\n  value: string\n  style?: TextElementStyle\n}\n\nexport enum TextElementStyle {\n  Normal = 'normal',\n  Entity = 'entity',\n  Constant = 'constant',\n  FilterValue = 'filter-value',\n}\n\nexport class FetchDataEvent extends Event {\n  constructor(public fetchPromise: Promise<unknown>) {\n    super('fetch-data')\n  }\n}\n\nexport class QueryEvent extends Event {\n  constructor(\n    public parsedQuery: QueryElement[],\n    public rawQuery: string,\n    public parsedMetadata: unknown,\n  ) {\n    super('query')\n  }\n\n  override toString() {\n    return this.rawQuery\n  }\n}\n\nclass QueryBuilderProvider extends Event {\n  constructor(public provider: SearchProvider) {\n    super('query-builder-provider', {bubbles: true})\n  }\n}\n\ndeclare global {\n  interface Document {\n    addEventListener(type: 'query-builder-provider', handler: (event: QueryBuilderProvider) => void): void\n  }\n}\n","import {visit} from '@github/turbo'\nimport {startSoftNav} from '@github-ui/soft-nav'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function softNavigate(url: string, turboOptions?: any) {\n  // visit won't fire a `turbo:click` event, so we need to manually start the soft navigation process.\n  startSoftNav('turbo')\n  visit(url, {...turboOptions})\n}\n","// TODO: Research replacing this module with a composable observable library.\n// The scope of this module simply returns a finalized subscription object.\n\n// Lightweight TC39 observable Subscription.\nexport class Subscription {\n  constructor(cleanup: () => void) {\n    this.closed = false\n    this.unsubscribe = () => {\n      cleanup()\n      this.closed = true\n    }\n  }\n\n  // A boolean value indicating whether the subscription is closed.\n  closed: boolean\n  // Cancels the subscription.\n  unsubscribe: () => void\n}\n\n// Create a Subscription from an event.\nexport function fromEvent(\n  target: EventTarget,\n  eventName: string,\n  onNext: EventListenerOrEventListenerObject,\n  options: AddEventListenerOptions = {capture: false},\n): Subscription {\n  target.addEventListener(eventName, onNext, options)\n  return new Subscription(() => {\n    target.removeEventListener(eventName, onNext, options)\n  })\n}\n\n// Combine several subscriptions into a single subscription.\n//\n// subscriptions - A list of subscriptions to combine.\n//\n// Returns a single, combined, subscription.\nexport function compose(...subscriptions: Subscription[]): Subscription {\n  return new Subscription(() => {\n    for (const subscription of subscriptions) {\n      subscription.unsubscribe()\n    }\n  })\n}\n"],"names":["scorer","pageViews","frequencies","frequencyMap","totalVisits","Object","values","reduce","total","view","visitCount","Map","keys","map","pageKey","recencies","recencyMap","items","recencyList","key","lastVisitedAt","sort","a","b","totalUniqueVisits","length","index","frequency","get","recency","TEAM_PAGE_REGEX","REPOSITORY_PAGE_REGEXES","PROJECT_PAGE_REGEXES","logPageView","path","projectPageMatch","repositoryPageMatch","teamPageMatch","match","logPageViewByKey","buildTeamKey","i","len","ownerType","projectRegex","ownerSlug","number","buildProjectKey","buildRepositoryKey","views","getPageViewsMap","now","Math","floor","Date","hit","setPageViewsMap","limitedPageViews","scorePage","ranked","slice","MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE","fromEntries","organizationLogin","teamSlug","ownerLogin","name","PAGE_VIEW_KEY_REGEX","VIEWS_KEY","setItem","value","window","localStorage","JSON","stringify","json","rawData","getItem","parse","pageViewMap","initialized","selectorSet","SelectorSet","handleFocus","event","focused","target","HTMLElement","nodeType","Node","DOCUMENT_NODE","matches","data","call","onFocus","selector","fn","document","addEventListener","add","activeElement","onKey","eventType","inputHandler","blurHandler","currentTarget","removeEventListener","field","onInput","visible","element","offsetWidth","offsetHeight","experimentsLocalStorageKey","experimentsDebugScoringKey","getBlackbirdExperiments","experiments","safeStorage","split","setBlackbirdExperiments","join","debugScoringInfoEnabled","enabled","setDebugScoringInfoEnabled","removeItem","isQualifier","node","qualifier","isSavedQualifier","containsQualifier","qualifierKind","hasChildren","child","children","CaretPositionKind","slashRegex","shouldRedirectInsteadOfSearch","isContentNode","content","toString","matchAll","startsWith","redirectURL","encodeURIComponent","undefined","extractTextQuery","filter","x","kind","extractRepoOrgScopes","flat","restrictToScopedOrgs","orgs","repoOrgScopes","Set","scope","includes","s","toLowerCase","size","org","has","safeLocalStorage","HistoryProvider","EventTarget","handleEvent","state","parsedMetadata","caretPositionKind","Text","query","suggestions","trimmedQuery","trim","seen","item","suggestionCount","suggestion","historyQuery","dispatchEvent","SearchItem","icon","Octicon","Search","priority","action","url","constructor","queryBuilder","singularItemName","type","PopularLanguages","color","LanguagesProvider","Language","term","caretSelectedNode","r","toUpperCase","fuzzyQuery","replace","filterSort","score","fuzzyScore","text","compare","rewriteStart","location","end","rewriteEnd","start","quotedName","newQuery","FilterItem","replaceQueryWith","moveCaretTo","manuallyDetermineFilterEligibility","createElement","tmpl","html","renderInto","innerHTML","ReposProviderBase","getMatchingRepositories","scopedOrgs","ast","scopes","isScopedToRepository","push","Repository","suggestedRepos","getSuggestions","input","find","o","ReposFilterProvider","Owner","Repo","ReposSearchProvider","CustomScopeCache","set","cache","filled","clear","SavedScopeProvider","fetchSuggestions","customScopesUrl","response","fetch","method","mode","headers","Accept","ok","replaceCustomScopesCache","Saved","String","customScopesCache","endsWith","queryStart","queryEnd","trimEnd","Bookmark","PlusCircle","commandName","OwnersProvider","suggestedOwners","owners","FixedValuesProvider","OtherQualifier","Is","parsing","isLicense","isLanguage","getPossibleQualifierValues","chooseSearchType","t","quotedValue","Circle","TeamsProvider","suggestedTeams","team","Team","ProjectsProvider","suggestedProjects","p","Project","BlackbirdProvider","result","fetchData","FetchDataEvent","suggestionsEmitted","trailingSlashPos","lastIndexOf","filename","substring","truncatePath","repoPrefix","repository_nwo","separator","encodedPath","FileCode","description","commit_sha","line_number","SymbolKind","symbol","fully_qualified_name","prefixText","fullName","prefixColor","prefixColorForSymbolKind","plColor","PrefixColor","Entity","Constant","Keyword","Variable","Path","getAttribute","urlParams","URLSearchParams","saved_searches","customScopes","failed","IndexingStatus","InputProvider","fetchInitialRepoIndexingStatus","repo","token","fetchUrl","URL","origin","indexedResponse","href","jsonResponse","status","code_status","orgNode","rawQuery","isFallbackSuggestion","user","parser","astNode","parseString","qualifierNodes","raw","containsScopes","unshift","shouldShowCopilotSuggestion","copilotChatEnabled","getPathQualifier","pathname","m","treeRegex","exec","buildRegexQuery","decodeURIComponent","escaped","replaceAll","indexedResponsePromise","Copilot","repoNwo","getQualifierType","nonBreakingSpace","fromCharCode","PLACEHOLDER_SAFE_HTML","QbsearchInputElement","v","parseQuery","setButtonText","parseSearchInputRaw","syncRichButtonText","flattenASTForQueryBuilder","ir","highlights","getHighlights","pos","output","highlight","style","TextElementStyle","Normal","className","FilterValue","isLoggedIn","connectedCallback","isReactContext","customScopesUrlPath","customScopesSuggestionProvider","customElements","whenDefined","customScopesManager","initialize","customScopeManagerInitialized","signal","eventAbortController","AbortController","feedbackDialog","show","globalNavVisibility","detail","setGlobalNavVisibility","setGlobalBarAlwaysExpanded","globalNavAlwaysHidden","classList","remove","CustomEvent","appendQuery","retainScrollPosition","returnTarget","expandAndRetainScrollPosition","expand","returnFocusElement","loadParser","moveCaretToEndOfInput","saveQueryAsCustomScope","loggedInProviders","providers","parentElement","search","retract","inputSubmit","preventDefault","e","openManageCustomScopesDialog","anchInfo","parseFileAnchor","hash","blobRange","line","SearchCopilotEvent","placeholder","inputButton","inputButtonText","textContent","flatten","segments","el","span","replaceChildren","newText","disconnectedCallback","abort","getSuggestionInputState","findCustomScopesNeededForSearch","selectedNode","globalNav","querySelector","mediaQuery","matchMedia","hidden","alwaysExpanded","headerRedesignEnabled","globalBar","setGlobalBarModalOpen","modalOpen","searchInputContainerClicked","contains","sendEvent","updateQueryBuilderVisibility","queryBuilderContainer","darkBackdrop","trigger","scrollY","top","handleExpand","possiblyWarmCaches","scrollTo","searchSuggestionsDialog","inputFocus","inputChange","cachesHaveBeenWarmed","mapURLParamToSearchType","openInNewWindow","searchType","mapSearchTypeToURLParam","softNavigate","searchParams","l","getExpandedQuery","typeParam","expandedQuery","experimentsParam","open","setLocalHistory","MAX_LOCAL_HISTORY","handleChange","parseSearchInput","parsingPromise","lastParseTime","waitingToParse","setTimeout","parseDelay","lastParsedQuery","caretData","getCaretPositionKindFromIndex","handleSubmit","editCustomScope","newCustomScope","create","stopPropagation","dialogFocusReturn","handleDialogClose","focus","showFeedbackDialog","submitFeedback","form","body","FormData","close","caretPosition","bind","handleClose","attr","controller","Event","bubbles","cancelable","customScopesFromUrl","customScopeNames","getCustomScopeNames","Array","isArray","customScopesNeededForSearch","customScopeName","customScope","fire","requestSubmit","submitter","checkButtonValidity","HTMLFormElement","persistSubmitButtonValue","submit","changeValue","HTMLInputElement","checked","fillFormValues","fields","elements","namedItem","HTMLTextAreaElement","isFormField","nodeName","isContentEditable","searchParamsFromFormData","formData","combineGetFormSearchParams","formAction","allSearchParams","searchParamsFromInputs","append","serialize","button","closest","findPersistedSubmitButtonValue","defaultValue","prepend","areCharacterKeyShortcutsEnabled","keyboardShortcutsPreference","isNonCharacterKeyShortcut","test","hotkey","nonEditableInputTypes","isShortcutAllowed","eventToHotkeyString","disallowCharKeyShortcutsBecauseEditable","isEditableElement","isReadonly","ariaReadOnly","isFeatureEnabled","allowCharacterKeyShortcuts","hydroAnalyticsClient","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","context","app_id","event_url","host","entries","visitorMeta","visitorHash","atob","assign","staff","isStaff","sendPageView","service","head","cleanContext","typeWithFallback","stringifyObjectValues","obj","k","policyName","temporaryPermissiveJtmlPolicy","ghTrustedTypes","createPolicy","createHTML","trustedTypesPolicy","apply","policy","fallback","fallbackOnError","TemplateResult","setCSPTrustedTypesPolicy","SearchScopeText","AutocompleteText","inlineDescription","Infinity","avatar","isCustomIcon","fetchPromise","QueryEvent","parsedQuery","turboOptions","startSoftNav","visit","Subscription","cleanup","closed","unsubscribe","fromEvent","eventName","onNext","capture","compose","subscriptions","subscription"],"sourceRoot":""}