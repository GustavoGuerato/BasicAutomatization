{"version":3,"file":"app_assets_modules_github_behaviors_task-list_ts-app_assets_modules_github_onfocus_ts-app_ass-079b43-xxxxxxxxxxxx.js","mappings":"+SA6GO,SAASA,EAAeC,CAAkB,EAC/C,GAAIA,EAAUC,aAAa,CAAC,uBAAwB,CAClD,IAAMC,EAAYF,EAAUG,gBAAgB,CAAC,cAC7C,IAAK,IAAMC,KAAMF,EACf,GAAIE,aAAcC,EAAAA,CAAgBA,CAAE,CAClCD,EAAGE,QAAQ,CAAG,GACd,IAAMC,EAAUH,EAAGD,gBAAgB,CAAC,UACpC,IAAK,IAAMK,KAAUD,EACnBC,EAAOF,QAAQ,CAAG,EAEtB,CAEJ,CACF,CAEO,SAASG,EAAgBT,CAAkB,EAChD,IAAK,IAAMI,KAAMJ,EAAUG,gBAAgB,CAAC,cAC1C,GAAIC,aAAcC,EAAAA,CAAgBA,CAAE,CAClCD,EAAGE,QAAQ,CAAG,GAEd,IAAMC,EAAUH,EAAGD,gBAAgB,CAAC,UACpC,IAAK,IAAMK,KAAUD,EACnBC,EAAOF,QAAQ,CAAG,EAEtB,CAEJ,CAMA,SAASI,EAAaV,CAAkB,CAAEW,CAAa,CAAEC,CAAoD,EAC3G,IAAMC,EAAOb,EAAUC,aAAa,CAAkB,sBAEtDQ,EAAgBT,GAChBc,EAAed,GAEf,IAAMe,EAAmBF,EAAKG,QAAQ,CAACC,SAAS,CAAC,mBAC7CF,aAA4BG,SAASH,EAAiBI,MAAM,GAEhE,IAAMC,EAAoBP,EAAKG,QAAQ,CAACC,SAAS,CAAC,uBAC9CG,aAA6BF,SAASE,EAAkBD,MAAM,GAElE,IAAME,EAAWC,SAASC,aAAa,CAAC,SACxCF,EAASG,YAAY,CAAC,OAAQ,UAC9BH,EAASG,YAAY,CAAC,OAAQ,mBAC9BH,EAASG,YAAY,CAAC,QAASb,GAC/BE,EAAKY,WAAW,CAACJ,GAEjB,IAAMK,EAAYJ,SAASC,aAAa,CAAC,SAMzC,GALAG,EAAUF,YAAY,CAAC,OAAQ,UAC/BE,EAAUF,YAAY,CAAC,OAAQ,uBAC/BE,EAAUF,YAAY,CAAC,QAASG,KAAKC,SAAS,CAAChB,IAC/CC,EAAKY,WAAW,CAACC,GAEb,CAACb,EAAKG,QAAQ,CAACC,SAAS,CAAC,iBAAkB,CAC7C,IAAMY,EAAQhB,EAAKZ,aAAa,CAAC,uBAC3B6B,EAAOD,EAAME,YAAY,CAAC,QAC1BC,EAAQF,EAAKG,KAAK,CAAC,IAAI,CAAC,EAAE,CAC1BC,EAAQZ,SAASC,aAAa,CAAC,SACrCW,EAAMV,YAAY,CAAC,OAAQ,UAC3BU,EAAMV,YAAY,CAAC,OAAQ,iBAC3BU,EAAMV,YAAY,CAAC,QAASQ,GAC5BnB,EAAKY,WAAW,CAACS,EACnB,CAGAlC,EAAUmC,SAAS,CAAChB,MAAM,CAAC,oBAE3BiB,CAAAA,EAAAA,EAAAA,EAAAA,EAAcvB,EAChB,CAjHAwB,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,8CAA+C,SAAUjC,CAAE,EACjE,IAAMJ,EAAYI,EAAGkC,OAAO,CAAc,2BAC1CvC,EAAeC,GACfc,EAAed,EACjB,GAGAqC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,4DAA6D,SAAUjC,CAAE,EAC/E,IAAMmC,EAAkBC,EAA8BpC,GACtD,GAAI,CAACmC,EAAiB,OACtB,IAAME,EAAwBC,MAAMC,IAAI,CAACJ,EAAgBK,QAAQ,EAAEC,IAAI,CAACC,GACtEA,EAAMX,SAAS,CAACY,QAAQ,CAAC,qCAE3B,GAAIN,EAAuB,OAC3B,IAAMO,EAAW5C,EAAG6C,aAAa,CAAChD,aAAa,CAAsB,iCAC/DiD,EAAaF,GAAUG,QAAQC,UAAU,IAC1CF,GACLX,EAAgBd,WAAW,CAACyB,EAC9B,GAEAG,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,kBAAmB,aAAc,SAAUC,CAAK,EACjD,GAAM,CAACC,IAAAA,CAAG,CAAEC,IAAAA,CAAG,CAAC,CAAGF,EAAMG,MAAM,CACzBzD,EAAYsD,EAAMI,aAAa,CAACpB,OAAO,CAAc,2BAC3D5B,EAAaV,EAAW,YAAa,CAAC0B,UAAW,OAAQ6B,IAAAA,EAAKC,IAAAA,CAAG,EACnE,GAEAH,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,mBAAoB,aAAc,SAAUC,CAAK,EAClD,GAAM,CAACK,SAAAA,CAAQ,CAAEC,QAAAA,CAAO,CAAC,CAAGN,EAAMG,MAAM,CAClCzD,EAAYsD,EAAMI,aAAa,CAACpB,OAAO,CAAc,2BAC3D5B,EAAaV,EAAW,CAAC,QAAQ,EAAE4D,EAAU,EAAI,EAAE,CAAC,CAAE,CAAClC,UAAW,QAASiC,SAAAA,EAAUC,QAAAA,CAAO,EAC9F,GAEAP,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,QAAS,8BAA+B,SAAUC,CAAK,EACxD,IAAMf,EAAkBC,EAA8Bc,EAAMO,MAAM,EAClE,GAAI,CAACtB,EAAiB,OACtB,IAAMuB,EAAoBvB,EAAgBD,OAAO,CAAC,cAClD,GAAI,CAACwB,EAAmB,MAAM,MAAU,oBACxC,IAAMH,EAAWI,EAAUxB,GACrBvC,EAAYsD,EAAMI,aAAa,CAACpB,OAAO,CAAc,2BAC3D5B,EAAaV,EAAW,YAAa,CAAC0B,UAAW,mBAAoBiC,SAAAA,CAAQ,EAC/E,GA2EAK,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,6CAA8C,eAAgBnD,CAAI,CAAEoD,CAAK,MAQ9EC,EAPJ,IAAMlE,EAAYa,EAAKyB,OAAO,CAAC,2BACzBjB,EAAWR,EAAKG,QAAQ,CAACC,SAAS,CAAC,mBACrCI,aAAoBH,SAASG,EAASF,MAAM,GAEhD,IAAMO,EAAYb,EAAKG,QAAQ,CAACC,SAAS,CAAC,uBACtCS,aAAqBR,SAASQ,EAAUP,MAAM,GAGlD,GAAI,CACF+C,EAAW,MAAMD,EAAME,IAAI,EAC7B,CAAE,MAAOC,EAAO,CACd,IAAIC,EACJ,GAAI,CAEFA,EAAO1C,KAAK2C,KAAK,CAACF,EAAMF,QAAQ,CAACK,IAAI,CACvC,CAAE,MAAOC,EAAG,CAEZ,CAEA,GAAIH,GAAQA,EAAKI,KAAK,CAAE,CACtB,IAAMC,EAAe1E,EAAUC,aAAa,CAAsB,uBAKlEyE,EAAavC,SAAS,CAACwC,GAAG,CAAC,8BAC3BD,EAAavC,SAAS,CAAChB,MAAM,CAAC,uBAEhC,MAAqC,MAA1BiD,EAAMF,QAAQ,CAACU,MAAM,EAG9BC,OAAOC,QAAQ,CAACC,MAAM,EAE1B,CAEIb,IACExC,GAEEwC,EAASC,IAAI,CAACa,MAAM,EACtBhF,CAAAA,EAAUC,aAAa,CAAsB,uBAAwB+B,KAAK,CAAGkC,EAASC,IAAI,CAACa,MAAM,EAGrGjF,EAAeC,GACfiF,sBAAsB,IAAMnE,EAAed,IAE/C,GAKA,IAAIkF,EAAqB,GAKrBC,EAAe,GAIfC,EAAoC,KAGxC,SAASC,EAA6BC,CAAS,EAG7C,IAAMC,EAAYjC,oBAAAA,EAAMkC,SAAS,CAI/BN,IAHGK,CAKP,CAGA,SAASE,EAAoBH,CAAS,EAIpC,GAAI,CAACJ,EAAoB,CAGvB,IAAMK,EAAYjC,oBAAAA,EAAMkC,SAAS,CACjC,GAAI,CAACD,EAAW,MAClB,CAEA,IAAMG,EAAUpC,EAAMO,MAAM,CAC5B8B,CAIF,SAA0BD,CAAyB,EACjD,IAAME,EAASC,SAkLiBtB,CAAY,CAAEuB,CAAyB,EACvE,IAAMC,EAASD,CAAS,CAAC,EAAE,CAC3B,GAAI,CAACC,GAAU,CAACxB,EAAM,OAEtB,IAAMyB,EAAQzB,EAAK0B,SAAS,CAAC,EAAGF,GAAQ9D,KAAK,CAAC,MACxCiE,EAAeF,CAAK,CAACA,EAAMG,MAAM,CAAG,EAAE,CAGtCC,EAAQF,GAAcE,MAAMC,GAClC,GAAI,CAACD,EAAO,OAEZ,IAAME,EAAaF,CAAK,CAAC,EAAE,CACrBG,EAAcH,CAAK,CAAC,EAAE,CACtBI,EAASJ,CAAK,CAAC,EAAE,CACjBK,EAAgBC,SAASN,CAAK,CAAC,EAAE,CAAG,IACpCO,EAAcC,CAAAA,CAAQR,CAAK,CAAC,EAAE,CAC9BS,EAAkB,CAACC,MAAML,GACzBM,EAAYF,EAAkB,CAAC,EAAEJ,EAAgB,EAAE,CAAC,CAAC,CAAGD,EAC1DQ,EAAY,CAAC,EAAED,EAAU,CAAC,EAAEJ,EAAc,OAAS,GAAG,CAAC,CAEvDM,EAAiB1C,EAAK2C,OAAO,CAAC,KAAMnB,GACpCkB,EAAiB,GACnBA,CAAAA,EAAiB1C,EAAK4B,MAAM,EAE9B,IAAMgB,EAAc5C,EAAK0B,SAAS,CAACF,EAAQkB,GAEvCE,EAAYC,UAAU,CAACJ,IACzBA,CAAAA,EAAY,EAAC,EAcf,IAAMK,EAAqBnB,EAAcoB,OAAO,CAAChB,EAAY,IAAIiB,IAAI,GAAGpB,MAAM,CAAG,GAAKgB,EAAYI,IAAI,GAAGpB,MAAM,CAAG,EAClH,GAAIkB,EAAoB,CACtB,IAAIG,EAAqB,CAAC,EAAEjB,EAAY,EAAES,EAAU,CAAC,CACjDS,EAAsBlD,EAAK0B,SAAS,CAACF,GACnC2B,EAA2BF,EAAmBrB,MAAM,CAEtDwB,EAAiB,CAAC,KAAM,KAAK,CAE7BC,EAAarD,EAAK0B,SAAS,CAAC,EAAGF,GAAUyB,EAAqBC,EAElE,GAAIZ,GAAmB,CAACtC,EAAK0B,SAAS,CAACF,GAAQK,KAAK,CAH5B,UAG+C,KAnErC7B,EAAcsD,EAAdtD,EAoEmBA,EAAK0B,SAAS,CAACF,GApEpB8B,EAoE6BpB,EAAgB,EAC3Fe,GADAC,EAvDGzB,EAZU/D,KAAK,CAAC,MAET6F,GAAG,CAACC,IAEhB,GAAIA,EAAKT,OAAO,CAAC,OAAQ,IAAIF,UAAU,CAAC,CAAC,EAAES,EAAc,CAAC,CAAC,EAAG,CAC5D,IAAMjC,EAASmC,EAAKT,OAAO,CAAC,CAAC,EAAEO,EAAc,CAAC,CAAE,CAAC,EAAEA,EAAgB,EAAE,CAAC,EAEtE,OADAA,GAAiB,EACVjC,CACT,CACA,OAAOmC,CACT,GAEaC,IAAI,CAAC,MAyDdL,EAAiB,CAAC5B,EAAQA,EAASyB,EAAmBrB,MAAM,CAAC,CAC7DyB,EAAarD,EAAK0B,SAAS,CAAC,EAAGF,GAAUyB,CAC3C,CAEA,MAAO,CACLjD,KAAMqD,EACNJ,mBAAAA,EACA1B,UAAW,CAACC,EAAS2B,EAA0B3B,EAAS2B,EAAyB,CACjFO,UAAW,aACXN,eAAAA,CACF,CACF,CAAO,CAEL,IAAMO,EAAsBnC,EAAS,CAAC;AAAE,EAAEO,EAAW,CAAC,CAACH,MAAM,CAC7D,MAAO,CACLqB,mBAAoB,GACpBjD,KAAMA,EAAK0B,SAAS,CAAC,EAAGiC,GAAuB3D,EAAK0B,SAAS,CAACF,GAC9DD,UAAW,CAACoC,EAAqBA,EAAoB,CACrDD,UAAW,SACXN,eAAgB,CAAC,KAAM,KAAK,CAEhC,CACF,EA9PmCjC,EAAQ1D,KAAK,CAAE,CAAC0D,EAAQyC,cAAc,CAAEzC,EAAQ0C,YAAY,CAAC,CAC/EC,MAAAA,IAAXzC,GAEJ0C,EAAkB5C,EAASE,EAC7B,GATmBF,GACjBR,EAAqB,EACvB,CASA,SAASoD,EAAkB5C,CAAyB,CAAE6C,CAAwB,EAC5E,GAAInD,OAAAA,GAA8BA,CAAsB,IAAtBA,EAA4B,CAC5DM,EAAQ8C,eAAe,CAAG,OAC1B,GAAI,KAEExG,EADJkD,EAAqB,GAEjBqD,eAAAA,EAAYN,SAAS,EACvBjG,EAAQuG,EAAYf,kBAAkB,CAEA,OAAlCe,EAAYZ,cAAc,CAAC,EAAE,EAAaY,OAAAA,EAAYZ,cAAc,CAAC,EAAE,GACzEjC,EAAQyC,cAAc,CAAGI,EAAYZ,cAAc,CAAC,EAAE,CACtDjC,EAAQ0C,YAAY,CAAGG,EAAYZ,cAAc,CAAC,EAAE,GAItDjC,EAAQyC,cAAc,CAAGI,EAAYzC,SAAS,CAAC,EAAE,CAEnDV,EAAoB9D,SAASmH,WAAW,CAACF,EAAYN,SAAS,CAAE,GAAOjG,EACzE,CAAE,MAAOoC,EAAO,CACdgB,EAAoB,EACtB,CACAM,EAAQ8C,eAAe,CAAG,OAC5B,CAEA,GAAI,CAACpD,EAAmB,CACtB,GAAI,CACF9D,SAASmH,WAAW,CAAC,mBACvB,CAAE,MAAOjE,EAAG,CAEZ,CACAkB,EAAQ1D,KAAK,CAAGuG,EAAYhE,IAAI,CAChC,GAAI,CACFjD,SAASmH,WAAW,CAAC,iBACvB,CAAE,MAAOjE,EAAG,CAEZ,CACAkB,EAAQgD,aAAa,CAAC,IAAIC,YAAY,QAAS,CAACC,QAAS,GAAMC,WAAY,EAAI,GACjF,CAEgC,MAA5BN,EAAYzC,SAAS,CAAC,EAAE,EAAYyC,MAAAA,EAAYzC,SAAS,CAAC,EAAE,GAC9DJ,EAAQyC,cAAc,CAAGI,EAAYzC,SAAS,CAAC,EAAE,CACjDJ,EAAQ0C,YAAY,CAAGG,EAAYzC,SAAS,CAAC,EAAE,CAEnD,CAEA,SAASgD,EAAiBxD,CAAS,EAIjC,IAAIH,GAMA7B,UAAAA,EAAMyF,GAAG,EAAgBzF,EAAM0F,QAAQ,EAAI,CAAC1F,EAAM2F,OAAO,CAAE,CAC7D,IAAMvD,EAAUpC,EAAMO,MAAM,CAEtB+B,EAASsD,SA2EY3E,CAAY,CAAEuB,CAAyB,EACpE,IAAMC,EAASD,CAAS,CAAC,EAAE,CAC3B,GAAI,CAACC,GAAU,CAACxB,EAAM,OAEtB,IAAMyB,EAAQzB,EAAK0B,SAAS,CAAC,EAAGF,GAAQ9D,KAAK,CAAC,MACxCkF,EAAcnB,CAAK,CAACA,EAAMG,MAAM,CAAG,EAAE,CACrCC,EAAQe,GAAaf,MAAM+C,GACjC,GAAI,CAAC/C,EAAO,OAEZ,IAAMG,EAAcH,CAAK,CAAC,EAAE,EAAI,GAC1BoB,EAAqB,CAAC;AAAE,EAAEjB,EAAY,CAAC,CAC7C,MAAO,CACLhC,KAAMA,EAAK0B,SAAS,CAAC,EAAGF,GAAUyB,EAAqBjD,EAAK0B,SAAS,CAACF,GACtEyB,mBAAAA,EACA1B,UAAW,CAACC,EAASyB,EAAmBrB,MAAM,CAAEJ,EAASyB,EAAmBrB,MAAM,CAAC,CACnF8B,UAAW,aACXN,eAAgB,CAAC,KAAM,KAAK,CAEhC,EA7FkCjC,EAAQ1D,KAAK,CAAE,CAAC0D,EAAQyC,cAAc,CAAEzC,EAAQ0C,YAAY,CAAC,CAC5EC,MAAAA,IAAXzC,IAEJ0C,EAAkB5C,EAASE,GAE3BtC,EAAM8F,cAAc,GAEpBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAK3D,EAAS,UAChB,CAEF,CAEA,SAAS4D,IACPnE,EAAe,EACjB,CAEA,SAASoE,IACPpE,EAAe,EACjB,CAEA,SAASqE,EAAkBlE,CAAS,EAIlC,GAAIH,EACF,OAIF,GAAI7B,WAAAA,EAAMyF,GAAG,CAAe,EAC1BU,SAgOkBnE,CAAS,EAE7B,IAAMI,EAAUpC,EAAMO,MAAM,CACO,aAA/B6B,EAAQgE,kBAAkB,CAC5BhE,EAAQ0C,YAAY,CAAG1C,EAAQyC,cAAc,CAE7CzC,EAAQyC,cAAc,CAAGzC,EAAQ0C,YAAY,EAtOhC9C,GACb,MACF,CAEA,GAAIhC,QAAAA,EAAMyF,GAAG,CAAY,OAEzB,IAAMrD,EAAUpC,EAAMO,MAAM,CAEtB+B,EAAS+D,SA0JMpF,CAAY,CAAEuB,CAAyB,CAAE8D,CAAkB,EAEhF,IAAMzB,EAAiBrC,CAAS,CAAC,EAAE,EAAI,EACjCsC,EAAetC,CAAS,CAAC,EAAE,EAAIqC,EACrC,GAAIrC,OAAAA,CAAS,CAAC,EAAE,EAAaqC,IAAmBC,EAAc,OAE9D,IAAMyB,EAActF,EAAK0B,SAAS,CAAC,EAAGkC,GAAgB2B,WAAW,CAAC,MAAQ,EACpEC,EAA4BxF,EAAK2C,OAAO,CAAC,KAAMkB,EAAe,GAC9D4B,EAAYD,EAA4B,EAAIA,EAA4BxF,EAAK4B,MAAM,CAAG,EACtF8D,EAAgB1F,EAAK0B,SAAS,CAAC4D,EAAaG,GAAW/H,KAAK,CAAC,MAE/DiI,EAAe,GACfC,EAAqB,EACrBC,EAAmB,EACjBC,EAAiC,EAAE,CACzC,IAAK,IAAMtC,KAAQkC,EAAe,CAChC,IAAM7D,EAAQ2B,EAAK3B,KAAK,CAAC,QACzB,GAAIA,EAAO,CACT,IAAIG,EAAcH,CAAK,CAAC,EAAE,CACpBkE,EAAWvC,EAAK9B,SAAS,CAACM,EAAYJ,MAAM,EAClD,GAAIyD,EAAW,CACb,IAAMW,EAAahE,EAAYJ,MAAM,CACrCI,EAAcA,EAAYiE,KAAK,CAAC,EAAG,IAGnCL,EAAqBD,EAAeC,EAAqB5D,EAAYJ,MAAM,CAAGoE,EAC9EL,EAAe,GACfE,GAAoB7D,EAAYJ,MAAM,CAAGoE,CAC3C,MACEhE,GAAe,KACf4D,EAAqB,EACrBC,GAAoB,EAEtBC,EAAqBI,IAAI,CAAClE,EAAc+D,EAC1C,CACF,CAEA,IAAMI,EAAcL,EAAqBrC,IAAI,CAAC,MACxC2C,EAAUpG,EAAK0B,SAAS,CAAC,EAAG4D,GAAea,EAAcnG,EAAK0B,SAAS,CAAC+D,GACxEY,EAA2B,CAC/BC,KAAKC,GAAG,CAACjB,EAAa1B,EAAiBgC,GACvC/B,EAAegC,EAChB,CACD,MAAO,CACL7F,KAAMoG,EACN7E,UAAW8E,EACXpD,mBAAoBkD,EACpBzC,UAAW,aACXN,eAAgB,CAACkC,EAAaG,EAAU,CAE5C,EA5MwBtE,EAAQ1D,KAAK,CAAE,CAAC0D,EAAQyC,cAAc,CAAEzC,EAAQ0C,YAAY,CAAC,CAAE9E,EAAM0F,QAAQ,CACpFX,MAAAA,IAAXzC,IAEJtC,EAAM8F,cAAc,GAEpBd,EAAkB5C,EAASE,GAC7B,CAEAvD,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,sBAAuB,CAC7B0I,UAAW3K,GACT4K,CAAAA,EAAAA,EAAAA,EAAAA,EACEC,CAAAA,EAAAA,EAAAA,EAAAA,EAAU7K,EAAI,UAAWoJ,GACzByB,CAAAA,EAAAA,EAAAA,EAAAA,EAAU7K,EAAI,UAAW0I,GACzBmC,CAAAA,EAAAA,EAAAA,EAAAA,EAAU7K,EAAI,cAAeiF,GAC7B4F,CAAAA,EAAAA,EAAAA,EAAAA,EAAU7K,EAAI,QAASqF,GACvBwF,CAAAA,EAAAA,EAAAA,EAAAA,EAAU7K,EAAI,mBAAoBkJ,GAClC2B,CAAAA,EAAAA,EAAAA,EAAAA,EAAU7K,EAAI,iBAAkBmJ,GAEtC,G,SAGK2B,CAAO,E,6CAAPA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAeL,IAAM/B,EAAiB,UAsBjB9C,EAAe,uCAoJd,SAAStC,EAAUoH,CAAa,EACrC,IAAMnL,EAAYmL,EAAK7I,OAAO,CAAC,cAC/B,GAAI,CAACtC,EAAW,MAAM,MAAU,oBAEhC,IAAMoL,EAAQ1I,MAAMC,IAAI,CAAC3C,EAAUG,gBAAgB,CAAC,WAAWkL,MAAM,CAACC,GAC7D,CAACA,EAAKhJ,OAAO,CAAC,mBAEvB,OAAO8I,EAAMlE,OAAO,CAACiE,EACvB,CAYA,SAASrK,EAAed,CAAkB,EACxC,GAAIsB,IAAAA,SAASnB,gBAAgB,CAAC,2BAA2BgG,MAAM,CAAQ,OAEvE,IAAMoF,EAAevL,EAAUsC,OAAO,CAAc,qBACpD,GAAIiJ,EAAc,OAElB,IAAMC,EAAaxL,EAAUG,gBAAgB,CAAmB,oCAC1DsL,EAAQD,EAAWrF,MAAM,CACzBuF,EAAYhJ,MAAMC,IAAI,CAAC6I,GAAYH,MAAM,CAACM,GAAYA,EAAS/H,OAAO,EAAEuC,MAAM,CAC9EyF,EAAqBtK,SAASnB,gBAAgB,CAAC,gDACrD,IAAK,IAAM0L,KAAYD,EACrBC,EAASrK,YAAY,CAAC,iBAAkBsK,OAAOJ,IAC/CG,EAASrK,YAAY,CAAC,aAAcsK,OAAOL,GAE/C,CAGA,SAASjJ,EAA8BuJ,CAAoB,EACzD,IAAIC,EAAWD,EAAYzJ,OAAO,CAAgB,uBAC9C2J,EAAaD,EAGjB,KACE,CAACC,EAAaA,EAAWC,aAAa,CAAE5J,OAAO,CAAgB,sBAAqB,IAAQ0J,GAC5FC,OAAAA,GAEAD,EAAWC,EAEb,OAAOD,CACT,C,kECrmBA,IAAIG,EAAc,GACZC,EAAsD,IAAIC,EAAAA,CAAWA,CAE3E,SAASC,EAAYhJ,CAAiB,EACpC,IAAMiJ,EAAUjJ,EAAMO,MAAM,CAC5B,GAAI0I,aAAmBC,aAAeD,EAAQE,QAAQ,GAAKC,KAAKC,aAAa,CAC3E,IAAK,IAAMvG,KAASgG,EAAYQ,OAAO,CAACL,GACtCnG,EAAM/B,IAAI,CAACwI,IAAI,CAAC,KAAMN,EAG5B,CAEO,SAASO,EAAQC,CAAgB,CAAEC,CAAgC,EACnEb,IACHA,EAAc,GAGd7K,SAAS2L,gBAAgB,CAAC,QAASX,EAAa,KAElDF,EAAYzH,GAAG,CAACoI,EAAUC,GAEtB1L,SAAS4L,aAAa,YAAYV,aAAelL,SAAS4L,aAAa,CAACN,OAAO,CAACG,IAClFC,EAAG1L,SAAS4L,aAAa,CAE7B,CAEO,SAASC,EACdC,CAA2C,CAC3CL,CAAgB,CAChBM,CAA+C,EAE/C,SAASC,EAAYhK,CAAY,EAC/B,IAAMI,EAAgBJ,EAAMI,aAAa,CACpCA,IACLA,EAAc6J,mBAAmB,CAACH,EAAWC,GAC7C3J,EAAc6J,mBAAmB,CAAC,OAAQD,GAC5C,CAEAR,EAAQC,EAAU,SAAUlL,CAAK,EAC/BA,EAAMoL,gBAAgB,CAACG,EAAWC,GAClCxL,EAAMoL,gBAAgB,CAAC,OAAQK,EACjC,EACF,CAEO,SAASE,EAAQT,CAAgB,CAAEM,CAA2B,EACnE,SAASC,EAAYhK,CAAY,EAC/B,GAAM,CAACI,cAAAA,CAAa,CAAC,CAAGJ,EACnBI,IAELA,EAAc6J,mBAAmB,CAAC,QAASF,GAC3C3J,EAAc6J,mBAAmB,CAAC,OAAQD,GAC5C,CAEAR,EAAQC,EAAU,SAAUlL,CAAK,EAC/BA,EAAMoL,gBAAgB,CAAC,QAASI,GAChCxL,EAAMoL,gBAAgB,CAAC,OAAQK,EACjC,EACF,C,6DChEA,SAASG,EAAeC,CAAgB,EACtC,IAAMC,EAAQrM,SAASrB,aAAa,CAAC,cAChC0N,IAELA,EAAMxL,SAAS,CAAChB,MAAM,CAAC,UAAW,SAE9BuM,EAASC,EAAMxL,SAAS,CAACwC,GAAG,CAAC,WAC5BgJ,EAAMxL,SAAS,CAACwC,GAAG,CAAC,SAC3B,CAUA,eAAeiJ,IACb,IAAMC,EAAOvM,SAASrB,aAAa,CAAkB,uBAC/C6N,EAAS,MAAMC,CAAAA,EAAAA,EAAAA,CAAAA,EAAO,CAAC5K,QAAS6K,CAAAA,EAAAA,EAAAA,EAAAA,EAA0B1M,SAAUuM,EAAKI,IAAI,EAAGC,YAAa,WAAW,GAE1GC,EAAM,KAEJC,EAAgBvJ,OAAOuJ,QAAQ,CAoBrC,GAjBAA,EAASC,WAAW,CAAG,SAAUhK,CAA6C,EACxEA,EAAKD,KAAK,CAEZqJ,EADAU,EAAM,KAINV,EADAU,EAAM,IAENG,SAxB0BC,CAAqB,EACnD,IAAMC,EAAYlN,SAASrB,aAAa,CAAC,iCACrCuO,GAAWA,EAAUhN,YAAY,CAAC,UAAW+M,EACnD,EAqB6BlK,EAAKkK,aAAa,EACzC1J,OAAO4J,KAAK,IAIdL,EAASC,WAAW,CAAG,IACzB,EAEA,MA/CO,IAAIK,QAAQC,IACjBC,EAAS3B,gBAAgB,CAAC,gBAAiB0B,EAAS,CAACE,KAAM,EAAI,EACjE,GA+CI,CAACV,EACH,MAAM,MAAU,sBAEpB,CAiCA,eAAeW,IACb,IAAMC,EAAazN,SAASrB,aAAa,CAAC,yBACpCuO,EAAYlN,SAASrB,aAAa,CAAC,iCAEzC,GAAI,CAAE8O,CAAAA,aAAsBC,eAAc,GACtC,CAACC,SAhBcC,CAA0B,EAC7C,GAAI,CAAEA,CAAAA,aAAsBC,eAAc,EAAI,MAAO,GAErD,IAAMZ,EAAgB7H,SAASwI,EAAW/L,OAAO,EAC3CiM,EAAM,IAAIC,OAAOC,OAAO,GAAK,IAEnC,OAAOF,EAAMb,CACf,EASmBC,GAD6B,MAAO,GAGrD,IAAMe,EAAMR,EAAWd,IAAI,CACrB/J,EAAW,MAAMsL,MAAMD,EAAK,CAACE,QAAS,CAACC,OAAQ,mBAAoB,mBAAoB,gBAAgB,CAAC,GACxG9J,EAAkB,MAAM1B,EAASC,IAAI,GAC3C,OAAOyB,CACT,CAtCAvD,CAAAA,EAAAA,E,OAAAA,EAAAA,EAAQ,yBAA0B,SAAUjC,CAAE,EAC5C,GAAIyE,OAAO8K,MAAM,EAAI9K,OAAO8K,MAAM,CAACvB,QAAQ,CAACC,WAAW,CAAE,CACvD,IAAMjK,EAAQhE,EAAG2B,YAAY,CAAC,cACxBwM,EAAgBnO,EAAG2B,YAAY,CAAC,uBAEtC8C,OAAO8K,MAAM,CAACvB,QAAQ,CAACC,WAAW,CAAC,CACjCjK,MAAAA,EACAmK,cAAAA,CACF,GACA1J,OAAO+K,KAAK,EACd,KAAO,CACL,IAAMC,EAAWzP,EAAG2B,YAAY,CAAC,qBAC7B8N,GAAUhL,CAAAA,OAAOC,QAAQ,CAACmJ,IAAI,CAAG4B,CAAO,CAC9C,CACF,GA0BA,IAAIC,EAAwC,KAE5C,SAASC,IACPD,EAAkB,IACpB,CAMe,eAAe,IAC5B,IAAM3B,EAAM,MAAMW,IAEbX,IACE2B,GACHA,CAAAA,EAAkBlC,IAEfoC,IAAI,CAACD,GAELE,KAAK,CAACF,EAAoB,EAG/B,MAAMD,EAEV,C,kDCpHO,eAAe/B,EAAOmC,CAAgB,EAC3C,IAAMC,EAAiB7O,SAASrB,aAAa,CAAsB,wBAC7DmQ,EAAgBD,EAAehN,OAAO,CAACC,SAAS,CAAC,IACjDiN,EAAUD,EAAcnQ,aAAa,CAAc,WACnDqQ,EAAgBD,EAAQpQ,aAAa,CAAc,kBACnDsQ,EAAUF,EAAQpQ,aAAa,CAAc,6BAC/CiQ,CAAAA,EAAQM,YAAY,EAAEH,EAAQlO,SAAS,CAACwC,GAAG,IAAIuL,EAAQM,YAAY,CAACvO,KAAK,CAAC,MAC1EiO,EAAQhC,WAAW,EAAEoC,EAAcnO,SAAS,CAACwC,GAAG,IAAIuL,EAAQhC,WAAW,CAACjM,KAAK,CAAC,MAE9EiO,EAAQO,KAAK,CACfH,EAAc9O,YAAY,CAAC,aAAc0O,EAAQO,KAAK,EAC7CP,EAAQQ,UAAU,EAC3BJ,EAAc9O,YAAY,CAAC,kBAAmB0O,EAAQQ,UAAU,EAGlEpP,SAASqP,IAAI,CAACC,MAAM,CAACR,GACrB,GAAI,CACF,IAAMjN,EAAU,MAAM+M,EAAQ/M,OAAO,CACrCoN,EAAQpP,MAAM,GACdmP,EAAcO,OAAO,CAAC1N,EACxB,CAAE,MAAOiB,EAAO,CACdmM,EAAQpP,MAAM,GAEd,IAAM2P,EAAYxP,SAASC,aAAa,CAAC,OACzCuP,CAAAA,EAAUC,WAAW,CAAGb,EAAQc,YAAY,EAAI,4BAChDF,EAAU3O,SAAS,CAACwC,GAAG,CAAC,QACxBmM,EAAU3O,SAAS,CAACwC,GAAG,CAAC,QACxB2L,EAAcO,OAAO,CAACC,EACxB,CAQA,OANAT,EAAQpD,gBAAgB,CAAC,SAAU,KAC7BoD,EAAQY,YAAY,CAAC,UACzB5H,CAAAA,EAAAA,EAAAA,CAAAA,EAAKiH,EAAe,iBACpBD,EAAQlP,MAAM,GAChB,GAEOmP,CACT,C,qEC9BA,YAAMY,sBAAsBC,MAG1BC,YAAYC,CAAe,CAAEnN,CAAkB,CAAE,CAC/C,KAAK,CAAC,CAAC,EAAEmN,EAAQ,UAAU,EAAEnN,EAASU,MAAM,CAAC,CAAC,EAC9C,IAAI,CAACV,QAAQ,CAAGA,CAClB,CACF,E,yBCtBA,IAAMoN,EAAa,qBAGNC,EAAwBC,EAAAA,EAAcA,CAACC,YAAY,CAACH,EAAY,CAC3EI,WAAY,CAACC,EAAWzN,IACf0N,EAAAA,CAAkBA,CAACC,KAAK,CAAC,CAC9BC,OAAQ,MACNC,SDiBoCC,CAAgB,CAAE9N,CAAkB,CAAE+N,EAAY,EAAK,EACjG,IAAMC,EAAchO,EAASuL,OAAO,CAAC0C,GAAG,CAAC,iBAAmB,GAC5D,GAAI,CAACF,GAAa,CAACC,EAAY9K,UAAU,CAAC,aACxC,MAAM,IAAI8J,EAAc,CAAC,0CAA0C,EAAEgB,EAAY,CAAC,CAAEhO,GAGtF,GAAI+N,GAAa,CAAEC,CAAAA,EAAY9K,UAAU,CAAC,cAAgB8K,EAAY9K,UAAU,CAAC,mBAAkB,EACjG,MAAM,IAAI8J,EAAc,CAAC,8DAA8D,EAAEgB,EAAY,CAAC,CAAEhO,GAG1G,IAAMkO,EAAgBlO,EAASuL,OAAO,CAAC0C,GAAG,CAAC,eAC3C,GAAKC,EAEE,IAAI,CAACJ,EAAOK,QAAQ,CAACD,GAC1B,MAAM,IAAIlB,EAAc,2CAA4ChN,EACtE,MAHE,MAAM,IAAIgN,EAAc,4BAA6BhN,EAIzD,ECjCoCoO,SDNMhR,CAAkB,EAC1D,IAAM0Q,EAAS,IAAI1Q,EAASnB,gBAAgB,CAAkB,8BAA8B,CAAC2H,GAAG,CAACyK,GAAQA,EAAKpP,OAAO,EAErH,GAAI6O,EAAO7L,MAAM,CAAG,EAClB,MAAM,MAAU,8CAElB,OAAO6L,CACT,ECD8D1Q,UAAW4C,GAC1DyN,GAETL,WAAAA,EACAzB,SAAU8B,EACVa,sBAAuB,EACzB,EAEJ,GChBO,eAAexE,EACpB1M,CAAkB,CAClBiO,CAAgB,CAChBW,CAAqB,EAErB,IAAMuC,EAAU,IAAIC,QAAQnD,EAAKW,GACjCuC,EAAQhD,OAAO,CAACmB,MAAM,CAAC,mBAAoB,kBAC3C,IAAM1M,EAAW,MAAMyO,KAAKnD,KAAK,CAACiD,GAClC,GAAIvO,EAASU,MAAM,CAAG,KAAOV,EAASU,MAAM,EAAI,IAC9C,MAAM,MAAU,CAAC,KAAK,EAAEV,EAASU,MAAM,CAAC,EAAEV,EAAS0O,UAAU,EAAI,GAAG,CAAC,EAEvE,IAAMC,EAActB,EAAsBG,UAAU,CAAC,MAAMxN,EAASK,IAAI,GAAIL,GAC5E,MAAO4O,CAAAA,EAAAA,EAAAA,CAAAA,EAAUxR,EAAUuR,EAC7B,CAEO,SAASE,EACdxD,CAAgB,CAChBW,CAAqB,CACrB8C,EAAsB,GAAI,CAC1BC,EAAsB,CAAC,IAAI,CAC3BC,EAAkB,CAAC,IAAI,EAEvB,OAAO,eAAgBC,EAAKC,CAAY,EACtC,IAAMX,EAAU,IAAIC,QAAQnD,EAAKW,GACjCuC,EAAQhD,OAAO,CAACmB,MAAM,CAAC,mBAAoB,kBAC3C,IAAM1M,EAAW,MAAMyO,KAAKnD,KAAK,CAACiD,GAElC,GAAIS,EAAgBb,QAAQ,CAACnO,EAASU,MAAM,EAE1C,OADA,MAAM,IAAI8J,QAAQC,GAAW0E,WAAW1E,EAASyE,IAC1CD,EAAKC,IAAAA,GAEd,GAAIH,EAAoBZ,QAAQ,CAACnO,EAASU,MAAM,EAC9C,OAAOV,EAET,GAAIA,EAASU,MAAM,CAAG,KAAOV,EAASU,MAAM,EAAI,IAC9C,MAAM,MAAU,CAAC,KAAK,EAAEV,EAASU,MAAM,CAAC,EAAEV,EAAS0O,UAAU,EAAI,GAAG,CAAC,CAEvE,OAAM,MAAU,CAAC,WAAW,EAAE1O,EAASU,MAAM,CAAC,mCAAmC,CAAC,CACpF,EAAGoO,EACL,CAkBO,eAAeM,EACpB/D,CAAgB,CAChBgE,CAA0B,CAC1BrD,CAA2B,EAE3B,GAAM,CAACkD,KAAAA,EAAO,GAAG,CAAEH,oBAAAA,EAAsB,CAAC,IAAI,CAAEnI,IAAAA,EAAM,CAAC,CAAE0I,QAAAA,EAAU,CAAC,CAAC,CAAGtD,GAAW,CAAC,EAE9EuD,EAAoC,SACjC,IAAI/E,QAAQ,CAACC,EAAS+E,KAC3BL,WAAW,UACT,GAAI,CACF,IAAMZ,EAAU,IAAIC,QAAQnD,EAAKgE,GACjCd,EAAQhD,OAAO,CAACmB,MAAM,CAAC,mBAAoB,kBAC3C,IAAM1M,EAAW,MAAMyO,KAAKnD,KAAK,CAACiD,GAClC,GAAIQ,EAAoBZ,QAAQ,CAACnO,EAASU,MAAM,GAAK4O,EAAU,IAAM1I,EACnE,OAAO6D,EAAQzK,GAIjByK,EAAQ,QACV,CAAE,MAAOgF,EAAK,CAGZD,EAAOC,EACT,CACF,EAAGP,EAAOI,EACZ,GAGI5N,EAAS,MAAM6N,UACrB,UAAI7N,EACKA,EAGF0N,EAAW/D,EAAKgE,EAAc,CAACH,KAAAA,EAAMH,oBAAAA,EAAqBnI,IAAAA,EAAK0I,QAASA,EAAU,CAAC,EAC5F,C,qLC3FO,IAAMI,EAAkC,KAC7C,IAAMC,EAA8BvS,SAASrB,aAAa,CACxD,kDAEF,CAAI4T,GACKA,QAAAA,EAA4B1Q,OAAO,EAWjC2Q,EAA4B,GAChC,sCAAsCC,IAAI,CAACC,IAAYA,EAAO3B,QAAQ,CAAC,QAAU2B,EAAO3B,QAAQ,CAAC,SAGpG4B,EAAwB,IAAIC,IAAI,CACpC,SACA,WACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,SACD,EA6BYC,EAAoB,IAC/B,IAAMH,EAASI,CAAAA,EAAAA,EAAAA,EAAAA,EAAoB9Q,GAE7B+Q,EACJC,SA5B8BzQ,CAA0B,EAC1D,GAAI,CAAEA,CAAAA,aAAkB2I,WAAU,EAAI,MAAO,GAE7C,IAAM1K,EAAO+B,EAAO0Q,QAAQ,CAACC,WAAW,GAClCC,EAAO5Q,EAAO9B,YAAY,CAAC,SAASyS,eAAiB,OAErDE,EACJ7Q,SAAAA,EAAO8Q,YAAY,EACnB9Q,SAAAA,EAAO9B,YAAY,CAAC,kBACpB8B,OAAAA,EAAO9B,YAAY,CAAC,YAEtB,MACE,CAACD,WAAAA,GACCA,aAAAA,GACCA,UAAAA,GAAoB,CAACmS,EAAsBW,GAAG,CAACH,IAChD5Q,EAAOgR,iBAAiB,GAC1B,CAACH,CAEL,EAUsBpR,EAAMO,MAAM,GAAKiR,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,wCAEhDC,EAA6BnB,KAAqC,CAACS,EAEzE,OAAOP,EAA0BE,IAAWe,CAC9C,C,iECrEO,uBAAMC,aACX5D,YAAY6D,CAAmB,CAAE,CAC/B,IAAI,CAACC,MAAM,CAAG,GACd,IAAI,CAACC,WAAW,CAAG,KACjBF,IACA,IAAI,CAACC,MAAM,CAAG,EAChB,CACF,CAMF,EAGO,SAASjK,EACdpH,CAAmB,CACnBuR,CAAiB,CACjBC,CAA0C,CAC1CnF,EAAmC,CAACoF,QAAS,EAAK,CAAC,EAGnD,OADAzR,EAAOoJ,gBAAgB,CAACmI,EAAWC,EAAQnF,GACpC,IAAI8E,aAAa,KACtBnR,EAAO0J,mBAAmB,CAAC6H,EAAWC,EAAQnF,EAChD,EACF,CAOO,SAASlF,EAAQ,GAAGuK,CAA6B,EACtD,OAAO,IAAIP,aAAa,KACtB,IAAK,IAAMQ,KAAgBD,EACzBC,EAAaL,WAAW,EAE5B,EACF,C","sources":["app/assets/modules/github/behaviors/task-list.ts","app/assets/modules/github/onfocus.ts","app/assets/modules/github/sso.ts","ui/packages/details-dialog/details-dialog.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/hotkey/keyboard-shortcuts-helper.ts","ui/packages/subscription/subscription.ts"],"sourcesContent":["// ### Example Markup\n//\n//   <div class=\"js-task-list-container\">\n//     <task-lists disabled sortable>\n//       <div class=\"js-comment-body\">\n//         <ul class=\"contains-task-list\">\n//           <li class=\"task-list-item\">\n//             <input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled>\n//             text\n//           </li>\n//         </ul>\n//       </div>\n//     </task-lists>\n//     <form class=\"js-comment-update\">\n//       <textarea class=\"js-task-list-field\">- [ ] text</textarea>\n//     </form>\n//   </div>\n//\n// ### Specification\n//\n// TaskLists MUST be contained in a `(div).js-task-list-container`.\n//\n// TaskList Items SHOULD be an a list (`UL`/`OL`) element.\n//\n// Task list items MUST match `(input).task-list-item-checkbox` and MUST be\n// `disabled` by default.\n//\n// TaskLists MUST have a `(textarea).js-task-list-field` form element whose\n// `value` attribute is the source (Markdown) to be updated. The source MUST\n// follow the syntax guidelines.\n//\n// ### NOTE\n//\n// Task list checkboxes are rendered as disabled by default because rendered\n// user content is cached without regard for the viewer.\n\nimport {compose, fromEvent} from '@github-ui/subscription'\n// eslint-disable-next-line no-restricted-imports\nimport {fire, on} from 'delegated-events'\n\nimport TaskListsElement from '@github/task-lists-element'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {remoteForm} from '@github/remote-form'\nimport {requestSubmit} from '@github-ui/form-utils'\n\ntype Position = [number, number]\n\ninterface CheckPayload {\n  operation: 'check'\n  position: Position\n  checked: boolean\n}\n\ninterface ConvertPayload {\n  operation: 'convert_to_block'\n  position: number\n}\n\ninterface MovePayload {\n  operation: 'move'\n  src: Position\n  dst: Position\n}\n\n// Enable task lists with persistence fields. Otherwise, the viewer lacks\n// permission to update the comment so task lists remain disabled.\nobserve('.js-task-list-container .js-task-list-field', function (el) {\n  const container = el.closest<HTMLElement>('.js-task-list-container')!\n  enableTaskList(container)\n  updateProgress(container)\n})\n\n// Add the task list conversion button to the container\nobserve('.js-convert-tasklist-to-block-enabled .contains-task-list', function (el) {\n  const parentContainer = findTopLevelTasklistContainer(el)\n  if (!parentContainer) return\n  const alreadyContainsButton = Array.from(parentContainer.children).some(child =>\n    child.classList.contains('task-list-item-convert-container'),\n  )\n  if (alreadyContainsButton) return\n  const template = el.ownerDocument.querySelector<HTMLTemplateElement>('.js-convert-to-block-template')\n  const clonedNode = template?.content.cloneNode(true)\n  if (!clonedNode) return\n  parentContainer.appendChild(clonedNode)\n})\n\non('task-lists-move', 'task-lists', function (event) {\n  const {src, dst} = event.detail\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, 'reordered', {operation: 'move', src, dst})\n})\n\non('task-lists-check', 'task-lists', function (event) {\n  const {position, checked} = event.detail\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, `checked:${checked ? 1 : 0}`, {operation: 'check', position, checked})\n})\n\non('click', '.js-convert-to-block-button', function (event) {\n  const parentContainer = findTopLevelTasklistContainer(event.target! as Element)\n  if (!parentContainer) return\n  const taskListContainer = parentContainer.closest('task-lists')\n  if (!taskListContainer) throw new Error('parent not found')\n  const position = listIndex(parentContainer)\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, `converted`, {operation: 'convert_to_block', position})\n})\n\nexport function enableTaskList(container: Element) {\n  if (container.querySelector('.js-task-list-field')) {\n    const taskLists = container.querySelectorAll('task-lists')\n    for (const el of taskLists) {\n      if (el instanceof TaskListsElement) {\n        el.disabled = false\n        const buttons = el.querySelectorAll('button')\n        for (const button of buttons) {\n          button.disabled = false\n        }\n      }\n    }\n  }\n}\n\nexport function disableTaskList(container: Element) {\n  for (const el of container.querySelectorAll('task-lists')) {\n    if (el instanceof TaskListsElement) {\n      el.disabled = true\n\n      const buttons = el.querySelectorAll('button')\n      for (const button of buttons) {\n        button.disabled = true\n      }\n    }\n  }\n}\n\n// Persist task list source changes.\n//\n// Adds a hidden tracking input to the form to trigger server-side\n// instrumentation.\nfunction saveTaskList(container: Element, track: string, payload: CheckPayload | MovePayload | ConvertPayload) {\n  const form = container.querySelector<HTMLFormElement>('.js-comment-update')!\n\n  disableTaskList(container)\n  updateProgress(container)\n\n  const previousTracking = form.elements.namedItem('task_list_track')\n  if (previousTracking instanceof Element) previousTracking.remove()\n\n  const previousOperation = form.elements.namedItem('task_list_operation')\n  if (previousOperation instanceof Element) previousOperation.remove()\n\n  const tracking = document.createElement('input')\n  tracking.setAttribute('type', 'hidden')\n  tracking.setAttribute('name', 'task_list_track')\n  tracking.setAttribute('value', track)\n  form.appendChild(tracking)\n\n  const operation = document.createElement('input')\n  operation.setAttribute('type', 'hidden')\n  operation.setAttribute('name', 'task_list_operation')\n  operation.setAttribute('value', JSON.stringify(payload))\n  form.appendChild(operation)\n\n  if (!form.elements.namedItem('task_list_key')) {\n    const field = form.querySelector('.js-task-list-field')!\n    const name = field.getAttribute('name')!\n    const value = name.split('[')[0]!\n    const input = document.createElement('input')\n    input.setAttribute('type', 'hidden')\n    input.setAttribute('name', 'task_list_key')\n    input.setAttribute('value', value)\n    form.appendChild(input)\n  }\n\n  // If the user has ran into a stale error and is now re-submitting, hide it\n  container.classList.remove('is-comment-stale')\n\n  requestSubmit(form)\n}\n\nremoteForm('.js-task-list-container .js-comment-update', async function (form, wants) {\n  const container = form.closest('.js-task-list-container')!\n  const tracking = form.elements.namedItem('task_list_track')\n  if (tracking instanceof Element) tracking.remove()\n\n  const operation = form.elements.namedItem('task_list_operation')\n  if (operation instanceof Element) operation.remove()\n\n  let response\n  try {\n    response = await wants.json()\n  } catch (error) {\n    let data\n    try {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      data = JSON.parse(error.response.text)\n    } catch (e) {\n      // Do nothing\n    }\n\n    if (data && data.stale) {\n      const commentField = container.querySelector<HTMLTextAreaElement>('.js-task-list-field')!\n\n      // Prevent the stale value of this field from being persisted (and, eventually, erroneously\n      // restored) if the page is refreshed. We will undo this (and restore the session-resumable\n      // behaviour) if the user clicks the 'Cancel' button to discard the stale edits in this field.\n      commentField.classList.add('session-resumable-canceled')\n      commentField.classList.remove('js-session-resumable')\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    } else if (error.response.status === 422) {\n      // Do nothing\n    } else {\n      window.location.reload()\n    }\n  }\n\n  if (response) {\n    if (operation) {\n      // Store reordered Markdown source in textarea.\n      if (response.json.source) {\n        container.querySelector<HTMLTextAreaElement>('.js-task-list-field')!.value = response.json.source\n      }\n    }\n    enableTaskList(container)\n    requestAnimationFrame(() => updateProgress(container))\n  }\n})\n\n// This flag specifies whether `beforeinput` handler is called before `input` event\n// This logic is needed because Chrome (Version 86.0.4240.198) has a bug with event.inputType == 'insertText' && event.data == null in textarea\n// But Firefox does not support `beforeinput` yet (as of 9th December 2020)\nlet handleAutocomplete = false\n\n// This flag is used to track if a text composition system (as the helper for JP kanji symbols)\n// has popped up on the screen or not.\n// This is needed because the custom tabbing behavior implemented here interferes with the system element\nlet isIMEVisible = false\n\n// This flag is used to track if the document.execCommand functionality is available\n// This is prefered to use the native execCommand because it allow the use of the undo/redo functionality\nlet canUseExecCommand: boolean | null = null\n\n// This handler will set the handleAutocomplete flag so that all browsers except Firefox can handle the event correctly in autoCompleteOnInput\nfunction tryAutoCompleteOnBeforeInput(ev: Event) {\n  const event = ev as InputEvent\n\n  const isNewLine = event.inputType === 'insertLineBreak'\n  if (!isNewLine) {\n    handleAutocomplete = false\n  } else {\n    handleAutocomplete = true\n  }\n}\n\n// This handler will try autocomplete the text in textarea in all browsers\nfunction autoCompleteOnInput(ev: Event) {\n  const event = ev as InputEvent\n\n  // in Firefox this check will always pass\n  if (!handleAutocomplete) {\n    // this block will be called only in Firefox\n    // when `beforeinput` support is added to Firefox, this whole check can be removed\n    const isNewLine = event.inputType === 'insertLineBreak'\n    if (!isNewLine) return\n  }\n\n  const element = event.target as HTMLInputElement\n  listAutocomplete(element)\n  handleAutocomplete = false\n}\n\nfunction listAutocomplete(element: HTMLInputElement) {\n  const result = autocompletedList(element.value, [element.selectionStart, element.selectionEnd])\n  if (result === undefined) return\n\n  updateElementText(element, result)\n}\n\nfunction updateElementText(element: HTMLInputElement, updatedText: UpdatedText) {\n  if (canUseExecCommand === null || canUseExecCommand === true) {\n    element.contentEditable = 'true'\n    try {\n      handleAutocomplete = false // disable autocomplete due to recursion from insert text event\n      let value = undefined\n      if (updatedText.commandId === Command.insertText) {\n        value = updatedText.autocompletePrefix\n        // check if a specific part of the text should be overwritten\n        if (updatedText.writeSelection[0] !== null && updatedText.writeSelection[1] !== null) {\n          element.selectionStart = updatedText.writeSelection[0]\n          element.selectionEnd = updatedText.writeSelection[1]\n        }\n      } else {\n        // set the selection to delete the current row\n        element.selectionStart = updatedText.selection[0]\n      }\n      canUseExecCommand = document.execCommand(updatedText.commandId, false, value)\n    } catch (error) {\n      canUseExecCommand = false\n    }\n    element.contentEditable = 'false'\n  }\n\n  if (!canUseExecCommand) {\n    try {\n      document.execCommand('ms-beginUndoUnit')\n    } catch (e) {\n      // Do nothing.\n    }\n    element.value = updatedText.text\n    try {\n      document.execCommand('ms-endUndoUnit')\n    } catch (e) {\n      // Do nothing.\n    }\n    element.dispatchEvent(new CustomEvent('input', {bubbles: true, cancelable: true}))\n  }\n\n  if (updatedText.selection[0] != null && updatedText.selection[1] != null) {\n    element.selectionStart = updatedText.selection[0]\n    element.selectionEnd = updatedText.selection[1]\n  }\n}\n\nfunction handleShiftEnter(ev: Event) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n  if (isIMEVisible) {\n    return\n  }\n\n  const event = ev as KeyboardEvent\n\n  if (event.key === 'Enter' && event.shiftKey && !event.metaKey) {\n    const element = event.target as HTMLInputElement\n\n    const result = addSoftNewline(element.value, [element.selectionStart, element.selectionEnd])\n    if (result === undefined) return\n\n    updateElementText(element, result)\n\n    event.preventDefault()\n    // Trigger size-to-fit (see github/github#15696)\n    fire(element, 'change')\n  }\n  /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n}\n\nfunction onCompositionStart() {\n  isIMEVisible = true\n}\n\nfunction onCompositionEnd() {\n  isIMEVisible = false\n}\n\nfunction updateIndentation(ev: Event) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n  if (isIMEVisible) {\n    return\n  }\n\n  const event = ev as KeyboardEvent\n  if (event.key === 'Escape') {\n    deselectText(ev)\n    return\n  }\n\n  if (event.key !== 'Tab') return\n\n  const element = event.target as HTMLInputElement\n\n  const result = indent(element.value, [element.selectionStart, element.selectionEnd], event.shiftKey)\n  if (result === undefined) return\n\n  event.preventDefault()\n\n  updateElementText(element, result)\n}\n\nobserve('.js-task-list-field', {\n  subscribe: el =>\n    compose(\n      fromEvent(el, 'keydown', updateIndentation),\n      fromEvent(el, 'keydown', handleShiftEnter),\n      fromEvent(el, 'beforeinput', tryAutoCompleteOnBeforeInput),\n      fromEvent(el, 'input', autoCompleteOnInput),\n      fromEvent(el, 'compositionstart', onCompositionStart),\n      fromEvent(el, 'compositionend', onCompositionEnd),\n    ),\n})\n\n// subset of https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand#commands\nenum Command {\n  insertText = 'insertText',\n  delete = 'delete',\n}\n\ntype UpdatedText = {\n  text: string\n  autocompletePrefix: string\n  selection: SelectionRange\n  writeSelection: SelectionRange\n  commandId: Command\n}\n\ntype SelectionRange = [number | null, number | null]\n\nconst INDENTATION_RE = /^(\\s*)?/\nexport function addSoftNewline(text: string, selection: SelectionRange): UpdatedText | undefined {\n  const offset = selection[0]\n  if (!offset || !text) return undefined\n\n  const lines = text.substring(0, offset).split('\\n')\n  const currentLine = lines[lines.length - 1]\n  const match = currentLine?.match(INDENTATION_RE)\n  if (!match) return undefined\n\n  const indentation = match[1] || ''\n  const autocompletePrefix = `\\n${indentation}`\n  return {\n    text: text.substring(0, offset) + autocompletePrefix + text.substring(offset),\n    autocompletePrefix,\n    selection: [offset + autocompletePrefix.length, offset + autocompletePrefix.length],\n    commandId: Command.insertText,\n    writeSelection: [null, null],\n  }\n}\n\n// matches '- ', '* ', '12. ', '- [ ]', '- [x]', `* [ ] `, `* [x] `, '12. [ ] ', '12. [x] '\nconst TASK_LIST_RE = /^(\\s*)([*-]|(\\d+)\\.)\\s(\\[[\\sx]\\]\\s)?/\n\nfunction updateRemainingNumberBullets(text: string, currentNumber: number): string {\n  let lines = text.split('\\n')\n\n  lines = lines.map(line => {\n    // regexp to check if string starts with number\n    if (line.replace(/^\\s+/, '').startsWith(`${currentNumber}.`)) {\n      const result = line.replace(`${currentNumber}`, `${currentNumber + 1}`)\n      currentNumber += 1\n      return result\n    }\n    return line\n  })\n\n  return lines.join('\\n')\n}\n\nexport function autocompletedList(text: string, selection: SelectionRange): UpdatedText | undefined {\n  const offset = selection[0]\n  if (!offset || !text) return undefined\n\n  const lines = text.substring(0, offset).split('\\n')\n  const previousLine = lines[lines.length - 2]\n\n  // Check for task list existence\n  const match = previousLine?.match(TASK_LIST_RE)\n  if (!match) return undefined\n\n  const listPrefix = match[0]\n  const indentation = match[1]\n  const bullet = match[2]\n  const numericBullet = parseInt(match[3]!, 10)\n  const hasCheckbox = Boolean(match[4])\n  const isNumericBullet = !isNaN(numericBullet)\n  const newBullet = isNumericBullet ? `${numericBullet + 1}.` : bullet\n  let newPrefix = `${newBullet} ${hasCheckbox ? '[ ] ' : ''}`\n\n  let currentLineEnd = text.indexOf('\\n', offset)\n  if (currentLineEnd < 0) {\n    currentLineEnd = text.length\n  }\n  const currentLine = text.substring(offset, currentLineEnd)\n  // do not append list item if already present\n  if (currentLine.startsWith(newPrefix)) {\n    newPrefix = ''\n  }\n  /*\n    Autocomplete list element on next line if current line has list element containing text.\n    or there's text on the line after the cursor (|):\n    ```\n    - | some text\n    ```\n    becomes:\n    ```\n    -\n    - | some text\n    ```\n   */\n  const shouldAutocomplete = previousLine!.replace(listPrefix, '').trim().length > 0 || currentLine.trim().length > 0\n  if (shouldAutocomplete) {\n    let autocompletePrefix = `${indentation}${newPrefix}`\n    let autocompletePostfix = text.substring(offset)\n    const autocompletePrefixLength = autocompletePrefix.length\n\n    let writeSelection = [null, null] as SelectionRange\n    const whiteSpaceRegex = /^\\s*$/g\n    let resultText = text.substring(0, offset) + autocompletePrefix + autocompletePostfix\n\n    if (isNumericBullet && !text.substring(offset).match(whiteSpaceRegex)) {\n      autocompletePostfix = updateRemainingNumberBullets(text.substring(offset), numericBullet + 1)\n      autocompletePrefix += autocompletePostfix\n      writeSelection = [offset, offset + autocompletePrefix.length] as SelectionRange\n      resultText = text.substring(0, offset) + autocompletePrefix\n    }\n\n    return {\n      text: resultText,\n      autocompletePrefix,\n      selection: [offset + autocompletePrefixLength, offset + autocompletePrefixLength],\n      commandId: Command.insertText,\n      writeSelection,\n    }\n  } else {\n    // This case clears the autocompleted list element if user hits an enter without adding any text to it.\n    const offsetWithoutPrefix = offset - `\\n${listPrefix}`.length\n    return {\n      autocompletePrefix: '',\n      text: text.substring(0, offsetWithoutPrefix) + text.substring(offset),\n      selection: [offsetWithoutPrefix, offsetWithoutPrefix],\n      commandId: Command.delete,\n      writeSelection: [null, null],\n    }\n  }\n}\n\nexport function indent(text: string, selection: SelectionRange, substract: boolean): UpdatedText | undefined {\n  // Perform indentation manipulations only when more than one character was selected.\n  const selectionStart = selection[0] || 0\n  const selectionEnd = selection[1] || selectionStart\n  if (selection[0] === null || selectionStart === selectionEnd) return undefined\n\n  const startOffset = text.substring(0, selectionStart).lastIndexOf('\\n') + 1\n  const endOffsetPreNormalization = text.indexOf('\\n', selectionEnd - 1)\n  const endOffset = endOffsetPreNormalization > 0 ? endOffsetPreNormalization : text.length - 1\n  const selectedLines = text.substring(startOffset, endOffset).split('\\n')\n\n  let startUpdated = false\n  let selectionStartDiff = 0\n  let selectionEndDiff = 0\n  const updatedSelectedLines: string[] = []\n  for (const line of selectedLines) {\n    const match = line.match(/^\\s*/)\n    if (match) {\n      let indentation = match[0]\n      const lineText = line.substring(indentation.length)\n      if (substract) {\n        const prevLength = indentation.length\n        indentation = indentation.slice(0, -2)\n\n        // Update selectionStart for first line only.\n        selectionStartDiff = startUpdated ? selectionStartDiff : indentation.length - prevLength\n        startUpdated = true\n        selectionEndDiff += indentation.length - prevLength\n      } else {\n        indentation += '  '\n        selectionStartDiff = 2\n        selectionEndDiff += 2\n      }\n      updatedSelectedLines.push(indentation + lineText)\n    }\n  }\n\n  const linesString = updatedSelectedLines.join('\\n')\n  const newText = text.substring(0, startOffset) + linesString + text.substring(endOffset)\n  const newRange: SelectionRange = [\n    Math.max(startOffset, selectionStart + selectionStartDiff),\n    selectionEnd + selectionEndDiff,\n  ]\n  return {\n    text: newText,\n    selection: newRange,\n    autocompletePrefix: linesString,\n    commandId: Command.insertText,\n    writeSelection: [startOffset, endOffset],\n  }\n}\n\nexport function listIndex(list: Element): number {\n  const container = list.closest('task-lists')\n  if (!container) throw new Error('parent not found')\n  // TODO: De-duplicate this query with respect to https://github.com/github/task-lists-element/pull/32/files#diff-bea14c7a32797e69e22afe268a352c644b1286e415a79e1cf35ef9ebea42b3a3R178-R183\n  const lists = Array.from(container.querySelectorAll('ol, ul')).filter(item => {\n    return !item.closest('tracking-block')\n  })\n  return lists.indexOf(list)\n}\n\nfunction deselectText(ev: Event) {\n  const event = ev as KeyboardEvent\n  const element = event.target as HTMLInputElement\n  if (element.selectionDirection === 'backward') {\n    element.selectionEnd = element.selectionStart\n  } else {\n    element.selectionStart = element.selectionEnd\n  }\n}\n\nfunction updateProgress(container: Element) {\n  if (document.querySelectorAll('tracked-issues-progress').length === 0) return\n\n  const isInTimeline = container.closest<HTMLElement>('.js-timeline-item')\n  if (isInTimeline) return\n\n  const checkboxes = container.querySelectorAll<HTMLInputElement>('.js-comment-body [type=checkbox]')\n  const total = checkboxes.length\n  const completed = Array.from(checkboxes).filter(checkbox => checkbox.checked).length\n  const progressComponents = document.querySelectorAll('tracked-issues-progress[data-type=checklist]')\n  for (const progress of progressComponents) {\n    progress.setAttribute('data-completed', String(completed))\n    progress.setAttribute('data-total', String(total))\n  }\n}\n\n// Finds the task-list ul that is furthest up the DOM tree from the given element\nfunction findTopLevelTasklistContainer(listElement: Element): Element | null {\n  let parentLi = listElement.closest<HTMLLIElement>('.contains-task-list')!\n  let nextParent = parentLi\n  // traverse up to find the list item furthest up in the tree, which will allow us to flatten a multi-tiered\n  // tasklist into a single level\n  while (\n    (nextParent = nextParent.parentElement!.closest<HTMLLIElement>('.contains-task-list')!) !== parentLi &&\n    nextParent !== null\n  ) {\n    parentLi = nextParent\n  }\n  return parentLi\n}\n","// React to elements receiving focus\n//\n// Often we need to apply some behavior to form elements when they start getting\n// interacted with. We could use `observe`, but that can be expensive if there\n// are many such elements on the page, and when we aren't actually interested in\n// those elements until they receive focus.\n//\n// This is a lightweight and preferred alternative to the family of methods\n// from `github/focused` module.\n//\n// Examples\n//\n//   onFocus('.js-widget', element => {\n//     // ...\n//   })\n\nimport SelectorSet from 'selector-set'\n\nlet initialized = false\nconst selectorSet: SelectorSet<(el: HTMLElement) => void> = new SelectorSet()\n\nfunction handleFocus(event: FocusEvent) {\n  const focused = event.target\n  if (focused instanceof HTMLElement && focused.nodeType !== Node.DOCUMENT_NODE) {\n    for (const match of selectorSet.matches(focused)) {\n      match.data.call(null, focused)\n    }\n  }\n}\n\nexport function onFocus(selector: string, fn: (el: HTMLElement) => unknown) {\n  if (!initialized) {\n    initialized = true\n    // We use the \"focus\" event in the capture phase because Firefox\n    // historically had a limitation with \"focusin\" not bubbling.\n    document.addEventListener('focus', handleFocus, true)\n  }\n  selectorSet.add(selector, fn)\n\n  if (document.activeElement instanceof HTMLElement && document.activeElement.matches(selector)) {\n    fn(document.activeElement)\n  }\n}\n\nexport function onKey(\n  eventType: 'keydown' | 'keypress' | 'keyup',\n  selector: string,\n  inputHandler: (event: KeyboardEvent) => unknown,\n) {\n  function blurHandler(event: Event) {\n    const currentTarget = event.currentTarget as HTMLElement\n    if (!currentTarget) return\n    currentTarget.removeEventListener(eventType, inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener(eventType, inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n\nexport function onInput(selector: string, inputHandler: EventListener) {\n  function blurHandler(event: Event) {\n    const {currentTarget} = event\n    if (!currentTarget) return\n\n    currentTarget.removeEventListener('input', inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener('input', inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n","import {dialog} from '@github-ui/details-dialog'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n\nfunction waitForDialogClose(dialogEl: HTMLElement): Promise<unknown> {\n  return new Promise(resolve => {\n    dialogEl.addEventListener('dialog:remove', resolve, {once: true})\n  })\n}\n\nfunction setModalStatus(success: boolean) {\n  const modal = document.querySelector('.sso-modal')\n  if (!modal) return\n\n  modal.classList.remove('success', 'error')\n\n  if (success) modal.classList.add('success')\n  else modal.classList.add('error')\n}\n\nfunction updateExpiresAroundTag(expiresAround: string) {\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n  if (expiryTag) expiryTag.setAttribute('content', expiresAround)\n}\n\n// Asks the user to perform single sign-on for the current organization. SSO\n// take place in a new window so we'll need to set up a way for the other window\n// to tell us when SSO is complete and whether or not it was successful.\nasync function ssoPrompt() {\n  const link = document.querySelector<HTMLLinkElement>('link[rel=sso-modal]')!\n  const prompt = await dialog({content: fetchSafeDocumentFragment(document, link.href), dialogClass: 'sso-modal'})\n\n  let sso = null\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, compat/compat\n  const external: any = window.external\n\n  // Expose callback method for the SSO window to invoke with its status when complete.\n  external.ssoComplete = function (data: {error: boolean; expiresAround: string}) {\n    if (data.error) {\n      sso = false\n      setModalStatus(sso)\n    } else {\n      sso = true\n      setModalStatus(sso)\n      updateExpiresAroundTag(data.expiresAround)\n      window.focus()\n    }\n\n    // Remove the external function now that it's served its purpose\n    external.ssoComplete = null\n  }\n\n  await waitForDialogClose(prompt)\n\n  if (!sso) {\n    throw new Error('sso prompt canceled')\n  }\n}\n\n// Watch for modal complete elements. This is shown as the final step of the\n// single sign-on process that happens in a separate window. Once we see this\n// we know SSO is complete and we can try to tell the original window what the\n// status is before closing the SSO window.\nobserve('.js-sso-modal-complete', function (el) {\n  if (window.opener && window.opener.external.ssoComplete) {\n    const error = el.getAttribute('data-error')\n    const expiresAround = el.getAttribute('data-expires-around')\n\n    window.opener.external.ssoComplete({\n      error,\n      expiresAround,\n    })\n    window.close()\n  } else {\n    const fallback = el.getAttribute('data-fallback-url')\n    if (fallback) window.location.href = fallback\n  }\n})\n\nfunction expiresSoon(expiresTag: Element | null): boolean {\n  if (!(expiresTag instanceof HTMLMetaElement)) return true\n\n  const expiresAround = parseInt(expiresTag.content)\n  const now = new Date().getTime() / 1000\n\n  return now > expiresAround\n}\n\n// Remotely checks the single-sign on status for the current page. If the link tags are\n// not present in the <head>, the current page is not enforced and the status is considered good.\nasync function fetchSsoStatus(): Promise<boolean> {\n  const sessionTag = document.querySelector('link[rel=sso-session]')\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n\n  if (!(sessionTag instanceof HTMLLinkElement)) return true // No SSO enforcement head tags. SSO not enforced.\n  if (!expiresSoon(expiryTag)) return true // Don't bother checking unless we're nearing SSO session expiry\n\n  const url = sessionTag.href\n  const response = await fetch(url, {headers: {Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'}})\n  const result: boolean = await response.json()\n  return result\n}\n\nlet activeSsoPrompt: Promise<void> | null = null\n\nfunction clearActiveSsoPrompt() {\n  activeSsoPrompt = null\n}\n\n// Checks to see if the user has a valid single sign-on session for the current\n// page. If not and the page is enforced, it blocks the callback until the user\n// renews their SSO session.\n/* eslint-disable-next-line import/no-anonymous-default-export */\nexport default async function () {\n  const sso = await fetchSsoStatus()\n\n  if (!sso) {\n    if (!activeSsoPrompt) {\n      activeSsoPrompt = ssoPrompt()\n        /* eslint-disable-next-line github/no-then */\n        .then(clearActiveSsoPrompt)\n        /* eslint-disable-next-line github/no-then */\n        .catch(clearActiveSsoPrompt)\n    }\n\n    await activeSsoPrompt\n  }\n}\n","import {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch (error) {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {eventToHotkeyString} from './hotkey'\n\n/** Returns false if a user has explicitly disabled character key shortcuts. */\nexport const areCharacterKeyShortcutsEnabled = () => {\n  const keyboardShortcutsPreference = document.querySelector<HTMLMetaElement>(\n    'meta[name=keyboard-shortcuts-preference]',\n  )\n  if (keyboardShortcutsPreference) {\n    return keyboardShortcutsPreference.content === 'all'\n  }\n  return true\n}\n\n/**\n * Character-key shortcuts are implemented only with lowercase characters (\"g\", \"g f\"), uppercase characters (\"Shift+A\", \"a\"),\n * symbols (\"Alt+g\"), and punctuation (\"?\", \"!\", \"/\").\n *\n * Returns true if string is NOT what we define as a character key shortcut.\n */\nexport const isNonCharacterKeyShortcut = (hotkey: string) => {\n  return /Enter|Arrow|Escape|Meta|Control|Esc/.test(hotkey) || (hotkey.includes('Alt') && hotkey.includes('Shift'))\n}\n\nconst nonEditableInputTypes = new Set([\n  'button',\n  'checkbox',\n  'color',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit',\n])\n\n/**\n * Returns true if `element` is editable - that is, if it can be focused and typed in like an input or textarea.\n */\nexport function isEditableElement(target: EventTarget | null): boolean {\n  if (!(target instanceof HTMLElement)) return false\n\n  const name = target.nodeName.toLowerCase()\n  const type = target.getAttribute('type')?.toLowerCase() ?? 'text'\n\n  const isReadonly =\n    target.ariaReadOnly === 'true' ||\n    target.getAttribute('aria-readonly') === 'true' ||\n    target.getAttribute('readonly') !== null\n\n  return (\n    (name === 'select' ||\n      name === 'textarea' ||\n      (name === 'input' && !nonEditableInputTypes.has(type)) ||\n      target.isContentEditable) &&\n    !isReadonly\n  )\n}\n\n/**\n * Returns false if a user settings has character key shortcut disabled and keyboard event corresponds to a character\n * key shortcut. Character key shortcuts are never enabled on editable form inputs.\n */\nexport const isShortcutAllowed = (event: KeyboardEvent) => {\n  const hotkey = eventToHotkeyString(event)\n\n  const disallowCharKeyShortcutsBecauseEditable =\n    isEditableElement(event.target) && isFeatureEnabled('no_character_key_shortcuts_in_inputs')\n\n  const allowCharacterKeyShortcuts = areCharacterKeyShortcutsEnabled() && !disallowCharKeyShortcutsBecauseEditable\n\n  return isNonCharacterKeyShortcut(hotkey) || allowCharacterKeyShortcuts\n}\n","// TODO: Research replacing this module with a composable observable library.\n// The scope of this module simply returns a finalized subscription object.\n\n// Lightweight TC39 observable Subscription.\nexport class Subscription {\n  constructor(cleanup: () => void) {\n    this.closed = false\n    this.unsubscribe = () => {\n      cleanup()\n      this.closed = true\n    }\n  }\n\n  // A boolean value indicating whether the subscription is closed.\n  closed: boolean\n  // Cancels the subscription.\n  unsubscribe: () => void\n}\n\n// Create a Subscription from an event.\nexport function fromEvent(\n  target: EventTarget,\n  eventName: string,\n  onNext: EventListenerOrEventListenerObject,\n  options: AddEventListenerOptions = {capture: false},\n): Subscription {\n  target.addEventListener(eventName, onNext, options)\n  return new Subscription(() => {\n    target.removeEventListener(eventName, onNext, options)\n  })\n}\n\n// Combine several subscriptions into a single subscription.\n//\n// subscriptions - A list of subscriptions to combine.\n//\n// Returns a single, combined, subscription.\nexport function compose(...subscriptions: Subscription[]): Subscription {\n  return new Subscription(() => {\n    for (const subscription of subscriptions) {\n      subscription.unsubscribe()\n    }\n  })\n}\n"],"names":["enableTaskList","container","querySelector","taskLists","querySelectorAll","el","TaskListsElement","disabled","buttons","button","disableTaskList","saveTaskList","track","payload","form","updateProgress","previousTracking","elements","namedItem","Element","remove","previousOperation","tracking","document","createElement","setAttribute","appendChild","operation","JSON","stringify","field","name","getAttribute","value","split","input","classList","requestSubmit","observe","closest","parentContainer","findTopLevelTasklistContainer","alreadyContainsButton","Array","from","children","some","child","contains","template","ownerDocument","clonedNode","content","cloneNode","on","event","src","dst","detail","currentTarget","position","checked","target","taskListContainer","listIndex","remoteForm","wants","response","json","error","data","parse","text","e","stale","commentField","add","status","window","location","reload","source","requestAnimationFrame","handleAutocomplete","isIMEVisible","canUseExecCommand","tryAutoCompleteOnBeforeInput","ev","isNewLine","inputType","autoCompleteOnInput","element","listAutocomplete","result","autocompletedList","selection","offset","lines","substring","previousLine","length","match","TASK_LIST_RE","listPrefix","indentation","bullet","numericBullet","parseInt","hasCheckbox","Boolean","isNumericBullet","isNaN","newBullet","newPrefix","currentLineEnd","indexOf","currentLine","startsWith","shouldAutocomplete","replace","trim","autocompletePrefix","autocompletePostfix","autocompletePrefixLength","writeSelection","resultText","currentNumber","map","line","join","commandId","offsetWithoutPrefix","selectionStart","selectionEnd","undefined","updateElementText","updatedText","contentEditable","execCommand","dispatchEvent","CustomEvent","bubbles","cancelable","handleShiftEnter","key","shiftKey","metaKey","addSoftNewline","INDENTATION_RE","preventDefault","fire","onCompositionStart","onCompositionEnd","updateIndentation","deselectText","selectionDirection","indent","substract","startOffset","lastIndexOf","endOffsetPreNormalization","endOffset","selectedLines","startUpdated","selectionStartDiff","selectionEndDiff","updatedSelectedLines","lineText","prevLength","slice","push","linesString","newText","newRange","Math","max","subscribe","compose","fromEvent","Command","list","lists","filter","item","isInTimeline","checkboxes","total","completed","checkbox","progressComponents","progress","String","listElement","parentLi","nextParent","parentElement","initialized","selectorSet","SelectorSet","handleFocus","focused","HTMLElement","nodeType","Node","DOCUMENT_NODE","matches","call","onFocus","selector","fn","addEventListener","activeElement","onKey","eventType","inputHandler","blurHandler","removeEventListener","onInput","setModalStatus","success","modal","ssoPrompt","link","prompt","dialog","fetchSafeDocumentFragment","href","dialogClass","sso","external","ssoComplete","updateExpiresAroundTag","expiresAround","expiryTag","focus","Promise","resolve","dialogEl","once","fetchSsoStatus","sessionTag","HTMLLinkElement","expiresSoon","expiresTag","HTMLMetaElement","now","Date","getTime","url","fetch","headers","Accept","opener","close","fallback","activeSsoPrompt","clearActiveSsoPrompt","then","catch","options","dialogTemplate","clonedDetails","details","detailsDialog","spinner","detailsClass","label","labelledBy","body","append","prepend","errorSpan","textContent","errorMessage","hasAttribute","ResponseError","Error","constructor","message","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","get","responseNonce","includes","getDocumentHtmlSafeNonces","meta","silenceErrorReporting","request","Request","self","statusText","trustedHTML","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","setTimeout","fetchRetry","fetchOptions","attempt","retry","reject","err","areCharacterKeyShortcutsEnabled","keyboardShortcutsPreference","isNonCharacterKeyShortcut","test","hotkey","nonEditableInputTypes","Set","isShortcutAllowed","eventToHotkeyString","disallowCharKeyShortcutsBecauseEditable","isEditableElement","nodeName","toLowerCase","type","isReadonly","ariaReadOnly","has","isContentEditable","isFeatureEnabled","allowCharacterKeyShortcuts","Subscription","cleanup","closed","unsubscribe","eventName","onNext","capture","subscriptions","subscription"],"sourceRoot":""}