{"version":3,"file":"cookie-consent-management-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/client-env/client-env.ts","ui/packages/cookie-consent-management/lib/configuration.ts","ui/packages/cookie-consent-management/CookieConsentManagement.tsx","ui/packages/cookie-consent-management/cookie-consent-management.ts","ui/packages/deferred/deferred.ts","ui/packages/cookie-consent/cookie-consent.ts","ui/packages/cookies/cookies.ts","ui/packages/document-ready/document-ready.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/react-core/react-partial-registry.ts","ui/packages/react-core/ReactPartialElement.tsx","ui/packages/react-core/register-partial.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts","ui/packages/react-core/PartialRouter.tsx","ui/packages/react-core/PartialEntry.tsx"],"sourcesContent":["export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import type {ICookieCategoriesPreferences, ICookieCategory, IOptions, ITextResources} from 'consent-banner'\n\nenum CookieCategoryId {\n  Required = 'Required',\n  Analytics = 'Analytics',\n  SocialMedia = 'SocialMedia',\n  Advertising = 'Advertising',\n}\n\nenum CookieCategoryName {\n  Required = 'Required',\n  Analytics = 'Analytics',\n  SocialMedia = 'Social Media',\n  Advertising = 'Advertising',\n}\n\nconst privacyPolicyUrl = 'https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement'\nconst cookieInventoryUrl = 'https://docs.github.com/en/site-policy/privacy-policies/github-subprocessors-and-cookies'\nconst docsURL =\n  'https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-personal-account-settings/managing-your-cookie-preferences-for-githubs-enterprise-marketing-pages'\n\nexport const cookieCategories: ICookieCategory[] = [\n  {\n    id: CookieCategoryId.Required,\n    name: CookieCategoryName.Required,\n    descHtml:\n      'GitHub uses required cookies to perform essential website functions and to provide the services. For example, cookies are used to log you in, save your language preferences, provide a shopping cart experience, improve performance, route traffic between web servers, detect the size of your screen, determine page load times, improve user experience, and for audience measurement. These cookies are necessary for our websites to work.',\n    isUnswitchable: true,\n  },\n  {\n    id: CookieCategoryId.Analytics,\n    name: CookieCategoryName.Analytics,\n    descHtml:\n      'We allow third parties to use analytics cookies to understand how you use our websites so we can make them better. For example, cookies are used to gather information about the pages you visit and how many clicks you need to accomplish a task. We also use some analytics cookies to provide personalized advertising.',\n  },\n  {\n    id: CookieCategoryId.SocialMedia,\n    name: CookieCategoryName.SocialMedia,\n    descHtml:\n      \"GitHub and third parties use social media cookies to show you ads and content based on your social media profiles and activity on GitHub's websites. This ensures that the ads and content you see on our websites and on social media will better reflect your interests. This also enables third parties to develop and improve their products, which they may use on websites that are not owned or operated by GitHub.\",\n  },\n  {\n    id: CookieCategoryId.Advertising,\n    name: CookieCategoryName.Advertising,\n    descHtml:\n      \"In addition, GitHub and third parties use advertising cookies to show you new ads based on ads you've already seen. Cookies also track which ads you click or purchases you make after clicking an ad. This is done to show you ads that are more relevant to you and for business purposes with our advertising partners. For example, cookies are used to detect when you click an ad and to show you ads based on your social media interests and website browsing history.\",\n  },\n]\n\nconst textResources: ITextResources = {\n  bannerMessageHtml: `We use optional cookies to improve your experience on our websites and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services listed above will be used. You may change your selection on which cookies to accept by clicking \"Manage Cookies\" at the bottom of the page to change your selection. This selection is maintained for 180 days. Please review your selections regularly. <br/> <br/> <a href=\"${docsURL}\">How to manage cookie preferences</a> | <a href=\"${privacyPolicyUrl}\">Privacy Statement</a> | <a href=\"${cookieInventoryUrl}\">Third-Party Cookies</a>.`,\n  acceptAllLabel: 'Accept',\n  rejectAllLabel: 'Reject',\n  moreInfoLabel: 'Manage cookies',\n  preferencesDialogCloseLabel: 'Close',\n  preferencesDialogTitle: 'Manage cookie preferences',\n  preferencesDialogDescHtml: `Most GitHub websites use cookies. Cookies are small text files placed on your device to store data so web servers can use it later. GitHub and our third-party partners use cookies to remember your preferences and settings, help you sign in, show you personalized ads, and analyze how well our websites are working. For more info, see the Cookies and similar technologies section of the <a href=\"${privacyPolicyUrl}\">Privacy Statement</a>.`,\n}\n\nexport const consentControlOptions: IOptions = {\n  textResources,\n  themes: {\n    /**\n     * Use the same defaults that the built-in dark theme uses:\n     * https://github.com/microsoft/consent-banner/blob/f38eff3a2f26d2724941db5ef1815e1c58fd134d/src/themes/theme-styles.ts#L41\n     * */\n    github: {\n      /* Required theme properties */\n      'close-button-color': 'var(--color-scale-purple-2)',\n      'secondary-button-disabled-opacity': '0.5',\n      'secondary-button-hover-shadow': 'none',\n      'primary-button-disabled-opacity': '0.5',\n      'primary-button-hover-border': '1px solid transparent',\n      'primary-button-disabled-border': '1px solid transparent',\n      'primary-button-hover-shadow': 'none',\n      'banner-background-color': 'var(--color-scale-gray-9)',\n      'dialog-background-color': 'var(--color-scale-gray-9)',\n      'primary-button-color': 'var(--color-scale-white)',\n      'text-color': 'var(--color-scale-white)',\n      'secondary-button-color': 'var(--color-scale-gray-8)',\n      'secondary-button-disabled-color': 'var(--color-scale-gray-7)',\n      'secondary-button-border': '1px solid var(--color-scale-gray-1)',\n\n      /* Optional theme properties */\n      'background-color-between-page-and-dialog': 'rgba(23, 23, 23, 0.8)',\n      'dialog-border-color': 'var(--color-scale-purple-2)',\n      'hyperlink-font-color': 'var(--color-scale-purple-2)',\n      'secondary-button-hover-color': 'var(--color-scale-gray-9)',\n      'secondary-button-hover-border': '1px solid var(--color-scale-white)',\n      'secondary-button-disabled-border': '1px solid var(--color-scale-gray-5)',\n      'secondary-button-focus-border-color': 'var(--color-scale-gray-5)',\n      'secondary-button-text-color': 'var(--color-scale-white)',\n      'secondary-button-disabled-text-color': 'var(--color-scale-white)',\n      'primary-button-hover-color': 'var(--color-scale-purple-2)',\n      'primary-button-disabled-color': 'var(--color-scale-white)',\n      'primary-button-border': '1px solid var(--color-scale-white)',\n      'primary-button-focus-border-color': 'var(--color-scale-white)',\n      'primary-button-text-color': 'var(--color-scale-black)',\n      'primary-button-disabled-text-color': 'var(--color-scale-black)',\n      'radio-button-border-color': 'var(--color-scale-purple-2)',\n      'radio-button-checked-background-color': 'var(--color-scale-purple-2)',\n      'radio-button-hover-border-color': 'var(--color-scale-white)',\n      'radio-button-hover-background-color': 'var(--color-scale-white)',\n      'radio-button-disabled-color': 'rgba(227, 227, 227, 0.2)',\n      'radio-button-disabled-border-color': 'rgba(227, 227, 227, 0.2)',\n    },\n  },\n  initialTheme: 'github',\n}\n\nconst consentRequiredPreferences: ICookieCategoriesPreferences = {\n  [CookieCategoryId.Required]: true,\n  [CookieCategoryId.Analytics]: false,\n  [CookieCategoryId.SocialMedia]: false,\n  [CookieCategoryId.Advertising]: false,\n}\n\nconst consentNotRequiredPreferences: ICookieCategoriesPreferences = {\n  [CookieCategoryId.Required]: true,\n  [CookieCategoryId.Analytics]: true,\n  [CookieCategoryId.SocialMedia]: true,\n  [CookieCategoryId.Advertising]: true,\n}\n\nexport const DefaultCookieConsentPreferences = {\n  Required: consentRequiredPreferences,\n  NotRequired: consentNotRequiredPreferences,\n}\n","import type {ICookieCategoriesPreferences} from 'consent-banner'\nimport {ConsentControl} from 'consent-banner'\nimport {useEffect, useRef} from 'react'\nimport {getPreferencesFromCookie, setPreferencesToCookie} from '@github-ui/cookie-consent'\n\nimport {DefaultCookieConsentPreferences, cookieCategories, consentControlOptions} from './lib/configuration'\n\ntype Props = {\n  cookieConsentRequired: boolean\n  initialCookieConsentAllowed: boolean\n}\n\nexport function CookieConsentManagement({cookieConsentRequired, initialCookieConsentAllowed}: Props) {\n  const manageConsent = useRef(() => {})\n\n  useEffect(() => {\n    const existingCookiePreferences = getPreferencesFromCookie()\n\n    const onPreferenceChange = (preferences: ICookieCategoriesPreferences) => {\n      setPreferencesToCookie(preferences)\n      consentControl.hideBanner()\n    }\n\n    const consentControl = new ConsentControl(\n      'cookie-consent-banner',\n      'en',\n      onPreferenceChange,\n      cookieCategories,\n      consentControlOptions,\n    )\n\n    manageConsent.current = () => {\n      consentControl.showPreferences(getPreferencesFromCookie() || {})\n    }\n\n    if (existingCookiePreferences === null && initialCookieConsentAllowed && cookieConsentRequired) {\n      consentControl.showBanner(DefaultCookieConsentPreferences.Required)\n    }\n\n    if (existingCookiePreferences === null && initialCookieConsentAllowed && !cookieConsentRequired) {\n      setPreferencesToCookie(DefaultCookieConsentPreferences.NotRequired)\n    }\n  }, [cookieConsentRequired, initialCookieConsentAllowed])\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent mx-2\"\n        onClick={() => manageConsent.current()}\n      >\n        Manage cookies\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent mx-2\"\n        onClick={() => manageConsent.current()}\n      >\n        Do not share my personal information\n      </button>\n\n      <div id=\"cookie-consent-banner\" className=\"position-fixed bottom-0 left-0\" style={{zIndex: 999999}} />\n    </>\n  )\n}\n\ntry{ CookieConsentManagement.displayName ||= 'CookieConsentManagement' } catch {}","import {registerReactPartial} from '@github-ui/react-core/register-partial'\nimport {CookieConsentManagement} from './CookieConsentManagement'\n\nregisterReactPartial('cookie-consent-management', {\n  Component: CookieConsentManagement,\n})\n","export class Deferred<T> {\n  resolve: (value: T) => unknown\n  reject: (reason?: unknown) => unknown\n  promise: Promise<T>\n\n  constructor() {\n    this.promise = new Promise<T>((resolve, reject) => {\n      this.resolve = resolve\n      this.reject = reject\n    })\n  }\n}\n","import {setCookie, getCookie} from '@github-ui/cookies'\nimport {Deferred} from '@github-ui/deferred'\n\ntype CookieConsentPreferencesType = {\n  [key: string]: boolean | undefined\n}\n\nexport const CONSENT_COOKIE_NAME = 'GHCC'\n\nconst SIX_MONTHS = 1000 * 60 * 60 * 24 * 180 // 180 days in milliseconds\nconst CONSENT_COOKIE_EXPIRATION_DATE = new Date(new Date().getTime() + SIX_MONTHS) // 6 months from now\n\nconst consentDeferred = new Deferred<CookieConsentPreferencesType>()\n\nexport function waitForConsentPreferences(): Promise<CookieConsentPreferencesType> {\n  return consentDeferred.promise\n}\n\nexport function setPreferencesToCookie(preferences: CookieConsentPreferencesType): void {\n  const consentPreferences = Object.keys(preferences)\n    .map(cookieCategoryId => `${cookieCategoryId}:${preferences[cookieCategoryId] ? '1' : '0'}`)\n    .join('-')\n\n  setCookie(CONSENT_COOKIE_NAME, consentPreferences, CONSENT_COOKIE_EXPIRATION_DATE.toUTCString())\n  consentDeferred.resolve(preferences)\n}\n\nexport function getPreferencesFromCookie(): CookieConsentPreferencesType | null {\n  const preferencesCookie = getCookie(CONSENT_COOKIE_NAME)\n\n  if (!preferencesCookie) {\n    return null\n  }\n\n  const preferences = preferencesCookie.value.split('-')\n  const cookieCategoriesPreferences: CookieConsentPreferencesType = {}\n\n  for (const cookieParts of preferences) {\n    const [cookieCategoryId, preference] = cookieParts.split(':')\n\n    if (cookieCategoryId) {\n      cookieCategoriesPreferences[cookieCategoryId] = preference === '1'\n    }\n  }\n\n  return cookieCategoriesPreferences\n}\n\nconst initialConsent = getPreferencesFromCookie()\n\nif (initialConsent) {\n  consentDeferred.resolve(initialConsent)\n}\n","interface Cookie {\n  key: string\n  value: string\n}\n\n/**\n * Get a cookie by name.\n * @param name\n * @returns a cookie object or undefined if not found.\n */\nexport function getCookie(name: string): Cookie | undefined {\n  return getCookies(name)[0]\n}\n\n/**\n * Get all cookies by name.\n * @param name\n * @returns\n */\nexport function getCookies(name: string): Cookie[] {\n  const cookies = []\n  for (const cookie of readCookies()) {\n    const [key, value] = cookie.trim().split('=')\n    if (name === key && typeof value !== 'undefined') {\n      cookies.push({key, value})\n    }\n  }\n  return cookies\n}\n\nfunction readCookies(): string[] {\n  try {\n    return document.cookie.split(';')\n  } catch {\n    // Cookie access disabled.\n    return []\n  }\n}\n\n/**\n * Set a new cookie with sensible defaults like secure.\n * @param name\n * @param value\n * @param expiration\n * @param strictDomain\n * @param samesite\n */\nexport function setCookie(\n  name: string,\n  value: string,\n  expiration: string | null = null,\n  strictDomain = false,\n  samesite = 'lax',\n) {\n  let domain = document.domain\n  if (domain == null) {\n    throw new Error('Unable to get document domain')\n  }\n\n  // Share cookies with test environments.\n  if (domain.endsWith('.github.com')) {\n    domain = 'github.com'\n  }\n\n  const secure = location.protocol === 'https:' ? '; secure' : ''\n  const expire = expiration ? `; expires=${expiration}` : ''\n  if (strictDomain === false) {\n    domain = `.${domain}`\n  }\n  try {\n    document.cookie = `${name}=${value}; path=/; domain=${domain}${expire}${secure}; samesite=${samesite}`\n  } catch {\n    // Cookie access disabled.\n  }\n}\n\n/**\n * Delete a given cookie with sensible defaults like secure.\n * This sets the expires value to a second ago to delete the cookie.\n * @param name\n * @param strictDomain\n */\nexport function deleteCookie(name: string, strictDomain = false) {\n  let domain = document.domain\n  if (domain == null) {\n    throw new Error('Unable to get document domain')\n  }\n\n  // Share cookies with test environments.\n  if (domain.endsWith('.github.com')) {\n    domain = 'github.com'\n  }\n\n  const time = new Date().getTime()\n  const expiration = new Date(time - 1).toUTCString()\n  const secure = location.protocol === 'https:' ? '; secure' : ''\n  const expire = `; expires=${expiration}`\n  if (strictDomain === false) {\n    domain = `.${domain}`\n  }\n  try {\n    document.cookie = `${name}=''; path=/; domain=${domain}${expire}${secure}`\n  } catch {\n    // Cookie access disabled.\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toUpperCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet = IS_SERVER ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toUpperCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","import {DeferredRegistry} from './deferred-registry'\n\nexport interface PartialRegistration {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.ComponentType<any>\n}\n\nexport const partialRegistry = new DeferredRegistry<PartialRegistration>()\n\nexport function getReactPartial(appName: string) {\n  return partialRegistry.getRegistration(appName)\n}\n","import {controller} from '@github/catalyst'\nimport {getReactPartial} from './react-partial-registry'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {ReactBaseElement} from './ReactBaseElement'\nimport {PartialEntry} from './PartialEntry'\n\n// What is this silliness? Is it react or a web component?!\n// It's a web component we use to bootstrap react partials within the monolith.\n@controller\nclass ReactPartialElement extends ReactBaseElement<EmbeddedPartialData> {\n  nameAttribute = 'partial-name'\n\n  async getReactNode(embeddedData: EmbeddedPartialData) {\n    const {Component} = await getReactPartial(this.name)\n\n    return (\n      <PartialEntry\n        partialName={this.name}\n        embeddedData={embeddedData}\n        Component={Component}\n        wasServerRendered={this.hasSSRContent}\n        ssrError={Boolean(this.ssrError)}\n      />\n    )\n  }\n}\n","import {partialRegistry, type PartialRegistration} from './react-partial-registry'\n// Import the web component to get it registered on the window\nimport './ReactPartialElement'\n\nexport function registerReactPartial(name: string, registration: PartialRegistration) {\n  partialRegistry.register(name, registration)\n}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise' (ghes and ghae both)\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isPrivateInstance = memoize(isGitHubPrivateInstance)\nfunction isGitHubPrivateInstance(): boolean {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"is-private-instance\"]')?.content === 'true'\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = new Date().getTime()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = new Date().getTime()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch (error) {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    window,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash'>\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' ? {pathname: '', origin: '', search: '', hash: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER) {\n    return true\n  }\n\n  return Boolean(ssrSafeDocument!.querySelector('react-app[data-ssr=\"true\"]'))\n}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 1.0): void {\n  if (isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = new Date().getTime()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    scheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nasync function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nfunction isLoggedIn(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n","import {useState} from 'react'\nimport type {BrowserHistory, MemoryHistory} from '@remix-run/router'\nimport {Router} from 'react-router-dom'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\ntype Props = {\n  children: React.ReactNode\n  history: BrowserHistory | MemoryHistory\n}\n\nexport function PartialRouter({children, history}: Props) {\n  const [state, setState] = useState({\n    location: history.location,\n  })\n\n  useHydratedEffect(() => history.listen(setState), [history])\n\n  return (\n    <Router location={state.location} navigator={history}>\n      {children}\n    </Router>\n  )\n}\n\ntry{ PartialRouter.displayName ||= 'PartialRouter' } catch {}","// Think of this as the entry point into the framework\nimport React from 'react'\nimport type {EmbeddedPartialData} from './embedded-data-types'\nimport {BaseProviders} from './BaseProviders'\nimport type {BrowserHistory} from '@remix-run/router'\nimport {createMemoryHistory} from '@remix-run/router'\nimport {AppContextProvider} from './AppContextProvider'\nimport {PartialRouter} from './PartialRouter'\nimport {CommonElements} from './CommonElements'\nimport {createBrowserHistory} from './create-browser-history'\n\ninterface Props {\n  partialName: string\n  embeddedData: EmbeddedPartialData\n  Component: React.ComponentType\n  wasServerRendered: boolean\n  ssrError: boolean\n}\n\nexport function PartialEntry({partialName, embeddedData, Component, wasServerRendered, ssrError}: Props) {\n  // Create a ref to track the browser history:\n  const historyRef = React.useRef<BrowserHistory>()\n  const window = globalThis.window as Window | undefined\n\n  // For linking to work, we can just pass a dummy pathname here. We may consider plumbing the actual path in\n  if (!historyRef.current) {\n    historyRef.current = !window\n      ? createMemoryHistory({initialEntries: [{pathname: '/'}]})\n      : createBrowserHistory({window})\n  }\n  const history = historyRef.current\n\n  // Wrap the partial in an AppContextProvider and static Router so that react-core links\n  // will be functional.\n  return (\n    <BaseProviders appName={partialName} wasServerRendered={wasServerRendered}>\n      <AppContextProvider history={history} routes={[]}>\n        <PartialRouter history={history}>\n          <Component {...embeddedData.props} />\n          <CommonElements ssrError={ssrError} />\n        </PartialRouter>\n      </AppContextProvider>\n    </BaseProviders>\n  )\n}\n\ntry{ PartialEntry.displayName ||= 'PartialEntry' } catch {}"],"names":["env","getEnv","getLocale","locale","loadEnv","document","envTag","getElementById","JSON","parse","textContent","error","console","CookieCategoryId","CookieCategoryName","privacyPolicyUrl","cookieCategories","id","name","descHtml","isUnswitchable","textResources","bannerMessageHtml","acceptAllLabel","rejectAllLabel","moreInfoLabel","preferencesDialogCloseLabel","preferencesDialogTitle","preferencesDialogDescHtml","consentControlOptions","themes","github","initialTheme","DefaultCookieConsentPreferences","Required","NotRequired","CookieConsentManagement","cookieConsentRequired","initialCookieConsentAllowed","manageConsent","useRef","useEffect","existingCookiePreferences","getPreferencesFromCookie","consentControl","ConsentControl","setPreferencesToCookie","preferences","hideBanner","current","showPreferences","showBanner","button","type","className","onClick","div","style","zIndex","displayName","registerReactPartial","Component","Deferred","constructor","promise","Promise","resolve","reject","CONSENT_COOKIE_NAME","CONSENT_COOKIE_EXPIRATION_DATE","Date","getTime","consentDeferred","waitForConsentPreferences","consentPreferences","Object","keys","map","cookieCategoryId","join","setCookie","toUTCString","preferencesCookie","getCookie","value","split","cookieCategoriesPreferences","cookieParts","preference","initialConsent","getCookies","cookies","cookie","readCookies","key","trim","push","expiration","strictDomain","samesite","domain","endsWith","secure","location","protocol","expire","deleteCookie","time","ready","ssrSafeDocument","readyState","addEventListener","loaded","ssrSafeWindow","getEnabledFeaturesSet","features","featureFlags","featuresUpperCase","feature","toUpperCase","Set","featuresSet","IS_SERVER","memoize","isFeatureEnabled","has","featureFlag","partialRegistry","DeferredRegistry","ReactPartialElement","ReactBaseElement","getReactNode","embeddedData","appName","getRegistration","PartialEntry","partialName","wasServerRendered","hasSSRContent","ssrError","Boolean","nameAttribute","registration","register","controller","runtimeEnvironment","head","querySelector","content","isPrivateInstance","isEnterprise","bundler","BUNDLER","NoOpStorage","getItem","setItem","removeItem","clear","length","safeStorage","storageKey","options","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","now","expiry","Number","toString","Error","message","toLowerCase","includes","jsonSafeStorage","storageBackend","window","stringify","undefined","ssrSafeHistory","history","ssrSafeLocation","pathname","origin","search","hash","IS_BROWSER","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","staff","isStaff","Math","random","flushStats","scheduleSendStats","queued","requestIdleCallback","url","batches","getBatches","items","itemStrings","item","makeBatch","firstItem","shift","batch","size","nextItemSize","itemString","safeSend","data","navigator","sendBeacon","PartialRouter","children","state","setState","useState","useHydratedEffect","listen","Router","historyRef","React","globalThis","createBrowserHistory","createMemoryHistory","initialEntries","BaseProviders","AppContextProvider","routes","props","CommonElements"],"sourceRoot":""}