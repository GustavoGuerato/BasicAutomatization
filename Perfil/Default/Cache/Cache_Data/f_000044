{"version":3,"file":"app_assets_modules_github_updatable-content_ts-xxxxxxxxxxxx.js","mappings":"iJA0CIA,EAoBAC,EACAC,E,mDAtDG,SAASC,EACdC,CAAkB,CAClBC,EAAyB,EAAK,CAC9BC,EAAoB,EAAK,MAoILF,EAlIpB,MACE,CAAEE,GAAqBC,EAAeH,IACtCI,SAsFcJ,CAAkB,CAAEC,CAA+B,EACnE,IAAMI,EAjDN,aAAoCC,QAC3BV,EACEI,GAAaA,EAAUO,aAAa,EAAIP,EAAUO,aAAa,CAACF,aAAa,CAC/EL,EAAUO,aAAa,CAACF,aAAa,CAEvC,KA6CP,GAAsB,OAAlBA,GACAJ,GAA0BI,IAAkBL,EADpB,MAAO,GAKnC,IAAMQ,EAAmBH,IAAkBL,GAAaS,CAAAA,EAAAA,EAAAA,EAAAA,EAAYJ,GACpE,GAAIG,EAAkB,MAAO,GAK7B,IAAME,EAAwBV,EAAUW,QAAQ,CAACN,IAAkB,CAACO,SAazCP,CAAsB,EACjD,GAAIA,aAAyBQ,EAAAA,CAAoBA,CAAE,MAAO,GAE1D,IAAMC,EAAiBT,aAAyBU,mBAAqBV,aAAyBW,kBACxFC,EAAmBZ,EAAca,aAAa,EAAEC,UAAUR,SAAS,kBACzE,GAAIG,GAAkBG,EACpB,MAAO,GAGT,GAAI,CAAEnB,CAAAA,aAA+BQ,OAAM,EAAI,MAAO,GACtD,IAAMc,EAAyBf,EAAcgB,OAAO,CAACC,GACrD,GAAI,CAACF,EAAwB,MAAO,GACpC,IAAMG,EAA0BzB,EAAoBuB,OAAO,CAACC,GAC5D,OAAOF,IAA2BG,CACpC,EA3B0FlB,GACxF,GAAIK,EAAuB,MAAO,GAGlC,IAAMc,EACJ1B,aAA+BQ,SAC/BN,EAAUW,QAAQ,CAACb,IACnB,CAAC,CAACA,EAAoBuB,OAAO,CAAC,2BAChC,OAAOG,CACT,EA5GaxB,EAAWC,IAiIfD,CADaA,EA/HLA,GAgIEyB,OAAO,CAAC,oBAAsBzB,EAAUW,QAAQ,CAACd,MAI3DG,CAAAA,EAAUqB,OAAO,CAAC,cAAgBrB,EAAU0B,aAAa,CAAC,YAAW,CAjI9E,CAEO,SAASvB,EAAeH,CAAkB,EAC/C,IAAK,IAAM2B,KAAS3B,EAAU4B,gBAAgB,CAAC,mBAC7C,GAAID,CAAAA,aAAiBE,kBAAoBF,aAAiBG,mBAAkB,GACtEC,SAQqBC,CAA6C,EAC1E,GAAIA,aAAiBH,kBAAqBG,CAAAA,aAAAA,EAAMC,IAAI,EAAmBD,UAAAA,EAAMC,IAAI,EAC/E,IAAID,EAAME,OAAO,GAAKF,EAAMG,cAAc,CAAE,MAAO,EAAI,MAEvD,GAAIH,EAAMI,KAAK,GAAKJ,EAAMK,YAAY,CAAE,MAAO,GAEjD,MAAO,EACT,EAfgCV,GACxB,MAAO,GAIb,MAAO,EACT,CAkCAW,SAASC,gBAAgB,CACvB,YACA,SAAUC,CAAY,EACpB3C,EAAwB2C,EAAMC,MAAM,EAEtC,IAGFH,SAASC,gBAAgB,CACvB,UACA,SAAUC,CAAY,EACpB3C,EAAwB,KACxBC,EAAsB0C,EAAMC,MAAM,EAEpC,IAGFH,SAASC,gBAAgB,CACvB,cACA,SAAUC,CAAY,EAGpB3C,EAAwB,KACxBC,EAAsB0C,EAAMC,MAAM,EAEpC,IAGFH,SAASC,gBAAgB,CACvB,UACA,WAEE1C,EAAwB,IAC1B,EACA,IA2BF,IAAMyB,EAA+B,iB,qBC5HjCoB,EA4HAC,E,oCA9HJ,IAAIC,EAA8D,EAAE,CAChEC,EAAuB,EA8BpB,SAASC,IACd,OAAOJ,CACT,CAEA,SAASK,IACP,GAAI,CAEF,OAAOC,KAAKC,GAAG,CAACD,KAAKE,GAAG,CAAC,EAAGC,QAAQC,MAAM,GAAK,EAAG,iBACpD,CAAE,MAAOC,EAAG,CACV,OAAO,CACT,CACF,CAaA,SAASC,EAASC,CAAe,EAC/Bb,EAAQa,EAGR,IAAMC,EAAMC,SAASC,IAAI,CACzBd,CAAqB,CARdG,IAAmB,EAAIF,EAQG,CAAG,CAACW,IAAAA,EAAKd,MAAAA,CAAK,EAG/CE,EAAsBQ,MAAM,CAAGL,IAG/BY,OAAOC,aAAa,CAAC,IAAIC,YAAY,cAAe,CAACC,QAAS,GAAOC,WAAY,EAAK,GACxF,CAMA,SAASC,IACP,OAAO,IAAIC,OAAOC,OAAO,EAC3B,CAKO,SAASC,EAAUC,CAAsB,CAAEC,CAAa,CAAEb,CAAW,EAE1EX,EAAuB,EACvB,IAAMU,EAAW,CAACe,IAAKN,IAAY,GAAGI,CAAQ,EAC9CjB,QAAQgB,SAAS,CAACZ,EAAUc,EAAOb,GACnCF,EAASC,EACX,CAKO,SAASgB,EAAaH,CAAwC,CAAEC,CAAa,CAAEb,CAAW,EAC/F,IAAMD,EAAW,CA5DL,GAALb,CA4DW,CAAe,GAAG0B,CAAQ,EAC5CjB,QAAQoB,YAAY,CAAChB,EAAUc,EAAOb,GACtCF,EAASC,EACX,CAEAb,EAAQ8B,WApDN,IAAMjB,EAAW,CAACe,IAAK,IAAIL,OAAOC,OAAO,GAAI,GAAGf,QAAQT,KAAK,EAE7D,OADAY,EAASC,GACFA,CACT,IAmDAI,OAAOpB,gBAAgB,CACrB,WACA,SAAoBC,CAAoB,EACtC,IAAMiC,EAAsBjC,EAAME,KAAK,CAEvC,GAAI,CAAC+B,GAAiB,CAACA,EAAaH,GAAG,EAAI,CAACG,EAAaC,KAAK,EAAEC,sBAG9D,OAKF,IAAMC,EAAKH,EAAaC,KAAK,EAAEC,sBACzBE,EAAajC,CAAqB,CAACkC,IA7DjB,EAAIjC,EA6D0B,EAAE,EAAEH,OAAiBgC,OAAOC,qBAE9EE,CAAAA,IAAcD,EAChB/B,IAEAA,IAGFS,EAASmB,EACX,EACA,IAKFd,OAAOpB,gBAAgB,CAAC,cAAeC,IAC/BA,aAAiBqB,aAEvBlB,CAAAA,EAAcH,EAAMuC,MAAM,CAACC,MAAM,CACnC,GAIArB,OAAOpB,gBAAgB,CAAC,aAAc,KAChB,YAAhBI,IAEJE,EAAuB,EAEvB0B,EAAapB,QAAQT,KAAK,CAAE,GAAI,IAClC,GAEAiB,OAAOpB,gBAAgB,CACrB,aACA,WACE,GAAIQ,IAAmBH,EAAsBQ,MAAM,CAAE,CAEnD,IAAMG,EAAW,CAACe,IAAKN,GAAU,EACjCb,QAAQoB,YAAY,CAAChB,EAAU,GAAIE,SAASC,IAAI,EAChDJ,EAASC,EACX,CACF,EACA,IAIFI,OAAOpB,gBAAgB,CAAC,WAAY,KAClCK,EAAwB,EAAE,CAC1BC,EAAuB,CACzB,E,mICzJA,IAAMoC,EAAkB,IAAIC,QACtBC,EAAwC,CAAC,EAKxC,SAASC,IACd,IAAK,IAAMC,KAAOC,OAAOC,IAAI,CAACJ,GAC5B,OAAOA,CAAY,CAACE,EAAI,CAE1B,IAAMG,EAAcrC,QAAQT,KAAK,EAAI,CAAC,CACtC8C,CAAAA,EAAYL,YAAY,CAAGA,EAC3BZ,CAAAA,EAAAA,EAAAA,EAAAA,EAAaiB,EAAa,GAAI/B,SAASC,IAAI,EAC3CC,OAAOF,QAAQ,CAAC2B,MAAM,EACxB,CAIO,SAASK,IACd,GAAIH,OAAOC,IAAI,CAACJ,GAAc/B,MAAM,CAAG,EAAG,CACxC,IAAMoC,EAAcrC,QAAQT,KAAK,EAAI,CAAC,CACtC8C,CAAAA,EAAYL,YAAY,CAAGA,EAC3BZ,CAAAA,EAAAA,EAAAA,EAAAA,EAAaiB,EAAa,GAAI/B,SAASC,IAAI,CAC7C,CACF,CAOO,eAAegC,EAAcC,CAAe,EACjD,GAAIV,EAAgBW,GAAG,CAACD,GAAK,OAE7B,IAAME,EAAcF,EAAGG,YAAY,CAAC,qBAC9BtC,EAAMmC,EAAGI,YAAY,CAAC,YAC5B,GAAI,CAACvC,EAAK,MAAM,MAAU,qBAC1B,IAAMwC,EAAa,IAAIC,gBACvBhB,EAAgBiB,GAAG,CAACP,EAAIK,GAExB,GAAI,CACF,IAAMG,EAAW,MAAMC,MAAM5C,EAAK,CAChC6C,OAAQL,EAAWK,MAAM,CACzBC,QAAS,CACPC,OAAQ,YACR,mBAAoB,gBACtB,CACF,GACA,GAAI,CAACJ,EAASK,EAAE,CAAE,OAClB,IAAMC,EAAO,MAAMN,EAASO,IAAI,GAChC,GAAI3G,CAAAA,EAAAA,EAAAA,CAAAA,EAAgB4F,EAAIE,GAAc,CAEpCc,QAAQC,IAAI,CAAC,6CAA8CjB,GAC3D,MACF,CAEA,OADAR,CAAY,CAAC3B,EAAI,CAAGiD,EACbI,EAAQlB,EAAIc,EAAMZ,EAC3B,CAAE,KAAM,CAER,QAAU,CACRZ,EAAgB6B,MAAM,CAACnB,EACzB,CACF,CAGO,eAAeoB,EAAepB,CAAe,CAAEc,CAAY,CAAEO,EAAW,EAAK,EAClF,IAAMhB,EAAaf,EAAgBW,GAAG,CAACD,GACvCK,GAAYiB,QAEZ,IAAMC,EAAYvB,EAAGtE,OAAO,CAAC,qEAI7B,MAHI,CAAC2F,GAAYE,GAAaA,IAAcvB,GAC1CR,CAAAA,CAAY,CAAC+B,EAAUnB,YAAY,CAAC,aAAe,GAAG,CAAGU,CAAG,EAEvDI,EAAQlB,EAAIc,EACrB,CAEA,SAASI,EAAQlB,CAAe,CAAEc,CAAY,CAAEZ,EAAc,EAAK,EACjE,MAAOsB,CAAAA,EAAAA,EAAAA,EAAAA,EAA2B7E,SAAU,KAC1C,IAAM8E,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAAU/E,SAAUmE,EAAKa,IAAI,IAC1CC,EACJ1B,GAAeF,EAAGpF,aAAa,EAAIoF,IAAOA,EAAGpF,aAAa,CAACF,aAAa,CAAG+G,EAAW1F,aAAa,CAAC,KAAO,KAEvG8F,EAAaC,MAAMC,IAAI,CAAC/B,EAAG/D,gBAAgB,CAAC,sBAAsB+F,GAAG,CAACC,GAAWA,EAAQhD,EAAE,EAIjG,IAAK,IAAMiD,KAHQ,YAAflC,EAAGmC,OAAO,EAAkBnC,EAAGf,EAAE,EAAIe,EAAGG,YAAY,CAAC,SAAS0B,EAAWO,IAAI,CAACpC,EAAGf,EAAE,EAGzDe,EAAG/D,gBAAgB,CAAC,mDAAmD,CACnG,IAAMgD,EAAKiD,EAAgB9B,YAAY,CAAC,8CAAgD,GACxFiC,EAAQ9B,GAAG,CAACtB,EAAIiD,EAAgBI,SAAS,CAC3C,CAEA,IAAK,IAAMrD,KAAM4C,EAAY,CAC3B,IAAMU,EAAUd,EAAW1F,aAAa,CAAC,CAAC,CAAC,EAAEkD,EAAG,CAAC,EAC7CsD,GAASA,EAAQC,YAAY,CAAC,OAAQ,GAC5C,CAEAC,CAAAA,EAAAA,EAAAA,EAAAA,EAAMzC,EAAIyB,GACNG,aAA4Bc,aAC9Bd,EAAiBe,KAAK,EAE1B,EACF,CAEA,IAAMN,EAAU,IAAIO,IACpBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,iDAAkD,CACxDC,YAAaJ,YACbK,IAAI/C,CAAE,EAEJ,IAAMf,EAAKe,EAAGI,YAAY,CAAC,6CAC3B,GAAI,CAACnB,EAAI,OACT,IAAM+D,EAASX,EAAQpC,GAAG,CAAChB,EACb,OAAV+D,GAEJhD,CAAAA,EAAGsC,SAAS,CAAGU,CAAK,CACtB,CACF,E,kBC3HA,SAASC,EAA6BC,CAAgB,EACpD,IAAMC,EAAOxG,SAASV,gBAAgB,CAAIiH,GAC1C,GAAIC,EAAK1F,MAAM,CAAG,EAChB,OAAO0F,CAAI,CAACA,EAAK1F,MAAM,CAAG,EAAE,CAkCzB,SAAS2F,IACd,MAAO,CAAC,EAAEpF,OAAOF,QAAQ,CAACuF,QAAQ,CAAC,EAAE,EAAErF,OAAOF,QAAQ,CAACwF,IAAI,CAAC,EAAEC,WA9B9D,IAAMC,EAAmBP,EAA2B,wCACpD,EACSO,EAAiBC,OAAO,CAExBzF,OAAOF,QAAQ,CAAC4F,QAAQ,IA0B8CC,WArB/E,IAAMC,EAAcX,EAA2B,6CAC3CY,EAAS,GAERD,GACHC,CAAAA,EAAS7F,OAAOF,QAAQ,CAAC+F,MAAM,EAGjC,IAAMC,EAAcb,EAA2B,wCAK/C,IAAK,IAAMc,KAJPD,GACFD,CAAAA,GAAU,CAACA,EAAS,IAAM,GAAE,EAAKC,EAAYL,OAAO,EAGnC9G,SAASV,gBAAgB,CAAkB,sCAAsC,CAClG,IAAM+H,EAAQD,EAAKN,OAAO,CAACQ,KAAK,CAAC,IAAK,GACtCJ,EAASA,EAAO3C,OAAO,CAAC,OAAW,CAAC,QAAQ,EAAE8C,CAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAE,KAAM,CAAC,EAAE,EAAEA,CAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CACxF,CAEA,OAAOH,CACT,IAG6F,CAAC,C,kKC1B9F,IAAIK,EAAkB,GAClBC,EAAiB,EACfC,EAAW9F,KAAK+F,GAAG,GAEZC,EAAkC,IAAIC,IAAI,CACrD,kBACA,kDACD,EA+BD,SAASC,EAAgBC,CAAY,WAGhB,eAAfA,EAAMC,IAAI,EAGVD,cAAAA,EAAMC,IAAI,EAAoBJ,EAAgCK,GAAG,CAACF,EAAMG,OAAO,GAK/EH,EAAMC,IAAI,CAACG,UAAU,CAAC,aAAeP,EAAgCK,GAAG,CAACF,EAAMG,OAAO,EAG5F,CAGO,SAASE,EAAYL,CAAc,CAAEM,EAAwB,CAAC,CAAC,EACpE,GAAIC,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,6BAA8B,CACjD,GAAI,CAxCN,cAAqBC,OAGnB,iBAqCaR,GApCbA,OAoCaA,GAnCb,SAmCaA,GAlCb,iBAAOA,EAAMC,IAAI,EACjB,YAiCaD,GAhCb,iBAAOA,EAAMG,OAAO,EAgCC,CACnB,GAAIM,SAwHiBT,CAAc,EACvC,GAAI,CAACA,GAAS,kBAAOA,GAAuB,iBAAOA,EAEjD,MAAO,GACF,GAAI,iBAAOA,EAEhB,IAAIU,EAAqBC,IAAI,CAACR,GAAWH,EAAMY,QAAQ,CAACT,IACtD,MAAO,EACT,MACK,GACL,iBAAOH,GAEP,iBAAO,EAAeG,OAAO,EAE7B,iBAAO,EAAeU,IAAI,CAG1B,MAAO,GAGT,MAAO,EACT,EA7I4Bb,GAAQ,OAG9B,IAAMc,EAAqB,QACrBC,EAAuBC,SAhCRhB,CAAc,EACvC,GAAI,CACF,OAAOiB,KAAKC,SAAS,CAAClB,EACxB,CAAE,KAAM,CACN,MAAO,gBACT,CACF,EA0BqDA,GAEzCmB,EAAoC,CACxCtJ,KAAM,eACNG,MAAO,CAAC,wDAAwD,EAAE,OAAOgI,EAAM,aAAa,EAAEe,EAAqB,CAAC,CACpHK,WAAYA,EAAWN,EACzB,EACAO,EAAOC,EAAaH,EAAUb,IAC9B,MACF,CACKP,EAAgBC,IACnBqB,EAAOC,EAAaC,EAAYvB,GAAQM,GAE5C,MAGOP,EAAgBC,IACnBqB,EAAOC,EAAaC,EAAYvB,GAAiBM,GAGvD,CAGA,eAAee,EAAOf,CAAwC,EAC5D,GAAI,CAoEG,EAACkB,GAAY,CAAC/B,GAAmBC,EAAiB,IAAM+B,CAAAA,EAAAA,EAAAA,EAAAA,GAAY,EApExD,OAEnB,IAAMrI,EAAMlB,SAASwJ,IAAI,EAAEpK,cAA+B,oCAAoC0H,QAC9F,GAAK5F,GAEL,GA+COuI,EA/CsB3B,KAAK,CAACoB,UAAU,CA+ChCT,IAAI,CAACiB,GAASC,EAAWC,IAAI,CAACF,EAAMG,QAAQ,GAAKF,EAAWC,IAAI,CAACF,EAAMI,QAAQ,GA/C5C,CAC9CvC,EAAkB,GAClB,MACF,CAEAC,IAEA,GAAI,CACF,MAAM1D,MAAM5C,EAAK,CAAC6I,OAAQ,OAAQC,KAAMjB,KAAKC,SAAS,CAACZ,EAAQ,EACjE,CAAE,KAAM,CAER,EACF,CAEA,SAASiB,EAAYvB,CAAY,EAC/B,MAAO,CAACnI,KAAMmI,EAAMC,IAAI,CAAEjI,MAAOgI,EAAMG,OAAO,CAAEiB,WAAYA,EAAWpB,EAAM,CAC/E,CAEA,SAASsB,EAAatB,CAA8B,CAAEM,EAAwB,CAAC,CAAC,EAC9E,OAAOpF,OAAOiH,MAAM,CAClB,CACEnC,MAAAA,EACAoC,aAAczD,CAAAA,EAAAA,EAAAA,CAAAA,KAAgBpF,OAAOF,QAAQ,CAACC,IAAI,CAClD+I,WAAYnK,SAASmK,UAAU,CAC/BC,SAAUC,CAAAA,EAAAA,EAAAA,EAAAA,IACVC,cAAe5J,KAAK6J,KAAK,CAAC5I,KAAK+F,GAAG,GAAKD,GACvC+C,KAAMC,KAAcC,KAAAA,EACpBC,QAAOA,EAAAA,EAAAA,CACPC,GAAIC,CAAAA,CAAQ7K,SAASZ,aAAa,CAAC,kBACrC,EACAgJ,EAEJ,CAEO,SAASc,EAAWpB,CAAY,EACrC,MAAOgD,CAAAA,EAAAA,EAAAA,CAAAA,EAAMhD,EAAM2B,KAAK,EAAI,IAAIpE,GAAG,CAACqE,GAAU,EAC5CG,SAAUH,EAAMqB,IAAI,EAAI,GACxBjB,SAAUkB,OAAOtB,EAAMuB,UAAU,EACjCC,OAAQ,CAACxB,EAAMyB,UAAU,EAAI,GAAGC,QAAQ,GACxCC,MAAO,CAAC3B,EAAM4B,MAAM,EAAI,GAAGF,QAAQ,EACrC,GACF,CAEA,IAAMzB,EAAa,qCAOZ,SAASc,IACd,IAAMc,EAAQvL,SAASwJ,IAAI,EAAEpK,cAA+B,4BAA4B0H,QACxF,GAAIyE,EAAO,OAAOA,EAElB,IAAMC,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,IACjB,MAAO,CAAC,UAAU,EAAED,EAAS,CAAC,CAGhC,IAAIlC,EAAW,GAQf,GAPAoC,EAAAA,EAAaA,EAAEzL,iBAAiB,WAAY,IAAOqJ,EAAW,IAC9DoC,EAAAA,EAAaA,EAAEzL,iBAAiB,WAAY,IAAOqJ,EAAW,IAM1D,mBAAOqC,iBAAiC,CAC1C,IAAMC,EAA2B,IAAID,iBAAiB,uBACtDC,EAAyB3L,gBAAgB,CAAC,UAAWC,IAEnDiI,EAAYjI,EAAMiE,IAAI,CAAC2D,KAAK,CAC9B,EACF,CAEA,IAAMU,EAAuB,CAC3B,+BACA,mCACA,mDACD,E,6FChLD,SAASqD,EAAK1L,CAAmB,CAAE4H,CAAY,CAAEtG,CAAmB,EAClE,OAAOtB,EAAOmB,aAAa,CACzB,IAAIC,YAAYwG,EAAM,CACpBvG,QAAS,GACTC,WAAAA,CACF,GAEJ,CASO,SAASqK,EAAcC,CAAqB,CAAEC,CAAkB,EACjEA,IACFC,SAUyBF,CAAqB,CAAEC,CAAiB,EACnE,GAAI,CAAED,CAAAA,aAAgBG,eAAc,EAAI,MAAM,UAAc,yDAC5D,GAAI,CAAEF,CAAAA,aAAqBjG,WAAU,EAAI,MAAM,UAAc,qDAC7D,GAAIiG,WAAAA,EAAUrM,IAAI,CAAe,MAAM,UAAc,iDACrD,GAAI,CAACoM,GAAQA,IAASC,EAAUD,IAAI,CAAE,MAAM,MAAU,0DACxD,EAfwBA,EAAMC,GAC1BG,CAAAA,EAAAA,EAAAA,CAAAA,EAAyBH,IAEvBH,EAAKE,EAAM,SAAU,KACvBA,EAAKK,MAAM,EAEf,CAcO,SAASC,EAAY3M,CAAgB,CAAEI,CAAuB,EACnE,GAAI,kBAAOA,GACT,GAAIJ,aAAiBH,iBACnBG,EAAME,OAAO,CAAGE,OAEhB,MAAM,UAAc,mDAEjB,CACL,GAAIJ,aAAAA,EAAMC,IAAI,CACZ,MAAM,UAAc,wCAEpBD,CAAAA,EAAMI,KAAK,CAAGA,CAElB,CACA+L,EAAKnM,EAAO,SAAU,GACxB,CAGO,SAAS4M,EAAeP,CAAqB,CAAEQ,CAA+B,EACnF,IAAK,IAAMxE,KAAQwE,EAAQ,CACzB,IAAMzM,EAAQyM,CAAM,CAACxE,EAAK,CACpBzC,EAAUyG,EAAKS,QAAQ,CAACC,SAAS,CAAC1E,EAEpCzC,CAAAA,aAAmB/F,iBACrB+F,EAAQxF,KAAK,CAAGA,EACPwF,aAAmB9F,qBAC5B8F,CAAAA,EAAQxF,KAAK,CAAGA,CAAI,CAExB,CACF,CAGO,SAAS3B,EAAYmH,CAAa,EACvC,GAAI,CAAEA,CAAAA,aAAmBS,WAAU,EACjC,MAAO,GAGT,IAAMgC,EAAOzC,EAAQoH,QAAQ,CAACC,WAAW,GACnChN,EAAO,CAAC2F,EAAQ7B,YAAY,CAAC,SAAW,EAAC,EAAGkJ,WAAW,GAC7D,MACE5E,WAAAA,GACAA,aAAAA,GACCA,UAAAA,GAAoBpI,WAAAA,GAAqBA,UAAAA,GAC1C2F,EAAQsH,iBAAiB,CAI7B,SAASC,EAAyBC,CAAkB,EAElD,OAAO,IAAIC,gBAAgBD,EAC7B,CAGO,SAASE,EAA2BC,CAAe,CAAEH,CAAkB,EAC5E,IAAMI,EAAkB,IAAIH,gBAAgBE,EAAW/F,MAAM,EACvDiG,EAAyBN,EAAyBC,GACxD,IAAK,GAAM,CAAC/J,EAAKjD,EAAM,GAAIqN,EACzBD,EAAgBE,MAAM,CAACrK,EAAKjD,GAE9B,OAAOoN,EAAgB9B,QAAQ,EACjC,CAGO,SAASiC,EAAUtB,CAAqB,EAC7C,OAAOc,EAAyB,IAAIS,SAASvB,IAAOX,QAAQ,EAC9D,C,iBCvFO,SAASe,EAAyBoB,CAA4C,EACnF,IAAMxB,EAAOwB,EAAOxO,OAAO,CAAC,QAC5B,GAAI,CAAEgN,CAAAA,aAAgBG,eAAc,EAClC,OAGF,IAAIxM,EAAQ8N,EAA+BzB,GAE3C,GAAIwB,EAAOxF,IAAI,CAAE,CACf,IAAMhI,EAAewN,EAAOpO,OAAO,CAAC,sBAAwB,SAAW,GACjEW,EAAQyN,EAAOzN,KAAK,EAAIC,EACzBL,IAEHA,CADAA,EAAQM,SAASyN,aAAa,CAAC,QAAO,EAChC9N,IAAI,CAAG,SACbD,EAAMb,SAAS,CAACuH,GAAG,CAAC,0BACpB2F,EAAK2B,OAAO,CAAChO,IAEfA,EAAMqI,IAAI,CAAGwF,EAAOxF,IAAI,CACxBrI,EAAMI,KAAK,CAAGA,CAChB,MAAWJ,GACTA,EAAMiO,MAAM,EAEhB,CAEO,SAASH,EAA+BzB,CAAqB,EAClE,IAAMrM,EAAQqM,EAAK3M,aAAa,CAAC,gCACjC,OAAOM,aAAiBH,iBAAmBG,EAAQ,IACrD,C,8CCnCIkO,E,oFATJ,GAAM,CAACC,QAAAA,CAAO,CAAC,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,gBAQxBC,EAAkB,aAGlBC,EAAmB,CAAC,aAAc,aAAc,eAAgB,WAAY,cAAe,OAAO,CAExG,GAAI,CACF,IAAMC,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,EAAmB,aAInC,QAAOD,EAAQE,WAAW,CAE1BP,EAAuB,IAAIQ,EAAAA,CAAeA,CAACH,EAC7C,CAAE,MAAOI,EAAG,CAEZ,CAEA,SAASC,EAAkBlG,CAAiB,EAC1C,IAAM+F,EAAcD,CAAAA,EAAAA,EAAAA,CAAAA,EAAmB,cAAcC,WAAW,EAAI,CAAC,EAErE,GAAIA,EAKF,IAAK,GAAM,CAACpL,EAAKjD,EAAM,GAJvB,OAAOqO,EAAYI,MAAM,CACzB,OAAOJ,EAAYK,SAAS,CAC5B,OAAOL,EAAYxH,IAAI,CAEI3D,OAAOyL,OAAO,CAACN,IAEpCpL,EAAImF,UAAU,CAAC6F,KACjBI,CAAW,CAACpL,EAAIwB,OAAO,CAACwJ,EAAiB,IAAI,CAAGjO,EAChD,OAAOqO,CAAW,CAACpL,EAAI,EAK7B,IAAM2L,EAAc1O,SAASZ,aAAa,CAAkB,8BAC5D,GAAIsP,EAAa,CACf,IAAMC,EAAc5F,KAAK+B,KAAK,CAAC8D,KAAKF,EAAY5H,OAAO,GACvD9D,OAAOiH,MAAM,CAACkE,EAAaQ,EAC7B,CAEA,IAAME,EAAY,IAAI9B,gBAAgB1L,OAAOF,QAAQ,CAAC+F,MAAM,EAC5D,IAAK,GAAM,CAACnE,EAAKjD,EAAM,GAAI+O,EACrBb,EAAiBtF,QAAQ,CAAC3F,EAAI4J,WAAW,KAC3CwB,CAAAA,CAAW,CAACpL,EAAI,CAAGjD,CAAI,EAO3B,OAFAqO,EAAYW,KAAK,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAAU3D,QAAQ,GAE/BpI,OAAOiH,MAAM,CAACkE,EAAa/F,EACpC,CAEO,SAAS4G,EAAa5G,CAAiB,EAC5CwF,GAAsBoB,aAAaV,EAAkBlG,GACvD,CAEO,SAAS6G,EAAUtP,CAAY,CAAEyI,EAAwE,CAAC,CAAC,EAChH,IAAM8G,EAAUlP,SAASwJ,IAAI,EAAEpK,cAA+B,yCAAyC0H,QAEjGqI,EAAwBD,EAAU,CAACA,QAAAA,CAAO,EAAI,CAAC,EAErD,IAAK,GAAM,CAACnM,EAAKjD,EAAM,GAAIkD,OAAOyL,OAAO,CAACrG,SACpCtI,GACFqP,CAAAA,CAAY,CAACpM,EAAI,CAAG,CAAC,EAAEjD,EAAM,CAAC,EAIlC,GAAI8N,EAAsB,CACxB,IAAMwB,EAAmBzP,GAAQ,UACb2O,EAAkBa,GACtCvB,EAAqBqB,SAAS,CAACG,EAAkBd,EAAkBa,GAKrE,CACF,CAEO,SAASE,EAAsBC,CAAW,EAC/C,OAAOtM,OAAOuM,WAAW,CAACvM,OAAOyL,OAAO,CAACa,GAAKjK,GAAG,CAAC,CAAC,CAACmK,EAAGC,EAAE,GAAK,CAACD,EAAGzG,KAAKC,SAAS,CAACyG,GAAG,EACtF,C,oEClFA,SAASC,EAAgBzB,CAAyB,EAChD,MAAO,CACL0B,WAAY,IAEH,KAETC,kBAAmB,CAACC,EAAqBC,KACvC,GAEEA,gBAAAA,EAAKtK,OAAO,EAEZsK,EAAK3Q,OAAO,CAAC,6CACb2Q,UAAAA,EAAKrM,YAAY,CAAC,yBAGlB,OADAoM,EAAOE,WAAW,CAACD,GACZ,GAST,GALID,EAAOrM,YAAY,CAAC,kBACtBsM,EAAKjK,YAAY,CAAC,gBAAiBgK,EAAOpM,YAAY,CAAC,kBAAoB,IAIzEoM,EAAOrM,YAAY,CAAC,wBAAyB,CAC/C,IAAM6D,EAAQ,CAACwI,EAAOpM,YAAY,CAAC,yBAA2B,EAAC,EAAGuB,IAAI,GAAGsC,KAAK,CAAC,OAC/E,IAAK,IAAMS,KAAQV,EACbwI,EAAOrM,YAAY,CAACuE,GACtB+H,EAAKjK,YAAY,CAACkC,EAAM8H,EAAOpM,YAAY,CAACsE,IAAS,IAErD+H,EAAKE,eAAe,CAACjI,EAG3B,CAeA,OAXEkG,GAASgC,iBACPH,CAAAA,aAAgBvQ,kBAAoBuQ,EAAKnQ,IAAI,GAAK,EAA6BA,IAAI,EACnFmQ,aAAgBtQ,mBAAkB,IAEhCsQ,aAAgBvQ,kBAAqBuQ,CAAAA,aAAAA,EAAKnQ,IAAI,EAAmBmQ,UAAAA,EAAKnQ,IAAI,EAC5EmQ,EAAKlQ,OAAO,CAAG,EAAwBA,OAAO,CAE9CkQ,EAAKhQ,KAAK,CAAG,EAAwBA,KAAK,EAIvC,EACT,EACAoQ,0BAA2B,CAACL,EAAqBC,KAE/C,IAAK,IAAMK,IAAQ,IAAIN,EAAOO,UAAU,IAAKN,EAAKM,UAAU,CAAC,CACvDD,EAAKE,QAAQ,GAAKC,KAAKC,YAAY,EACrCJ,EAAKxC,MAAM,GAIf,MAAO,EACT,EACA6C,YAAa,IAGPC,EAASC,iBAAiB,EAE5BC,eAAe,KACbF,EAASG,oBAAoB,KAC7BH,EAASC,iBAAiB,IAC5B,EAEJ,CACF,CACF,CAEO,SAASG,EAAgBxN,CAAW,EACzC,IAAMyN,EAAWzN,EAAGtE,OAAO,CAAC,2BAC5B,OAAO+R,MAAAA,GAAoBA,UAAAA,EAASrN,YAAY,CAAC,wBACnD,CAEO,SAASqC,EAAMzC,CAAW,CAAE0N,CAAoB,CAAE9C,CAAyB,EAChF,GAAI,iBAAO8C,EAAoB,CAC7B,IAAMC,EAAWhR,SAASyN,aAAa,CAAC,WACxCuD,CAAAA,EAASC,SAAS,CAAGF,EACrBA,EAAQC,EAASlK,OAAO,CAG1B,GAAI,CAAC+J,EAAgBxN,GAAK,CACxBA,EAAG0M,WAAW,CAACgB,GACf,MACF,CAGA,GAAIA,aAAiBG,iBAAkB,CACrC,IAAMC,EAAWhM,MAAMC,IAAI,CAAC2L,EAAMI,QAAQ,CACtCA,CAAAA,EAASrQ,MAAM,EACjBsQ,CAAAA,EAAAA,EAAAA,CAAAA,EAAS/N,EAAI8N,CAAQ,CAAC,EAAE,CAAGzB,EAAgBzB,IAC3C5K,EAAGgO,KAAK,IAAIF,EAASG,KAAK,CAAC,KAE3BjO,EAAG0M,WAAW,CAACgB,EAEnB,KACEK,CAAAA,EAAAA,EAAAA,CAAAA,EAAS/N,EAAI0N,EAAOrB,EAAgBzB,GAExC,CAEO,SAASsD,EAAalO,CAAW,CAAEyD,CAAe,CAAEmH,CAAyB,EAClF,GAAI,CAAC4C,EAAgBxN,GAAK,CACxBA,EAAG4N,SAAS,CAAGnK,EACf,MACF,CAEA,IAAI0K,EAAU,GACVC,EAAW,EAGXpO,CAAAA,EAAGqO,UAAU,EAAErB,WAAaC,KAAKqB,SAAS,EAC5CH,CAAAA,EAAUnO,EAAGqO,UAAU,CAACE,SAAS,EAAEC,MAAM,SAAS,CAAC,EAAE,EAAI,EAAC,EAExDxO,EAAGyO,SAAS,EAAEzB,WAAaC,KAAKqB,SAAS,EAC3CF,CAAAA,EAAWpO,EAAGyO,SAAS,CAACF,SAAS,EAAEC,MAAM,SAAS,CAAC,EAAE,EAAI,EAAC,EAG5D,IAAMd,EAAQ1N,EAAG0O,SAAS,CAAC,GAC3BhB,CAAAA,EAAME,SAAS,CAAG,CAAC,EAAEO,EAAQ,EAAE1K,EAAQ9B,IAAI,GAAG,EAAEyM,EAAS,CAAC,CAE1DL,CAAAA,EAAAA,EAAAA,CAAAA,EAAS/N,EAAI0N,EAAOrB,EAAgBzB,GACtC,C,4DCtIA,IAAM+D,EAAa,mBAENC,EAAqCC,EAAAA,EAAcA,CAACC,YAAY,CAACH,EAAY,CACxFI,WAAY,GACHC,EAAAA,CAAkBA,CAACC,KAAK,CAAC,CAC9BC,OAAQ,IAAMC,EACdR,WAAAA,EACAS,SAAUD,EACVE,SAAU,GACVC,gBAAiB,EACnB,EAEJ,GCbO,SAAS5N,EAAU/E,CAAkB,CAAE4S,CAAY,EACxD,IAAM5B,EAAWhR,EAASyN,aAAa,CAAC,YAExC,OADAuD,EAASC,SAAS,CAAGgB,EAAmCG,UAAU,CAACQ,GAC5D5S,EAAS6S,UAAU,CAAC7B,EAASlK,OAAO,CAAE,GAC/C,C,oICAO,kCAAMgM,gCAAgCxK,MAAO,EAwD7C,IAAM+J,EAAqB,CAACC,MA7CnC,SAAe,CACbC,OAAAA,CAAM,CACNP,WAAAA,CAAU,CACVS,SAAAA,CAAQ,CACRE,gBAAAA,EAAkB,EAAK,CACvBD,SAAAA,CAAQ,CACRK,sBAAAA,EAAwB,EAAK,CACjB,EACZ,GAAI,CACF,GAAI1K,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,qCAAsC,OAAOoK,EAClEO,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CAACC,aAAc,8BAA+BC,uBAAwBlB,CAAU,EAAG,GAAO,IACpG,IAAMmB,EAAeZ,IAuBrB,OAtBIG,GACF,IAAIU,QAAQC,IACV,IAAMC,EAAYjS,OAAOkS,WAAW,CAAC7L,GAAG,GAClC8L,EAAYC,IAAAA,QAAkB,CAACN,EAAc,CAACO,YAAa,EAAE,GAC7DC,EAAUtS,OAAOkS,WAAW,CAAC7L,GAAG,GAEtC,GAAIyL,EAAarS,MAAM,GAAK0S,EAAU1S,MAAM,CAAE,CAC5C,IAAM8S,EAAM,MAAU,yCAChBnK,EAAQmK,EAAInK,KAAK,EAAE6H,MAAM,EAAG,KAC5BuC,EAASV,EAAa7B,KAAK,CAAC,EAAG,KACrCrC,CAAAA,EAAAA,EAAAA,EAAAA,EAAU,gCAAiC,CACzC+C,WAAAA,EACA6B,OAAAA,EACApK,MAAAA,EACAqK,aAAcX,EAAarS,MAAM,CACjCiT,gBAAiBP,EAAU1S,MAAM,CACjCkT,cAXkBL,EAAUL,CAY9B,GACAD,EAAQF,EACV,CACF,GAEKA,CACT,CAAE,MAAOpS,EAAG,CACV,GAAIA,aAAa+R,0BACZC,GAAuB5K,CAAAA,EAAAA,EAAAA,EAAAA,EAAYpH,GACxCiS,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CAACC,aAAc,6BAA8BC,uBAAwBlB,CAAU,GACrF,CAACW,GAHqC,MAAM5R,CAIlD,CAEA,OAAO0R,CACT,CAEwC,C,8DC1CxC,SAASwB,EAAcC,CAAoB,EACzC,MAAO,KACL,MAAM,UAAc,CAAC,2CAA2C,EAAEA,EAAa,CAAC,CAClF,CACF,CAEA,IAAMC,EAAY,CAChB/B,WAAY6B,EAAc,cAC1BG,aAAcH,EAAc,gBAC5BI,gBAAiBJ,EAAc,kBACjC,EAcMK,EAAqB,IAAIrO,IAEzBsO,EAAe,WAAgDA,YAAY,EAdhE,CACfpC,aAAc,CAACpK,EAAcyM,IAA6E,EACxGzM,KAAAA,EACA,GAAGoM,CAAS,CACZ,GAAGK,CAAK,CACV,CACF,EAUatC,EAAiB,CAC5BC,aAAc,CAACpK,EAAcyM,KAC3B,GAAIF,EAAmBtM,GAAG,CAACD,GAIzB,MAHAiL,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,CACRC,aAAc,wCAChB,GACOqB,EAAmBhR,GAAG,CAACyE,EACzB,EACL,IAAMwK,EAASgC,EAAapC,YAAY,CAACpK,EAAMyM,GAE/C,OADAF,EAAmB1Q,GAAG,CAACmE,EAAMwK,GACtBA,CACT,CACF,CACF,EAWIkC,EAAmC,EAEvCC,CAAAA,EAAAA,EAAeA,EAAEzU,iBAAiB,0BAA2B,IAC/B,8BAAxBc,EAAE4T,iBAAiB,EAAqCF,IAE1DpQ,QAAQC,IAAI,CAAC,CAAC;;;;2GAIyF,CAAC,EACxGmQ,EAAmC,GAEvC,E","sources":["app/assets/modules/github/has-interactions.ts","app/assets/modules/github/history.ts","app/assets/modules/github/updatable-content.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/failbot/failbot.ts","ui/packages/form-utils/form-utils.ts","ui/packages/form-utils/remote-submit.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/morpheus/index.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts"],"sourcesContent":["import DetailsDialogElement from '@github/details-dialog-element'\nimport {isFormField} from '@github-ui/form-utils'\n\n// Check if container has any user interactions that could be lost if replaced.\n//\n// container - An Element to check for user interactions.\n// ignoreFocusedContainer - A Boolean, `true` to skip the\n// focus check if the container is the focused element. Dirty field and\n// mousedown checks are still performed.\nexport function hasInteractions(\n  container: Element,\n  ignoreFocusedContainer = false,\n  ignoreDirtyFields = false,\n): boolean {\n  return (\n    (!ignoreDirtyFields && hasDirtyFields(container)) ||\n    hasFocus(container, ignoreFocusedContainer) ||\n    hasMousedown(container) ||\n    markedAsDirty(container)\n  )\n}\n\nexport function hasDirtyFields(container: Element): boolean {\n  for (const field of container.querySelectorAll('input, textarea')) {\n    if (field instanceof HTMLInputElement || field instanceof HTMLTextAreaElement) {\n      if (formFieldValueChanged(field)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction formFieldValueChanged(input: HTMLInputElement | HTMLTextAreaElement): boolean {\n  if (input instanceof HTMLInputElement && (input.type === 'checkbox' || input.type === 'radio')) {\n    if (input.checked !== input.defaultChecked) return true\n  } else {\n    if (input.value !== input.defaultValue) return true\n  }\n  return false\n}\n\nlet stubbedActiveElement: Element | null\n\nexport async function withActiveElement(element: Element, fn: () => unknown): Promise<void> {\n  stubbedActiveElement = element\n  try {\n    await fn()\n  } finally {\n    stubbedActiveElement = null\n  }\n}\n\nfunction getActiveElement(container: Element): Element | null {\n  if (stubbedActiveElement instanceof Element) {\n    return stubbedActiveElement\n  } else if (container && container.ownerDocument && container.ownerDocument.activeElement) {\n    return container.ownerDocument.activeElement\n  }\n  return null\n}\n\nlet latestMousedownTarget: EventTarget | null\nlet latestMouseupTarget: EventTarget | null\n\ndocument.addEventListener(\n  'mousedown',\n  function (event: Event) {\n    latestMousedownTarget = event.target\n  },\n  true,\n)\n\ndocument.addEventListener(\n  'mouseup',\n  function (event: Event) {\n    latestMousedownTarget = null\n    latestMouseupTarget = event.target\n  },\n  true,\n)\n\ndocument.addEventListener(\n  'contextmenu',\n  function (event: Event) {\n    // Treat `contextmenu` events like `mouseup` events so that we still\n    // update content if the user right-clicks on a safe element.\n    latestMousedownTarget = null\n    latestMouseupTarget = event.target\n  },\n  true,\n)\n\ndocument.addEventListener(\n  'dragend',\n  function () {\n    // Drag and drop does not result in a mouseup event.\n    latestMousedownTarget = null\n  },\n  true,\n)\n\nfunction hasFocus(container: Element, ignoreFocusedContainer: boolean): boolean {\n  const activeElement = getActiveElement(container)\n  if (activeElement === null) return false\n  if (ignoreFocusedContainer && activeElement === container) return false\n\n  // Updatable container hasFocus if one of the following is true:\n  // 1. Focus target is both a form field AND the update target\n  const formFieldFocused = activeElement === container && isFormField(activeElement)\n  if (formFieldFocused) return true\n  // 2. Focus target is relevent (ie not a UPDATABLE_INTERACTIVE_TARGET)\n  //\n  // We consider it safe to update content if the focused element is a button or a link, as\n  // both likely only trigger transient actions\n  const focusTargetIsRelevent = container.contains(activeElement) && !activeElementIsSafe(activeElement)\n  if (focusTargetIsRelevent) return true\n\n  // 3. The last clicked element is an open details summary\n  const interactingWithOpenDetails =\n    latestMouseupTarget instanceof Element &&\n    container.contains(latestMouseupTarget) &&\n    !!latestMouseupTarget.closest('details[open] > summary')\n  return interactingWithOpenDetails\n}\n\nconst UPDATABLE_INTERACTIVE_TARGET = 'a[href], button'\n\nfunction activeElementIsSafe(activeElement: Element): boolean {\n  if (activeElement instanceof DetailsDialogElement) return true\n\n  const isLinkOrButton = activeElement instanceof HTMLAnchorElement || activeElement instanceof HTMLButtonElement\n  const isInsideTaskItem = activeElement.parentElement?.classList.contains('task-list-item')\n  if (isLinkOrButton && isInsideTaskItem) {\n    return true\n  }\n\n  if (!(latestMouseupTarget instanceof Element)) return false\n  const updatableActiveElement = activeElement.closest(UPDATABLE_INTERACTIVE_TARGET)\n  if (!updatableActiveElement) return false\n  const updatableMouseupElement = latestMouseupTarget.closest(UPDATABLE_INTERACTIVE_TARGET)\n  return updatableActiveElement === updatableMouseupElement\n}\n\nfunction hasMousedown(container: Element): boolean {\n  return container.matches(':active:enabled') || container.contains(latestMousedownTarget as Node | null)\n}\n\nfunction markedAsDirty(container: Element): boolean {\n  return container.closest('.is-dirty') || container.querySelector('.is-dirty') ? true : false\n}\n","let sessionHistoryEntries: Array<{url: string; state: unknown}> = []\nlet sessionHistoryOffset = 0\nlet state: State\n\ntype State = {\n  _id: number\n  turbo?: {\n    restorationIdentifier: string\n  }\n}\n\n/*\n * Array of history entries.\n *\n * Example:\n * {\n *   0: {\n *     url: \"/\",\n *     state: { ... }.\n *   },\n *   1: {\n *     url: \"/github/github/issues/123\",\n *     state: { ... }.\n *   },\n *   2: {\n *     url: \"/github/github/issues/123#comment-4\",\n *     state: { ... }.\n *   }.\n *  }.\n */\n\nexport function getState(): State {\n  return state\n}\n\nfunction safeGetHistory() {\n  try {\n    // Clamp history.length to 0<->9007199254740991 (Number.MAX_SAFE_INTEGER isn't supported in IE)\n    return Math.min(Math.max(0, history.length) || 0, 9007199254740991)\n  } catch (e) {\n    return 0\n  }\n}\n\nfunction initializeState(): State {\n  const newState = {_id: new Date().getTime(), ...history.state}\n  setState(newState)\n  return newState\n}\n\n// Current index into history entries stack.\nfunction position(): number {\n  return safeGetHistory() - 1 + sessionHistoryOffset\n}\n\nfunction setState(newState: State) {\n  state = newState\n\n  // Update entry at current position\n  const url = location.href\n  sessionHistoryEntries[position()] = {url, state}\n\n  // Trim entries to match history size\n  sessionHistoryEntries.length = safeGetHistory()\n\n  // Emit public statechange\n  window.dispatchEvent(new CustomEvent('statechange', {bubbles: false, cancelable: false}))\n}\n\n// Generate unique id for state object.\n//\n// Use a timestamp instead of a counter since ids should still be unique\n// across page loads.\nfunction uniqueId(): number {\n  return new Date().getTime()\n}\n\n// Indirection for history.pushState to support tracking URL changes.\n//\n// Would be great if there was a standard window.addEventListener('statechange') event.\nexport function pushState(oldState: State | null, title: string, url: string) {\n  // pushState drops any forward history entries\n  sessionHistoryOffset = 0\n  const newState = {_id: uniqueId(), ...oldState}\n  history.pushState(newState, title, url)\n  setState(newState)\n}\n\n// Indirection for history.replaceState to support tracking URL changes.\n//\n// Would be great if there was a standard window.addEventListener('statechange') event.\nexport function replaceState(oldState: Record<string, unknown> | null, title: string, url: string) {\n  const newState = {...getState(), ...oldState}\n  history.replaceState(newState, title, url)\n  setState(newState)\n}\n\nstate = initializeState()\n\nwindow.addEventListener(\n  'popstate',\n  function onPopstate(event: PopStateEvent) {\n    const currentState: State = event.state\n\n    if (!currentState || (!currentState._id && !currentState.turbo?.restorationIdentifier)) {\n      // Unmanaged state in history entries\n      // Or could be a hashchange pop, ignore and let hashchange handle it\n      return\n    }\n\n    // Each state has a unique restorationIdentifier provided by Turbo. We compare the id\n    // to see if we are going backwards or forwards.\n    const id = currentState.turbo?.restorationIdentifier\n    const restoreId = (sessionHistoryEntries[position() - 1]?.state as State)?.turbo?.restorationIdentifier\n\n    if (restoreId === id) {\n      sessionHistoryOffset--\n    } else {\n      sessionHistoryOffset++\n    }\n\n    setState(currentState)\n  },\n  true,\n)\n\nlet turboAction: string\n\nwindow.addEventListener('turbo:visit', event => {\n  if (!(event instanceof CustomEvent)) return\n\n  turboAction = event.detail.action\n})\n\n// Listen turbo navigations to reset the `sessionHistoryOffset` in case we are doing a page load\n// instead of poping a state from the history stack.\nwindow.addEventListener('turbo:load', () => {\n  if (turboAction === 'restore') return\n\n  sessionHistoryOffset = 0\n  // Add turbo navigations to the state stack, so we can keep it complete without `empty` entries.\n  replaceState(history.state, '', '')\n})\n\nwindow.addEventListener(\n  'hashchange',\n  function onHashchange() {\n    if (safeGetHistory() > sessionHistoryEntries.length) {\n      // Forward navigation\n      const newState = {_id: uniqueId()}\n      history.replaceState(newState, '', location.href)\n      setState(newState)\n    }\n  },\n  true,\n)\n\n// We need to reset our history state on full-page loads to prevent our state from getting out of sync with the browser's history stack.\nwindow.addEventListener('pageshow', () => {\n  sessionHistoryEntries = []\n  sessionHistoryOffset = 0\n})\n","import {hasInteractions} from './has-interactions'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {morph} from '@github-ui/morpheus'\nimport {parseHTML} from '@github-ui/parse-html'\nimport {preserveAnchorNodePosition} from 'scroll-anchoring'\nimport {replaceState} from './history'\n\nconst pendingRequests = new WeakMap<HTMLElement, AbortController>()\nconst staleRecords: {[key: string]: string} = {}\n\n// Wrapper around `window.location.reload()` that forceably cleans out the\n// `staleRecords` state associated with the entry at the top of the history\n// stack before reloading.\nexport function reload() {\n  for (const key of Object.keys(staleRecords)) {\n    delete staleRecords[key]\n  }\n  const stateObject = history.state || {}\n  stateObject.staleRecords = staleRecords\n  replaceState(stateObject, '', location.href)\n  window.location.reload()\n}\n\n// Associates the `staleRecords` object, if it contains any entries, with the\n// entry at top of the history stack.\nexport function registerStaleRecords() {\n  if (Object.keys(staleRecords).length > 0) {\n    const stateObject = history.state || {}\n    stateObject.staleRecords = staleRecords\n    replaceState(stateObject, '', location.href)\n  }\n}\n\n// Fetch and replace container with its data-url.\n//\n// This replacement uses conservative checks to safely replace the element.\n// If a user is interacting with any element within the container, the\n// replacement will be aborted.\nexport async function updateContent(el: HTMLElement): Promise<void> {\n  if (pendingRequests.get(el)) return\n\n  const retainFocus = el.hasAttribute('data-retain-focus')\n  const url = el.getAttribute('data-url')\n  if (!url) throw new Error('could not get url')\n  const controller = new AbortController()\n  pendingRequests.set(el, controller)\n\n  try {\n    const response = await fetch(url, {\n      signal: controller.signal,\n      headers: {\n        Accept: 'text/html',\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n    })\n    if (!response.ok) return\n    const data = await response.text()\n    if (hasInteractions(el, retainFocus)) {\n      // eslint-disable-next-line no-console\n      console.warn('Failed to update content with interactions', el)\n      return\n    }\n    staleRecords[url] = data\n    return replace(el, data, retainFocus)\n  } catch {\n    // Ignore failed request.\n  } finally {\n    pendingRequests.delete(el)\n  }\n}\n\n// Abort any in-flight replacements and replace element without any interaction checks.\nexport async function replaceContent(el: HTMLElement, data: string, wasStale = false): Promise<void> {\n  const controller = pendingRequests.get(el)\n  controller?.abort()\n\n  const updatable = el.closest('.js-updatable-content[data-url], .js-updatable-content [data-url]')\n  if (!wasStale && updatable && updatable === el) {\n    staleRecords[updatable.getAttribute('data-url') || ''] = data\n  }\n  return replace(el, data)\n}\n\nfunction replace(el: HTMLElement, data: string, retainFocus = false): Promise<void> {\n  return preserveAnchorNodePosition(document, () => {\n    const newContent = parseHTML(document, data.trim())\n    const elementToRefocus =\n      retainFocus && el.ownerDocument && el === el.ownerDocument.activeElement ? newContent.querySelector('*') : null\n\n    const detailsIds = Array.from(el.querySelectorAll('details[open][id]')).map(element => element.id)\n    if (el.tagName === 'DETAILS' && el.id && el.hasAttribute('open')) detailsIds.push(el.id)\n\n    // Check the elements we are about replace to see if we want to preserve the scroll position of any of them\n    for (const preserveElement of el.querySelectorAll('.js-updatable-content-preserve-scroll-position')) {\n      const id = preserveElement.getAttribute('data-updatable-content-scroll-position-id') || ''\n      heights.set(id, preserveElement.scrollTop)\n    }\n\n    for (const id of detailsIds) {\n      const details = newContent.querySelector(`#${id}`)\n      if (details) details.setAttribute('open', '')\n    }\n\n    morph(el, newContent)\n    if (elementToRefocus instanceof HTMLElement) {\n      elementToRefocus.focus()\n    }\n  })\n}\n\nconst heights = new Map()\nobserve('.js-updatable-content-preserve-scroll-position', {\n  constructor: HTMLElement,\n  add(el) {\n    // When element is added to the DOM, check the map for the last scroll position we have on record for it.\n    const id = el.getAttribute('data-updatable-content-scroll-position-id')\n    if (!id) return\n    const height = heights.get(id)\n    if (height == null) return\n\n    el.scrollTop = height\n  },\n})\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {type: error.name, value: error.message, stacktrace: stacktrace(error)}\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import {persistSubmitButtonValue} from './remote-submit'\n\ntype TextField = HTMLInputElement | HTMLTextAreaElement\ntype Button = HTMLInputElement | HTMLButtonElement\n\nfunction fire(target: HTMLElement, name: string, cancelable: boolean): boolean {\n  return target.dispatchEvent(\n    new CustomEvent(name, {\n      bubbles: true,\n      cancelable,\n    }),\n  )\n}\n\n// Submit a form while ensuring that `submit` event is also triggered.\n//\n// Calling native `form.submit()` method immediately submits the form without triggering the `submit` event.\n// As a result, code that wants to hook into form submits would never execute.\n//\n// This method first triggers the `submit` event and, if that event wasn't `preventDefault`d, submits the\n// form natively.\nexport function requestSubmit(form: HTMLFormElement, submitter?: Button) {\n  if (submitter) {\n    checkButtonValidity(form, submitter)\n    persistSubmitButtonValue(submitter)\n  }\n  if (fire(form, 'submit', true)) {\n    form.submit()\n  }\n}\n\n// Check submitter validity for form.requestSubmit compatibility.\n// See https://html.spec.whatwg.org/#dom-form-requestsubmit.\nfunction checkButtonValidity(form: HTMLFormElement, submitter: Button) {\n  if (!(form instanceof HTMLFormElement)) throw new TypeError('The specified element is not of type HTMLFormElement.')\n  if (!(submitter instanceof HTMLElement)) throw new TypeError('The specified element is not of type HTMLElement.')\n  if (submitter.type !== 'submit') throw new TypeError('The specified element is not a submit button.')\n  if (!form || form !== submitter.form) throw new Error('The specified element is not owned by the form element.')\n}\n\n// Set a form field value while ensuring that `change` event is also triggered.\n//\n// Having the `change` event fire is important for various behaviors to react, such as form validation.\nexport function changeValue(input: TextField, value: string | boolean) {\n  if (typeof value === 'boolean') {\n    if (input instanceof HTMLInputElement) {\n      input.checked = value\n    } else {\n      throw new TypeError('only checkboxes can be set to boolean value')\n    }\n  } else {\n    if (input.type === 'checkbox') {\n      throw new TypeError(\"checkbox can't be set to string value\")\n    } else {\n      input.value = value\n    }\n  }\n  fire(input, 'change', false)\n}\n\n// Fill multiple form fields by item name.\nexport function fillFormValues(form: HTMLFormElement, fields: {[key: string]: string}) {\n  for (const name in fields) {\n    const value = fields[name]\n    const element = form.elements.namedItem(name)\n\n    if (element instanceof HTMLInputElement) {\n      element.value = value!\n    } else if (element instanceof HTMLTextAreaElement) {\n      element.value = value!\n    }\n  }\n}\n\n// Test if element is a form field.\nexport function isFormField(element: Node): boolean {\n  if (!(element instanceof HTMLElement)) {\n    return false\n  }\n\n  const name = element.nodeName.toLowerCase()\n  const type = (element.getAttribute('type') || '').toLowerCase()\n  return (\n    name === 'select' ||\n    name === 'textarea' ||\n    (name === 'input' && type !== 'submit' && type !== 'reset') ||\n    element.isContentEditable\n  )\n}\n\nfunction searchParamsFromFormData(formData: FormData): URLSearchParams {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new URLSearchParams(formData as any)\n}\n\n// Get a `?` search string for a URL for a GET form, using its `action` attribute as well as its other fields.\nexport function combineGetFormSearchParams(formAction: URL, formData: FormData): string {\n  const allSearchParams = new URLSearchParams(formAction.search)\n  const searchParamsFromInputs = searchParamsFromFormData(formData)\n  for (const [key, value] of searchParamsFromInputs) {\n    allSearchParams.append(key, value)\n  }\n  return allSearchParams.toString()\n}\n\n// Serialize form data into string.\nexport function serialize(form: HTMLFormElement): string {\n  return searchParamsFromFormData(new FormData(form)).toString()\n}\n","// Emulates submit button submission values by inserting a hidden input to the form.\n//\n// Submit events can be triggerd in the following ways:\n// - User clicks on a submit button.\n// - User press Enter when focusing on a form field; also known as \"implicit submission\".\n// - Programmatically via requestSubmit helper.\n//\n// On GitHub.com, the submission is either handled by the browser or remoteForm.\n//\n// For submissions triggered by user actions, the name and value of the clicked submit button (also known as\n// \"the submitter\") is passed along in the request, and can be programmatically retrieved with FormData.entries().\n//\n// However, this value will be lost in the following cases:\n// - 1. When the submitter button is disabled, most commonly by [data-disable-with].\n// - 2. When submitting via requestSubmit (from form.js), because the submission does not originated from a submitter.\n// - 3. When submitting with remoteForm, because FormData(form).entries() does not know about the submitter. In Safari\n// the submitter is known during the submission steps, but this behavior is not supported in any other browsers.\n//\n// @see {@link https://github.com/github/form-data-entries/pull/7}.\n//\n// For the exact workarounds, refer to ./form.js and ./remote.js.\nexport function persistSubmitButtonValue(button: HTMLButtonElement | HTMLInputElement) {\n  const form = button.closest('form')\n  if (!(form instanceof HTMLFormElement)) {\n    return\n  }\n\n  let input = findPersistedSubmitButtonValue(form)\n\n  if (button.name) {\n    const defaultValue = button.matches('input[type=submit]') ? 'Submit' : ''\n    const value = button.value || defaultValue\n    if (!input) {\n      input = document.createElement('input')\n      input.type = 'hidden'\n      input.classList.add('js-submit-button-value')\n      form.prepend(input)\n    }\n    input.name = button.name\n    input.value = value\n  } else if (input) {\n    input.remove()\n  }\n}\n\nexport function findPersistedSubmitButtonValue(form: HTMLFormElement): HTMLInputElement | null {\n  const input = form.querySelector('input.js-submit-button-value')\n  return input instanceof HTMLInputElement ? input : null\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import morphdom from 'morphdom'\n\nexport type MorpheusOptions = {\n  keepInputValues?: boolean\n}\n\ntype CustomElement = {\n  connectedCallback?(): void\n  disconnectedCallback?(): void\n}\n\nfunction morphdomOptions(options?: MorpheusOptions) {\n  return {\n    getNodeKey: () => {\n      // Since ids often contain uuids, we can't use them as keys.\n      return null\n    },\n    onBeforeElUpdated: (fromEl: HTMLElement, toEl: HTMLElement) => {\n      if (\n        // Workaround: Errors may occur when morphing turbo-frame attributes.\n        toEl.tagName === 'TURBO-FRAME' ||\n        // Workaround: the legacy task list code looks for these elements to be added in order to set them up from JS.\n        toEl.matches('.js-task-list-field, .contains-task-list') ||\n        toEl.getAttribute('data-morpheus-enabled') === 'false'\n      ) {\n        fromEl.replaceWith(toEl)\n        return false\n      }\n\n      // Ensure the data-catalyst attribute added by JS remains.\n      if (fromEl.hasAttribute('data-catalyst')) {\n        toEl.setAttribute('data-catalyst', fromEl.getAttribute('data-catalyst') || '')\n      }\n\n      // Check if there are other attributes we should not update.\n      if (fromEl.hasAttribute('data-morpheus-ignore')) {\n        const names = (fromEl.getAttribute('data-morpheus-ignore') || '').trim().split(/\\s+/)\n        for (const name of names) {\n          if (fromEl.hasAttribute(name)) {\n            toEl.setAttribute(name, fromEl.getAttribute(name) || '')\n          } else {\n            toEl.removeAttribute(name)\n          }\n        }\n      }\n\n      // If the option to keep input values is enabled, copy all input values from the old element to the new one.\n      if (\n        options?.keepInputValues &&\n        ((toEl instanceof HTMLInputElement && toEl.type === (fromEl as HTMLInputElement).type) ||\n          toEl instanceof HTMLTextAreaElement)\n      ) {\n        if (toEl instanceof HTMLInputElement && (toEl.type === 'checkbox' || toEl.type === 'radio')) {\n          toEl.checked = (fromEl as typeof toEl).checked\n        } else {\n          toEl.value = (fromEl as typeof toEl).value\n        }\n      }\n\n      return true\n    },\n    onBeforeElChildrenUpdated: (fromEl: HTMLElement, toEl: HTMLElement) => {\n      // Remove all comment nodes (mostly from the template engine) as they will confuse morphdom.\n      for (const node of [...fromEl.childNodes, ...toEl.childNodes]) {\n        if (node.nodeType === Node.COMMENT_NODE) {\n          node.remove()\n        }\n      }\n\n      return true\n    },\n    onElUpdated: (el: HTMLElement) => {\n      const customEl = el as CustomElement\n\n      if (customEl.connectedCallback) {\n        // Queue microtask to ensure this runs after the children have been updated as well.\n        queueMicrotask(() => {\n          customEl.disconnectedCallback?.()\n          customEl.connectedCallback?.()\n        })\n      }\n    },\n  }\n}\n\nexport function morpheusEnabled(el: Element) {\n  const ancestor = el.closest('[data-morpheus-enabled]')\n  return ancestor != null && ancestor.getAttribute('data-morpheus-enabled') !== 'false'\n}\n\nexport function morph(el: Element, newEl: Node | string, options?: MorpheusOptions) {\n  if (typeof newEl === 'string') {\n    const template = document.createElement('template')\n    template.innerHTML = newEl\n    newEl = template.content\n  }\n\n  if (!morpheusEnabled(el)) {\n    el.replaceWith(newEl)\n    return\n  }\n\n  // Workaround morphdom not correctly handling document fragments.\n  if (newEl instanceof DocumentFragment) {\n    const children = Array.from(newEl.children)\n    if (children.length) {\n      morphdom(el, children[0]!, morphdomOptions(options))\n      el.after(...children.slice(1))\n    } else {\n      el.replaceWith(newEl)\n    }\n  } else {\n    morphdom(el, newEl, morphdomOptions(options))\n  }\n}\n\nexport function morphContent(el: Element, content: string, options?: MorpheusOptions) {\n  if (!morpheusEnabled(el)) {\n    el.innerHTML = content\n    return\n  }\n\n  let leading = ''\n  let trailing = ''\n\n  // Match the leading/trailing whitespace of the existing content so text nodes are not removed.\n  if (el.firstChild?.nodeType === Node.TEXT_NODE) {\n    leading = el.firstChild.nodeValue?.match(/^\\s+/)?.[0] || ''\n  }\n  if (el.lastChild?.nodeType === Node.TEXT_NODE) {\n    trailing = el.lastChild.nodeValue?.match(/\\s+$/)?.[0] || ''\n  }\n\n  const newEl = el.cloneNode(false) as Element\n  newEl.innerHTML = `${leading}${content.trim()}${trailing}`\n\n  morphdom(el, newEl, morphdomOptions(options))\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ninterface GlobalThisWithMaybeTrustedTypes {\n  trustedTypes?: typeof tinyfill\n}\n\nconst registeredPolicies = new Map<string, GHTrustedTypePolicyOptions>()\n\nconst trustedTypes = (globalThis as GlobalThisWithMaybeTrustedTypes).trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = trustedTypes.createPolicy(name, rules)\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #pse-architecture if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n"],"names":["stubbedActiveElement","latestMousedownTarget","latestMouseupTarget","hasInteractions","container","ignoreFocusedContainer","ignoreDirtyFields","hasDirtyFields","hasFocus","activeElement","Element","ownerDocument","formFieldFocused","isFormField","focusTargetIsRelevent","contains","activeElementIsSafe","DetailsDialogElement","isLinkOrButton","HTMLAnchorElement","HTMLButtonElement","isInsideTaskItem","parentElement","classList","updatableActiveElement","closest","UPDATABLE_INTERACTIVE_TARGET","updatableMouseupElement","interactingWithOpenDetails","matches","querySelector","field","querySelectorAll","HTMLInputElement","HTMLTextAreaElement","formFieldValueChanged","input","type","checked","defaultChecked","value","defaultValue","document","addEventListener","event","target","state","turboAction","sessionHistoryEntries","sessionHistoryOffset","getState","safeGetHistory","Math","min","max","history","length","e","setState","newState","url","location","href","window","dispatchEvent","CustomEvent","bubbles","cancelable","uniqueId","Date","getTime","pushState","oldState","title","_id","replaceState","initializeState","currentState","turbo","restorationIdentifier","id","restoreId","position","detail","action","pendingRequests","WeakMap","staleRecords","reload","key","Object","keys","stateObject","registerStaleRecords","updateContent","el","get","retainFocus","hasAttribute","getAttribute","controller","AbortController","set","response","fetch","signal","headers","Accept","ok","data","text","console","warn","replace","delete","replaceContent","wasStale","abort","updatable","preserveAnchorNodePosition","newContent","parseHTML","trim","elementToRefocus","detailsIds","Array","from","map","element","preserveElement","tagName","push","heights","scrollTop","details","setAttribute","morph","HTMLElement","focus","Map","observe","constructor","add","height","queryLast","selector","list","requestUri","protocol","host","pagePathname","locationOverride","content","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","extensionErrors","errorsReported","loadTime","now","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","error","name","has","message","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","newError","stacktrace","report","errorContext","formatError","unloaded","isSupported","head","stack","frame","extensions","test","filename","function","method","body","assign","sanitizedUrl","readyState","referrer","getSoftNavReferrer","timeSinceLoad","round","user","pageUser","undefined","bundler","ui","Boolean","parse","file","String","methodName","lineno","lineNumber","toString","colno","column","login","clientId","getOrCreateClientId","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","fire","requestSubmit","form","submitter","checkButtonValidity","HTMLFormElement","persistSubmitButtonValue","submit","changeValue","fillFormValues","fields","elements","namedItem","nodeName","toLowerCase","isContentEditable","searchParamsFromFormData","formData","URLSearchParams","combineGetFormSearchParams","formAction","allSearchParams","searchParamsFromInputs","append","serialize","FormData","button","findPersistedSubmitButtonValue","createElement","prepend","remove","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","app_id","event_url","entries","visitorMeta","visitorHash","atob","urlParams","staff","isStaff","sendPageView","sendEvent","service","cleanContext","typeWithFallback","stringifyObjectValues","obj","fromEntries","k","v","morphdomOptions","getNodeKey","onBeforeElUpdated","fromEl","toEl","replaceWith","removeAttribute","keepInputValues","onBeforeElChildrenUpdated","node","childNodes","nodeType","Node","COMMENT_NODE","onElUpdated","customEl","connectedCallback","queueMicrotask","disconnectedCallback","morpheusEnabled","ancestor","newEl","template","innerHTML","DocumentFragment","children","morphdom","after","slice","morphContent","leading","trailing","firstChild","TEXT_NODE","nodeValue","match","lastChild","cloneNode","policyName","temporaryPermissiveParseHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","trustedTypesPolicy","apply","policy","s","fallback","sanitize","fallbackOnError","html","importNode","TrustedTypesPolicyError","silenceErrorReporting","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","Promise","resolve","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","err","output","outputLength","sanitizedLength","executionTime","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","trustedTypes","rules","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective"],"sourceRoot":""}