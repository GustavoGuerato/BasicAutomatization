{"version":3,"file":"ui_packages_react-core_create-browser-history_ts-ui_packages_react-core_deferred-registry_ts--ebbb92-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/analytics-provider/AnalyticsProvider.tsx","ui/packages/analytics-provider/context.ts","ui/packages/noop/noop.ts","ui/packages/react-core/app-context.ts","ui/packages/react-core/create-browser-history.ts","ui/packages/react-core/deferred-registry.ts","ui/packages/react-profiling-mode/src/index.ts","ui/packages/toast/Toast.tsx","ui/packages/toast/ToastContext.tsx","ui/packages/toast/Toasts.tsx","ui/packages/use-hydrated-effect/use-hydrated-effect.ts","ui/packages/use-is-mounted/use-is-mounted.ts","ui/packages/use-safe-state/use-safe-state.ts","ui/packages/react-core/AppContextProvider.tsx","ui/packages/react-core/use-color-modes.ts","ui/packages/react-core/BaseProviders.tsx","ui/packages/react-core/SSRErrorToast.tsx","ui/packages/react-core/CommonElements.tsx","ui/packages/react-core/ReactBaseElement.tsx","ui/packages/render-phase-provider/RenderPhaseProvider.tsx"],"sourcesContent":["import {useMemo} from 'react'\nimport type {PropsWithChildren} from 'react'\nimport {AnalyticsContext, type AnalyticsProviderProps} from './context'\n\nexport function AnalyticsProvider({children, appName, category, metadata}: PropsWithChildren<AnalyticsProviderProps>) {\n  const value = useMemo(() => ({appName, category, metadata}), [appName, category, metadata])\n  return <AnalyticsContext.Provider value={value}>{children}</AnalyticsContext.Provider>\n}\n\ntry{ AnalyticsProvider.displayName ||= 'AnalyticsProvider' } catch {}","import {createContext} from 'react'\n\ninterface AnalyticsContextType {\n  appName: string\n  category: string\n  metadata: {[key: string]: string}\n}\n\nexport type AnalyticsProviderProps = AnalyticsContextType\n\nexport const AnalyticsContext = createContext<AnalyticsContextType | null>(null)\n","/**\n * A function that always returns undefined and does nothing else.\n */\nexport const noop: (...args: unknown[]) => void = () => void 0\n","import {createContext} from 'react'\nimport type {AppRegistration} from './react-app-registry'\nimport type {History} from '@remix-run/router'\n\nexport interface AppContextType {\n  routes: AppRegistration['routes']\n  history: History\n}\n\nexport const AppContext = createContext<AppContextType>(null as unknown as AppContextType)\n","import {\n  createBrowserHistory as routerCreateBrowserHistory,\n  type BrowserHistory,\n  type BrowserHistoryOptions,\n  type To,\n  Action,\n} from '@remix-run/router'\nimport type {Listener, Update} from '@remix-run/router/dist/history'\n\n/**\n * A change to the current location that was blocked. May be retried\n * after obtaining user confirmation.\n *\n * The RR version of Transition extends Update, but this does not because it was easier not to.\n */\nexport interface Transition {\n  /**\n   * Retries the update to the current location.\n   */\n  retry(): void\n}\n\n/**\n * A function that receives transitions when navigation is blocked.\n */\nexport interface Blocker {\n  (tx: Transition): void\n}\n\nexport interface GitHubBrowserHistory extends BrowserHistory {\n  block(blocker: Blocker): () => void\n}\n\n/**\n * This is a wrapper around React Router's createBrowserHistory. On top of the RR browser history, this wrapper:\n * - Ensures that it is constructed with v5Compat:true, so that it is compatible with pre-6.4 RR usage.\n * - Creates a .block() method that is API-compatible with pre-6.4 RR usage, but using the post-6.4 RR internals.\n *\n * It would be lovely to get rid of this file. We will be able to do that if we migrate to using a data router, which\n * would allow us to use the RR unstable_useBlocker hook directly.\n */\nexport function createBrowserHistory(options: BrowserHistoryOptions = {}): GitHubBrowserHistory {\n  /**\n   * Note: `v5Compat` is set to true to maintain compatibility v5 & pre-6.4 versions of React Router. In the future,\n   * if we shift to using a React Router data router, we can remove this option (and possibly this whole wrapper?).\n   */\n  const history = routerCreateBrowserHistory({...options, v5Compat: true})\n  let listener: Listener | undefined\n  let blockers: Blocker[] = []\n  let ignoreNextHistoryUpdate = false\n\n  history.listen((update: Update) => {\n    if (ignoreNextHistoryUpdate) {\n      ignoreNextHistoryUpdate = false\n      return\n    }\n\n    if (update.action === Action.Pop && blockers.length && update.delta !== null && blockers.length > 0) {\n      const delta = update.delta\n\n      // undo the navigation for now:\n\n      ignoreNextHistoryUpdate = true\n      history.go(delta * -1)\n\n      for (const blocker of blockers) {\n        blocker({\n          retry() {\n            history.go(delta)\n          },\n        })\n      }\n    } else {\n      listener?.(update)\n    }\n  })\n\n  function doIfUnblocked(fn: () => void) {\n    if (blockers.length > 0) {\n      for (const blocker of blockers) {\n        blocker({\n          retry() {\n            fn()\n          },\n        })\n      }\n    } else {\n      fn()\n    }\n  }\n\n  return {\n    get action() {\n      return history.action\n    },\n\n    get location() {\n      return history.location\n    },\n\n    createHref(to: To) {\n      return history.createHref(to)\n    },\n\n    createURL(to: To) {\n      return history.createURL(to)\n    },\n\n    encodeLocation(to: To) {\n      return history.encodeLocation(to)\n    },\n\n    push(to: To, state?: unknown) {\n      doIfUnblocked(() => history.push(to, state))\n    },\n\n    replace(to: To, state?: unknown) {\n      doIfUnblocked(() => history.replace(to, state))\n    },\n\n    go(delta: number) {\n      doIfUnblocked(() => history.go(delta))\n    },\n\n    listen(newListener: Listener) {\n      if (listener) {\n        throw new Error('A history only accepts one active listener')\n      }\n      listener = newListener\n      const unlisten = () => {\n        listener = undefined\n      }\n      return unlisten\n    },\n\n    /**\n     * @deprecated\n     */\n    block(blocker: Blocker): () => void {\n      blockers.push(blocker)\n\n      const unblock = () => {\n        blockers = blockers.filter(b => b !== blocker)\n      }\n      return unblock\n    },\n  }\n}\n","export class DeferredRegistry<T> {\n  private registrationEntries: Record<\n    string,\n    {\n      promise: Promise<T>\n      resolve?: (r: T) => void\n    }\n  > = {}\n\n  public register(name: string, registration: T) {\n    const entry = this.registrationEntries[name]\n    if (entry) {\n      entry.resolve?.(registration)\n    } else {\n      this.registrationEntries[name] = {\n        promise: Promise.resolve(registration),\n      }\n    }\n  }\n\n  public getRegistration(name: string): Promise<T> {\n    this.registrationEntries[name] ||= new Deferred()\n    return this.registrationEntries[name]!.promise\n  }\n}\n\nclass Deferred<T> {\n  promise\n  resolve: (r: T) => void\n\n  constructor() {\n    this.promise = new Promise<T>(resolve => {\n      this.resolve = resolve\n    })\n  }\n}\n","import safeStorage from '@github-ui/safe-storage'\n\nconst {getItem, setItem, removeItem} = safeStorage('localStorage')\nconst REACT_PROFILING_ENABLED = 'REACT_PROFILING_ENABLED'\n\ninterface ReactProfilingModeMethods {\n  enable: () => void\n  disable: () => void\n  isEnabled: () => boolean\n}\n\nconst ReactProfilingMode: ReactProfilingModeMethods = {\n  enable: () => setItem(REACT_PROFILING_ENABLED, 'true'),\n  disable: () => removeItem(REACT_PROFILING_ENABLED),\n  isEnabled: () => !!getItem(REACT_PROFILING_ENABLED),\n}\n\nexport default ReactProfilingMode\n","import {CheckIcon, StopIcon, InfoIcon} from '@primer/octicons-react'\nimport {Portal, useSafeTimeout} from '@primer/react'\nimport React, {useEffect, type ReactNode, type ReactElement} from 'react'\n\nexport type ToastType = 'info' | 'success' | 'error'\nexport type ToastRole = 'alert' | 'status' | 'log'\nexport interface ToastProps {\n  message: ReactNode\n  timeToLive?: number\n  icon?: React.ReactNode\n  type?: ToastType\n  role?: ToastRole\n}\n\nconst typeClass: Record<ToastType, string> = {\n  info: '',\n  success: 'Toast--success',\n  error: 'Toast--error',\n}\nconst typeIcon: Record<ToastType, ReactElement> = {\n  info: <InfoIcon />,\n  success: <CheckIcon />,\n  error: <StopIcon />,\n}\n\n// Default role for the Toast is 'log' because 'status' is not read out by some screen readers.\n// Notably, NVDA will not read out popup content if the role is 'status'.\n/**\n * ⚠️ Warning: Usage of this component is discouraged by the accessibility team as\n * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n * within GitHub.\n * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n */\nexport const Toast: React.FC<ToastProps> = ({message, timeToLive, icon, type = 'info', role = 'log'}) => {\n  const [isVisible, setIsVisible] = React.useState(true)\n  const {safeSetTimeout} = useSafeTimeout()\n\n  useEffect(() => {\n    if (!timeToLive) return\n    safeSetTimeout(() => setIsVisible(false), timeToLive - 300)\n  }, [safeSetTimeout, timeToLive])\n\n  return (\n    <Portal>\n      <div className=\"p-1 position-fixed bottom-0 left-0 mb-3 ml-3\">\n        <div\n          className={`Toast ${typeClass[type]} ${isVisible ? 'Toast--animateIn' : 'Toast--animateOut'}`}\n          id=\"ui-app-toast\"\n          data-testid={`ui-app-toast-${type}`}\n          role={role}\n        >\n          <span className=\"Toast-icon\">{icon || typeIcon[type]}</span>\n          <span className=\"Toast-content\">{message}</span>\n        </div>\n      </div>\n    </Portal>\n  )\n}\n\ntry{ Toast.displayName ||= 'Toast' } catch {}","import {useSafeTimeout} from '@primer/react'\nimport {createContext, type ReactNode, useCallback, useContext, useMemo, useState} from 'react'\nimport {noop} from '@github-ui/noop'\nimport useSafeState from '@github-ui/use-safe-state'\nimport type {ToastRole, ToastType} from './Toast'\n\nexport const TOAST_SHOW_TIME = 5000\n\ninterface ToastInfo {\n  message: ReactNode\n  icon?: ReactNode\n  type?: ToastType\n  role?: ToastRole\n}\n\ntype ToastContextType = {\n  /**\n   * ⚠️ Warning: Usage of this hook is discouraged by the accessibility team as\n   * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n   * within GitHub.\n   * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n   */\n  addToast: (toast: ToastInfo) => void\n  /**\n   * ⚠️ Warning: Usage of this hook is discouraged by the accessibility team as\n   * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n   * within GitHub.\n   * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n   */\n  addPersistedToast: (toast: ToastInfo) => void\n  clearPersistedToast: () => void\n}\ntype ToastContextProviderType = {\n  children: ReactNode\n}\n\nconst ToastContext = createContext<ToastContextType>({\n  addToast: noop,\n  addPersistedToast: noop,\n  clearPersistedToast: noop,\n})\n\ntype InternalToastsContextType = {\n  toasts: ToastInfo[]\n  persistedToast: ToastInfo | null\n}\nexport const InternalToastsContext = createContext<InternalToastsContextType>({toasts: [], persistedToast: null})\n\nexport default ToastContext\n\nexport function ToastContextProvider({children}: ToastContextProviderType) {\n  const [toasts, setToasts] = useSafeState<ToastInfo[]>([])\n  const [persistedToast, setPersistedToast] = useState<ToastInfo | null>(null)\n  const {safeSetTimeout} = useSafeTimeout()\n\n  const addToast = useCallback(\n    function (toast: ToastInfo) {\n      setToasts([...toasts, toast])\n      safeSetTimeout(() => setToasts(toasts.slice(1)), TOAST_SHOW_TIME)\n    },\n    [toasts, safeSetTimeout, setToasts],\n  )\n\n  const addPersistedToast = useCallback(\n    function (toast: ToastInfo) {\n      setPersistedToast(toast)\n    },\n    [setPersistedToast],\n  )\n\n  const clearPersistedToast = useCallback(\n    function () {\n      setPersistedToast(null)\n    },\n    [setPersistedToast],\n  )\n\n  const contextValue = useMemo(() => {\n    return {addToast, addPersistedToast, clearPersistedToast}\n  }, [addPersistedToast, addToast, clearPersistedToast])\n\n  const internalToastsContext = useMemo(() => {\n    return {toasts, persistedToast}\n  }, [toasts, persistedToast])\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      <InternalToastsContext.Provider value={internalToastsContext}>{children}</InternalToastsContext.Provider>\n    </ToastContext.Provider>\n  )\n}\n\nexport function useToastContext() {\n  return useContext(ToastContext)\n}\n\ntry{ ToastContext.displayName ||= 'ToastContext' } catch {}\ntry{ InternalToastsContext.displayName ||= 'InternalToastsContext' } catch {}\ntry{ ToastContextProvider.displayName ||= 'ToastContextProvider' } catch {}","import {useContext} from 'react'\nimport {InternalToastsContext, TOAST_SHOW_TIME} from './ToastContext'\nimport {Toast} from './Toast'\n\n// Renders all toasts including the persisted toast. Likely you'll only want to include this one in a React app, in a\n// place common to all pages.\n/**\n * ⚠️ Warning: Usage of this component is discouraged by the accessibility team as\n * {@link https://github.com/github/engineering/discussions/3313 toasts are a behavior identified as a high-risk pattern}\n * within GitHub.\n * {@link https://github.com/github/accessibility/issues/4414 Reasons why toasts are a high-risk pattern}.\n */\nexport function Toasts() {\n  const {toasts, persistedToast} = useContext(InternalToastsContext)\n\n  return (\n    <>\n      {toasts.map((toastInfo, index) => (\n        <Toast\n          message={toastInfo.message}\n          icon={toastInfo.icon}\n          key={index}\n          timeToLive={TOAST_SHOW_TIME}\n          type={toastInfo.type}\n          role={toastInfo.role}\n        />\n      ))}\n      {persistedToast && (\n        <Toast\n          message={persistedToast.message}\n          icon={persistedToast.icon}\n          type={persistedToast.type}\n          role={persistedToast.role}\n        />\n      )}\n    </>\n  )\n}\n\ntry{ Toasts.displayName ||= 'Toasts' } catch {}","import {useLayoutEffect} from 'react'\nimport {IS_BROWSER} from '@github-ui/ssr-utils'\n\n/**\n * @package\n *\n * Prefer `useClientValue` from `@github-ui/use-client-value` or `useLayoutEffect` from React. This hook exists\n * to support an optimization to avoid unnecessary re-paints after hydration and should not be used to measure DOM\n * elements or other browser-only values.\n *\n * An SSR-Friendly wrapper around `useLayoutEffect` that will not run on the server and so will not\n * trigger the React warning about calling `useLayoutEffect` on the server.\n */\nexport function useHydratedEffect(effect: React.EffectCallback, deps?: React.DependencyList | undefined) {\n  if (IS_BROWSER) {\n    // A bit of a hack!\n    // We want to avoid the React warning about calling `useLayoutEffect` on the server. But we also want to\n    // keep the linter from yelling because it thinks this is a conditional hook call. `useLayoutEffect` only runs on\n    // the client anyways, otherwise none of this would be a good idea.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(effect, deps)\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\nimport {useCallback, useRef} from 'react'\n\n/**\n * Hook for determining whether a component is still mounted.\n *\n * Use this to guard side-effects of asynchronous operations (fetches,\n * promises) that may complete after a component has been unmounted.\n *\n * Example:\n *\n *      const isMounted = useIsMounted();\n *      const [value, setHidden] = useHidden(true);\n *\n *      setTimeout(() => {\n *          if (isMounted()) {\n *              setHidden(true);\n *          }\n *      }, 1000);\n *\n */\nexport default function useIsMounted() {\n  const mountedRef = useRef(false)\n  const isMounted = useCallback(() => mountedRef.current, [])\n\n  useHydratedEffect(() => {\n    mountedRef.current = true\n\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n","import useIsMounted from '@github-ui/use-is-mounted'\nimport {useCallback, useState} from 'react'\n\nfunction useSafeState<T = undefined>(): [T | undefined, React.Dispatch<React.SetStateAction<T | undefined>>]\nfunction useSafeState<T>(initialState: T | (() => T)): [T, React.Dispatch<React.SetStateAction<T>>]\n\nfunction useSafeState<T>(initialState?: T | (() => T)) {\n  const isMounted = useIsMounted()\n  const [state, setState] = useState(initialState)\n\n  const setSafeState = useCallback(\n    (value: React.SetStateAction<T | undefined>) => {\n      if (isMounted()) {\n        setState(value)\n      }\n    },\n    [isMounted],\n  )\n\n  return [state, setSafeState]\n}\n\nexport default useSafeState\n","import {useMemo, type PropsWithChildren} from 'react'\nimport {AppContext, type AppContextType} from './app-context'\n\nexport function AppContextProvider({routes, history, children}: PropsWithChildren<AppContextType>) {\n  const appContextProviderValue = useMemo(() => ({routes, history}), [routes, history])\n  return <AppContext.Provider value={appContextProviderValue}>{children}</AppContext.Provider>\n}\n\ntry{ AppContextProvider.displayName ||= 'AppContextProvider' } catch {}","import {useEffect, useState} from 'react'\n\nconst document = globalThis.document as Document | undefined\n\nexport interface ColorModeOptions {\n  colorMode?: string\n  lightTheme: string\n  darkTheme: string\n}\n\nfunction getSchemeFromMode(mode?: string) {\n  switch (mode) {\n    case 'light':\n      return 'day'\n    case 'dark':\n      return 'night'\n    default:\n      return 'auto'\n  }\n}\n\nfunction getColorModes(options: ColorModeOptions | DOMStringMap) {\n  const mode = options.colorMode\n\n  return {\n    colorMode: getSchemeFromMode(mode),\n    dayScheme: options.lightTheme,\n    nightScheme: options.darkTheme,\n  } as const\n}\n\nlet ssrOptions: ColorModeOptions | undefined\n\nexport function setColorModeOptions(options: ColorModeOptions) {\n  ssrOptions = options\n}\n\nfunction useColorModesSSR() {\n  return getColorModes(ssrOptions || {})\n}\n\nfunction useColorModes() {\n  const {documentElement} = document!\n  // eslint-disable-next-line github/no-dataset\n  const [colorMode, setColorMode] = useState(() => getColorModes(documentElement.dataset))\n\n  useEffect(() => {\n    // Update color modes any time color mode attributes change on the base html document element\n    // eslint-disable-next-line github/no-dataset\n    const observer = new MutationObserver(() => setColorMode(getColorModes(documentElement.dataset)))\n\n    observer.observe(documentElement, {\n      attributes: true,\n      attributeFilter: ['data-color-mode', 'data-light-theme', 'data-dark-theme'],\n    })\n\n    return () => observer.disconnect()\n  }, [documentElement])\n\n  return colorMode\n}\n\nexport default document ? useColorModes : useColorModesSSR\n","import type {ReactNode} from 'react'\nimport {RenderPhaseProvider} from '@github-ui/render-phase-provider'\nimport {ThemeProvider} from '@primer/react'\nimport useColorModes from './use-color-modes'\nimport {ToastContextProvider} from '@github-ui/toast'\nimport {AnalyticsProvider} from '@github-ui/analytics-provider'\n\ninterface Props {\n  appName: string\n  children?: ReactNode\n  wasServerRendered: boolean\n}\n\nconst metadata = {}\n\n/**\n * This component provides the _base_ context for both apps and partials.\n * It should provide everything needed to render with styles, themes, and i18n.\n */\nexport function BaseProviders({appName, children, wasServerRendered}: Props) {\n  const {colorMode, dayScheme, nightScheme} = useColorModes()\n\n  return (\n    <RenderPhaseProvider wasServerRendered={wasServerRendered}>\n      <AnalyticsProvider appName={appName} category=\"\" metadata={metadata}>\n        <ThemeProvider colorMode={colorMode} dayScheme={dayScheme} nightScheme={nightScheme} preventSSRMismatch>\n          <ToastContextProvider>{children}</ToastContextProvider>\n        </ThemeProvider>\n      </AnalyticsProvider>\n    </RenderPhaseProvider>\n  )\n}\n\ntry{ BaseProviders.displayName ||= 'BaseProviders' } catch {}","import {useToastContext} from '@github-ui/toast'\nimport {useEffect} from 'react'\n\nexport function SSRErrorToast() {\n  const {addToast} = useToastContext()\n\n  useEffect(() => {\n    addToast({\n      type: 'error',\n      message: 'SSR failed, see console for error details',\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return null\n}\n\ntry{ SSRErrorToast.displayName ||= 'SSRErrorToast' } catch {}","import {Toasts} from '@github-ui/toast'\nimport {SSRErrorToast} from './SSRErrorToast'\n\n// This is a container for common UI that should be rendered in all React UIs, including full-page apps and partials.\n// Please be very conservative in adding functionality here, as it will affect the bundle size of every page on the\n// site.\nexport function CommonElements({ssrError}: {ssrError: boolean}) {\n  return (\n    <>\n      <Toasts />\n      {ssrError && <SSRErrorToast />}\n    </>\n  )\n}\n\ntry{ CommonElements.displayName ||= 'CommonElements' } catch {}","import {target} from '@github/catalyst'\nimport {createRoot, hydrateRoot} from 'react-dom/client'\nimport type {createRoot as createRootType, hydrateRoot as hydrateRootType, Root} from 'react-dom/client'\nimport React from 'react'\nimport ReactProfilingMode from '@github-ui/react-profiling-mode'\n\ntype ReactDOM = {\n  createRoot: typeof createRootType\n  hydrateRoot: typeof hydrateRootType\n}\n\nexport abstract class ReactBaseElement<T> extends HTMLElement {\n  @target embeddedData: HTMLScriptElement | undefined\n  @target ssrError: HTMLScriptElement | undefined\n  @target reactRoot: HTMLElement\n  private root: Root | undefined\n\n  abstract nameAttribute: string\n  abstract getReactNode(embeddedData: T): Promise<React.ReactNode>\n\n  protected get name() {\n    return this.getAttribute(this.nameAttribute) as string\n  }\n\n  private get embeddedDataText() {\n    const text = this.embeddedData?.textContent\n\n    if (!text) {\n      throw new Error(`No embedded data provided for react element ${this.name}`)\n    }\n\n    return text\n  }\n\n  get hasSSRContent() {\n    return this.getAttribute('data-ssr') === 'true'\n  }\n\n  connectedCallback() {\n    this.renderReact()\n  }\n\n  disconnectedCallback() {\n    this.root?.unmount()\n    this.root = undefined\n  }\n\n  private async renderReact() {\n    let reactDom: ReactDOM = {\n      createRoot,\n      hydrateRoot,\n    }\n\n    // Override the react-dom import if we're in profiling mode\n    if (ReactProfilingMode.isEnabled()) {\n      reactDom = await this.getReactDomWithProfiling()\n    }\n\n    const embeddedData = JSON.parse(this.embeddedDataText) as T\n    const ssrErrorText = this.ssrError?.textContent\n    const node = await this.getReactNode(embeddedData)\n    const baseNode = <React.StrictMode>{node}</React.StrictMode>\n\n    if (ssrErrorText) {\n      this.logSSRError(ssrErrorText)\n    }\n\n    if (this.hasSSRContent) {\n      /**\n       * Styled-components automatically looks for style tags to hydrate on first page load, but will not detect them\n       * if they are added after the initial page load. This causes a hydration error because React isn't expecting\n       * a style tag within the app. To work around this, we need to manually move the style tags to the head before\n       * hydrating the app.\n       *\n       * During hydration, styled-components will create a new style tag which matches the one we moved to the head.\n       * This means that after hydration, we can safely remove the style tag we manually moved to the head.\n       */\n      const styles = this.querySelector('style[data-styled=\"true\"]')\n      if (styles) document.head.appendChild(styles)\n\n      // Hydrate the react app\n      // onRecoverableError is disabled until we have a react version with this fix in:\n      // https://github.com/facebook/react/pull/25692\n\n      this.root = reactDom.hydrateRoot(this.reactRoot, baseNode, {onRecoverableError: () => {}})\n\n      // Remove the manually moved style tag after hydration\n      if (styles) {\n        // Wait until things are idle to remove the style tag. If we do it immediately, we can cause a flash of unstyled content.\n        requestIdleCallback(() => {\n          // styles could have already been removed by Turbo if a navigation happens quickly. Only remove it from the DOM if it's still there.\n          styles.parentElement?.removeChild(styles)\n        })\n      }\n    } else {\n      this.root = reactDom.createRoot(this.reactRoot)\n      this.root.render(baseNode)\n    }\n\n    this.classList.add('loaded')\n  }\n\n  private getReactDomWithProfiling() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return import('react-dom/profiling') as any as Promise<ReactDOM>\n  }\n\n  private logSSRError(ssrErrorText: string) {\n    const error = JSON.parse(ssrErrorText) as PlatformJavascriptError\n    const stacktrace = parseFailbotStacktrace(error)\n    // eslint-disable-next-line no-console\n    console.error('Error During Alloy SSR:', `${error.type}: ${error.value}\\n`, error, stacktrace)\n  }\n}\n\nfunction parseFailbotStacktrace(error: PlatformJavascriptError) {\n  if (!error.stacktrace) return ''\n  let prefix = '\\n '\n  const stack = error.stacktrace.map((frame: PlatformStackframe) => {\n    const {function: func, filename, lineno, colno} = frame\n    const line = `${prefix} at ${func} (${filename}:${lineno}:${colno})`\n    prefix = ' '\n    return line\n  })\n  return stack.join('\\n')\n}\n","import {useState, createContext, type ReactNode} from 'react'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {useHydratedEffect} from '@github-ui/use-hydrated-effect'\n\nexport const enum RenderPhase {\n  ServerRender = 'ServerRender',\n  ClientHydrate = 'ClientHydrate',\n  ClientRender = 'ClientRender',\n}\n\nexport const RenderPhaseContext = createContext<RenderPhase>(RenderPhase.ClientRender)\n\nexport function RenderPhaseProvider({wasServerRendered, children}: {wasServerRendered: boolean; children: ReactNode}) {\n  const [renderPhase, setRenderPhase] = useState<RenderPhase>(() => {\n    if (IS_SERVER) {\n      return RenderPhase.ServerRender\n    }\n    if (wasServerRendered) {\n      return RenderPhase.ClientHydrate\n    }\n    return RenderPhase.ClientRender\n  })\n\n  useHydratedEffect(() => {\n    if (renderPhase === RenderPhase.ClientRender) return\n    setRenderPhase(RenderPhase.ClientRender)\n  }, [renderPhase])\n\n  return <RenderPhaseContext.Provider value={renderPhase}>{children}</RenderPhaseContext.Provider>\n}\n\ntry{ RenderPhaseContext.displayName ||= 'RenderPhaseContext' } catch {}\ntry{ RenderPhaseProvider.displayName ||= 'RenderPhaseProvider' } catch {}"],"names":["AnalyticsProvider","children","appName","category","metadata","value","useMemo","AnalyticsContext","Provider","displayName","createContext","noop","AppContext","createBrowserHistory","options","listener","history","routerCreateBrowserHistory","v5Compat","blockers","ignoreNextHistoryUpdate","doIfUnblocked","fn","length","blocker","retry","listen","update","action","Action","Pop","delta","go","location","createHref","to","createURL","encodeLocation","push","state","replace","newListener","undefined","block","filter","b","DeferredRegistry","register","name","registration","entry","registrationEntries","resolve","promise","Promise","getRegistration","Deferred","constructor","getItem","setItem","removeItem","safeStorage","REACT_PROFILING_ENABLED","enable","disable","isEnabled","typeClass","info","success","error","typeIcon","InfoIcon","CheckIcon","StopIcon","Toast","message","timeToLive","icon","type","role","isVisible","setIsVisible","React","safeSetTimeout","useSafeTimeout","useEffect","Portal","div","className","id","data-testid","span","ToastContext","addToast","addPersistedToast","clearPersistedToast","InternalToastsContext","toasts","persistedToast","ToastContextProvider","setToasts","useSafeState","setPersistedToast","useState","useCallback","toast","slice","contextValue","internalToastsContext","useToastContext","useContext","Toasts","map","toastInfo","index","useHydratedEffect","effect","deps","IS_BROWSER","useLayoutEffect","useIsMounted","mountedRef","useRef","isMounted","current","initialState","setState","setSafeState","AppContextProvider","routes","appContextProviderValue","ssrOptions","document","globalThis","getColorModes","mode","colorMode","getSchemeFromMode","dayScheme","lightTheme","nightScheme","darkTheme","documentElement","setColorMode","dataset","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","BaseProviders","wasServerRendered","useColorModes","RenderPhaseProvider","ThemeProvider","preventSSRMismatch","SSRErrorToast","CommonElements","ssrError","ReactBaseElement","HTMLElement","getAttribute","nameAttribute","embeddedDataText","text","embeddedData","textContent","hasSSRContent","connectedCallback","renderReact","disconnectedCallback","root","unmount","reactDom","createRoot","hydrateRoot","ReactProfilingMode","getReactDomWithProfiling","JSON","parse","ssrErrorText","node","getReactNode","baseNode","logSSRError","styles","querySelector","head","appendChild","reactRoot","onRecoverableError","requestIdleCallback","parentElement","removeChild","render","classList","add","stacktrace","parseFailbotStacktrace","prefix","stack","function","func","filename","lineno","colno","frame","line","join","console","target","RenderPhase","RenderPhaseContext","renderPhase","setRenderPhase","IS_SERVER"],"sourceRoot":""}