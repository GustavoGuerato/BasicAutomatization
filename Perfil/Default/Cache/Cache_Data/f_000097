{"version":3,"file":"app_assets_modules_github_blob-anchor_ts-app_assets_modules_github_filter-sort_ts-app_assets_-681869-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/blob-anchor.ts","app/assets/modules/github/filter-sort.ts","app/assets/modules/github/iterables.ts","app/assets/modules/github/fuzzy-filter.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/code-nav/code-navigation-info.ts","ui/packages/code-nav/code-symbol.ts","ui/packages/code-nav/get-match.ts","ui/packages/code-nav/symbol-result-converter.ts","ui/packages/failbot/failbot.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts","ui/packages/verified-fetch/verified-fetch.ts"],"sourcesContent":["export interface BlobOffset {\n  // Line number\n  // Lines start at 1.\n  line: number\n\n  // Optional column number.\n  // Like lines, columns are 1-indexed.\n  column: number | null\n}\n\nexport interface BlobRange {\n  // Starting offset of range.\n  start: BlobOffset\n\n  // End offset of range.\n  // End offset may be the same as the start. This indicates a collapsed range.\n  // Should always be initialized to a value that is equal or greater than the\n  // start range such the range is always in ascending order. Reversed ranges\n  // have undefined behavior.\n  end: BlobOffset\n}\n\n// Inverse of `formatBlobRange`.\n//\n// Examples\n//\n//   parseBlobRange(\"#L3\")\n//   // => {start: {line: 3}}\n//\n//   parseBlobRange(\"L3-L5\")\n//   // => {start: {line: 3}, end: {line: 5}}\n//\n//   parseBlobRange(\"\")\n//   // => null\nexport function parseBlobRange(str: string): BlobRange | undefined {\n  const lines = str.match(/#?(?:L)(\\d+)((?:C)(\\d+))?/g)\n  if (!lines) {\n    return\n  } else if (lines.length === 1) {\n    const offset = parseBlobOffset(lines[0])\n    if (!offset) return\n    return Object.freeze({start: offset, end: offset})\n  } else if (lines.length === 2) {\n    const startOffset = parseBlobOffset(lines[0])\n    const endOffset = parseBlobOffset(lines[1]!)\n    if (!startOffset || !endOffset) return\n\n    return ascendingBlobRange(\n      Object.freeze({\n        start: startOffset,\n        end: endOffset,\n      }),\n    )\n  } else {\n    return\n  }\n}\n\n// Inverse of `parseBlobRange`.\n//\n// Examples\n//\n//   formatBlobRange({start: {line: 3}})\n//   // => \"L3\"\n//\n//   formatBlobRange({start: {line: 3}, end: {line: 5}})\n//   // => \"L3-L5\"\n//\n//   formatBlobRange({start: {line: 3, column: 1}, end: {line: 5, column: 5}})\n//   // => \"L3C1-L5C5\"\n//\n//   formatBlobRange({start: {line: 3, column: 1}, end: {line: 5,}})\n//   // => \"L3C1-L5\"\nexport function formatBlobRange(blobRange: BlobRange): string {\n  const {start, end} = ascendingBlobRange(blobRange)\n\n  if (start.column != null && end.column != null) {\n    return `L${start.line}C${start.column}-L${end.line}C${end.column}`\n  } else if (start.column != null) {\n    return `L${start.line}C${start.column}-L${end.line}`\n  } else if (end.column != null) {\n    return `L${start.line}-L${end.line}C${end.column}`\n  } else if (start.line === end.line) {\n    return `L${start.line}`\n  } else {\n    return `L${start.line}-L${end.line}`\n  }\n}\n\n// Returns a String containing the file prefix with trailing dash.\n//\n// Examples\n//\n//   parseAnchorPrefix(\"#file-zshrc-L3\")\n//   // => \"file-zshrc-\"\n//\n//   parseAnchorPrefix(\"file-zshrc-L3-L5\")\n//   // => \"file-zshrc-\"\n//\n//   parseAnchorPrefix(\"\")\n//   // => \"\"\nfunction parseAnchorPrefix(str: string): string {\n  const match = str.length < 5000 && str.match(/(file-.+?-)L\\d+?/i)\n  return match ? match[1]! : ''\n}\n\nexport type AnchorInfo = {\n  blobRange: BlobRange\n  anchorPrefix: string\n}\n\n// Examples\n//\n//   parseFileAnchor(\"#file-zshrc-L3\")\n//   // => { blobRange: {start: {line: 3}}, anchorPrefix: \"file-zshrc-\" }\n//\n//   parseFileAnchor(\"file-zshrc-L3-L5\")\n//   // => { blobRange: {start: {line: 3}, end: {line: 5}}, anchorPrefix: \"file-zshrc-\" }\n//\n//   parseFileAnchor(\"\")\n//   // => { blobRange: null, anchorPrefix: undefined }\nexport function parseFileAnchor(str: string): AnchorInfo {\n  const blobRange = parseBlobRange(str)!\n  const anchorPrefix = parseAnchorPrefix(str)\n  return {blobRange, anchorPrefix}\n}\n\n// Formats line number range pair as an anchor String.\n//\n// Examples\n//\n//   formatBlobRangeAnchor({blobRange: {start: {line: 3}}, anchorPrefix: \"\"})\n//   // => \"#L3\"\n//\n//   formatBlobRangeAnchor({blobRange: {start: {line: 3}}, anchorPrefix: \"file-zshrc-\"})\n//   // => \"#file-zshrc-L3\"\n//\n//   formatBlobRangeAnchor({blobRange: {start: {line: 3}, end: {line: 5}}, anchorPrefix: \"\"})\n//   // => \"#L3-L5\"\n//\n//   formatBlobRangeAnchor({blobRange: {start: {line: 3, column: 1}, end: {line: 5, column: 5}}, anchorPrefix: \"\"})\n//   // => \"#L3C1-L5C5\"\n//\n//   formatBlobRangeAnchor({blobRange: {start: {line: 3}, end: {line: 5}}, anchorPrefix: \"file-zshrc-\"})\n//   // => \"#file-zshrc-L3-L5\"\n//\n//   formatBlobRangeAnchor({blobRange: null, anchorPrefix: \"\"})\n//   // => \"#\"\n//\n//   formatBlobRangeAnchor({blobRange: null, anchorPrefix: \"file-zshrc-\"})\n//   // => \"#\"\nexport function formatBlobRangeAnchor({anchorPrefix, blobRange}: AnchorInfo): string {\n  if (!blobRange) return '#'\n  return `#${anchorPrefix}${formatBlobRange(blobRange)}`\n}\n\nfunction parseBlobOffset(str: string): BlobOffset | null {\n  const lineMatch = str.match(/L(\\d+)/)\n  const columnMatch = str.match(/C(\\d+)/)\n  if (lineMatch) {\n    return Object.freeze({\n      line: parseInt(lineMatch[1]!),\n      column: columnMatch ? parseInt(columnMatch[1]!) : null,\n    })\n  } else {\n    return null\n  }\n}\n\nexport function DOMRangeFromBlob(\n  blobRange: BlobRange,\n  getLineElement: (line: number) => Node | null,\n): Range | undefined {\n  const [startContainer, _startOffset] = findRangeOffset(blobRange.start, true, getLineElement)\n  const [endContainer, _endOffset] = findRangeOffset(blobRange.end, false, getLineElement)\n  if (!startContainer || !endContainer) return\n\n  // Treat -1 as full line selection\n  let startOffset = _startOffset\n  let endOffset = _endOffset\n  if (startOffset === -1) startOffset = 0\n  if (endOffset === -1) endOffset = endContainer.childNodes.length\n  if (!startContainer.ownerDocument) throw new Error(`DOMRange needs to be inside document`)\n\n  const range = startContainer.ownerDocument.createRange()\n  range.setStart(startContainer, startOffset)\n  range.setEnd(endContainer, endOffset)\n  return range\n}\n\nfunction findRangeOffset(\n  offset: BlobOffset,\n  lookAhead: boolean,\n  getLineElement: (n: number) => Node | null,\n): [Node | null, number] {\n  const error: [null, number] = [null, 0]\n\n  const lineElement = getLineElement(offset.line)\n  if (!lineElement) return error\n\n  if (offset.column == null) {\n    return [lineElement, -1]\n  }\n\n  let column = offset.column - 1\n\n  const textNodes = getAllTextNodes(lineElement)\n  for (let i = 0; i < textNodes.length; i++) {\n    const textNode = textNodes[i]!\n\n    // TODO: length might be buggy with emoji\n    const nextC = column - (textNode.textContent || '').length\n\n    if (nextC === 0) {\n      const nextTextNode = textNodes[i + 1]\n      if (lookAhead && nextTextNode) {\n        return [nextTextNode, 0]\n      } else {\n        return [textNode, column]\n      }\n    } else if (nextC < 0) {\n      return [textNode, column]\n    }\n\n    column = nextC\n  }\n\n  return error\n}\n\n// Get a flat list of text nodes in depth first order.\nfunction getAllTextNodes(el: Node): Node[] {\n  if (el.nodeType === Node.TEXT_NODE) {\n    return [el]\n  }\n  if (!el.childNodes || !el.childNodes.length) return []\n  let list: Node[] = []\n  for (const node of el.childNodes) {\n    list = list.concat(getAllTextNodes(node))\n  }\n  return list\n}\n\n// Sorts range start and end offsets to be in ascending order.\nfunction ascendingBlobRange(range: BlobRange): BlobRange {\n  const offsets = [range.start, range.end]\n  offsets.sort(compareBlobOffsets)\n\n  if (offsets[0] === range.start && offsets[1] === range.end) {\n    return range\n  } else {\n    return Object.freeze({\n      start: offsets[0]!,\n      end: offsets[1]!,\n    })\n  }\n}\n\n// Compare line offsets. May be used with Array.sort\nfunction compareBlobOffsets(a: BlobOffset, b: BlobOffset): number {\n  if (a.line === b.line && a.column === b.column) {\n    return 0\n  } else if (a.line === b.line && typeof a.column === 'number' && typeof b.column === 'number') {\n    return a.column - b.column\n  } else {\n    return a.line - b.line\n  }\n}\n","import {filterMap} from './iterables'\n\ntype Comparator<T> = (a: T, b: T) => number\n\nexport function filterSort<T, K>(items: T[], map: (item: T) => K | null | undefined, compare: Comparator<K>): T[] {\n  const sortKey = (item: T): [T, K] | null => {\n    const key = map(item)\n    return key != null ? [item, key] : null\n  }\n  return [...filterMap(items, sortKey)].sort((a, b) => compare(a[1], b[1])).map(([item]) => item)\n}\n","export function* filterMap<T, U>(items: T[], map: (item: T) => U | null | undefined): Iterable<U> {\n  for (const item of items) {\n    const value = map(item)\n    if (value != null) {\n      yield value\n    }\n  }\n}\n","// Example\n// ```js\n//     fuzzyScore(\"foo.html\", \"foo\")\n//     // => 0.6458333333333334\n// ```\n//\n// ```js\n//     // Compute re once\n//     re = fuzzyRegexp(\"foo\")\n//     fuzzyScore(\"foo.html\", re)\n//     fuzzyScore(\"bar.html\", re)\n//     // => 0.6458333333333334\n// ```\n//\n// Returns a number between 0 and 1. 0 being the worst match and 1\n// being an exact match.\n// You can change the `prefixBonusWeight` variable to alter ordering.\n// Currently fuzzy search for the labels picker uses a weaker prefix bonus to weight heavier full word matches.\nexport function fuzzyScore(string: string, query: string, prefixBonusWeight = 0.1): number {\n  let score = stringScore(string, query, prefixBonusWeight)\n  if (score && query.indexOf('/') === -1) {\n    const basename = string.substring(string.lastIndexOf('/') + 1)\n    score += stringScore(basename, query, prefixBonusWeight)\n  }\n  return score\n}\n\n// Create a regexp that can be used to fuzzy match a given string. Any\n// special regexp characters in the input string will be escaped\n// correctly.\n//\n// A query of \"bar\" becomes /(.*)(b)([^a]*?)(a)([^r]*?)(r)(.*?)/.\n//\n// /\n//  (.*)     whatever's before the first b\n//  (b)      grab the first b of bar\n//  ([^a]*?) take everything up to the a of bar\n//  (a)      take the a of bar\n//  ([^r]*?) take everything up to the r of bar\n//  (r)      take the r of bar\n//  (.*?)    take the rest of the string\n// /\nexport function fuzzyRegexp(query: string): RegExp {\n  const chars = query.toLowerCase().split('')\n\n  let regex = ''\n\n  for (let i = 0; i < chars.length; i++) {\n    const char = chars[i]!\n    // must escape these chars so we match literals\n    const c = char.replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n    if (i === 0) {\n      // for the first we want to greedily match anything, which pushes\n      // the first match as late as possible in the string\n      regex += `(.*)(${c})`\n    } else {\n      regex += `([^${c}]*?)(${c})`\n    }\n  }\n  return new RegExp(`${regex}(.*?)$`, 'i')\n}\n\nexport function fuzzyHighlightElement(content: Element, text?: string, textRe?: RegExp): void {\n  if (text) {\n    const matches = content.innerHTML.trim().match(textRe || fuzzyRegexp(text))\n    if (!matches) return\n\n    let open = false\n    const html = []\n    for (let i = 1; i < matches.length; ++i) {\n      const m = matches[i]\n      if (!m) continue\n\n      if (i % 2 === 0) {\n        if (!open) {\n          // eslint-disable-next-line github/unescaped-html-literal\n          html.push('<mark>')\n          open = true\n        }\n      } else if (open) {\n        html.push('</mark>')\n        open = false\n      }\n      html.push(m)\n    }\n    content.innerHTML = html.join('')\n  } else {\n    const html = content.innerHTML.trim()\n    const clean = html.replace(/<\\/?mark>/g, '')\n    if (html !== clean) {\n      content.innerHTML = clean\n    }\n  }\n}\n\nconst wordSeparators = new Set([' ', '-', '_'])\n\n// string_score.js: Quicksilver-like string scoring algorithm.\n//  https://raw.github.com/joshaven/string_score/master/coffee/string_score.coffee\n//\n// Copyright (C) 2009-2011 Joshaven Potter <yourtech@gmail.com>\n// Copyright (C) 2010-2011 Yesudeep Mangalapilly <yesudeep@gmail.com>\n// MIT license: http://www.opensource.org/licenses/mit-license.php\n//\n// A string score implementation.\nfunction stringScore(originalString: string, abbreviation: string, prefixBonusWeight = 0.1): number {\n  let string = originalString\n  if (string === abbreviation) {\n    return 1.0\n  }\n  const stringLength = string.length\n  let totalCharacterScore = 0.0\n  let shouldAwardCommonPrefixBonus = 0\n  for (let i = 0; i < abbreviation.length; i++) {\n    const c = abbreviation[i]!\n    const indexCLowercase = string.indexOf(c.toLowerCase())\n    const indexCUppercase = string.indexOf(c.toUpperCase())\n    const minIndex = Math.min(indexCLowercase, indexCUppercase)\n    const indexInString = minIndex > -1 ? minIndex : Math.max(indexCLowercase, indexCUppercase)\n    if (indexInString === -1) {\n      return 0.0\n    }\n    totalCharacterScore += 0.1\n    if (string[indexInString] === c) {\n      totalCharacterScore += 0.1\n    }\n    if (indexInString === 0) {\n      totalCharacterScore += 0.9 - prefixBonusWeight\n      if (i === 0) {\n        shouldAwardCommonPrefixBonus = 1\n      }\n    }\n    if (wordSeparators.has(string.charAt(indexInString - 1))) {\n      totalCharacterScore += 0.9 - prefixBonusWeight\n    }\n    string = string.substring(indexInString + 1, stringLength)\n  }\n  const abbreviationLength = abbreviation.length\n  const abbreviationScore = totalCharacterScore / abbreviationLength\n  let finalScore = (abbreviationScore * (abbreviationLength / stringLength) + abbreviationScore) / 2\n  if (shouldAwardCommonPrefixBonus && finalScore + prefixBonusWeight < 1) {\n    finalScore += prefixBonusWeight\n  }\n  return finalScore\n}\n\nexport type TextScore = {score: number; text: string}\nexport function compare(a: TextScore, b: TextScore): -1 | 0 | 1 {\n  if (a.score > b.score) {\n    return -1\n  } else if (a.score < b.score) {\n    return 1\n  } else if (a.text < b.text) {\n    return -1\n  } else if (a.text > b.text) {\n    return 1\n  } else {\n    return 0\n  }\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","import type {Repository} from '@github-ui/current-repository'\nimport {codeNavigationPath} from '@github-ui/paths'\nimport {verifiedFetchJSON} from '@github-ui/verified-fetch'\n\nimport type {RefInfo} from '@github-ui/repos-types'\nimport type {BlackbirdSymbol, StylingDirectivesDocument} from '@github-ui/code-view-types'\nimport type {\n  CodeNavBackendType,\n  CodeNavPromise,\n  CodeNavResultDetails,\n  SymbolTreeBuildingData,\n  TreeNode,\n} from './code-nav-types'\nimport {\n  CodeReference,\n  type CodeSymbol,\n  type DefinitionOrReference,\n  type Range,\n  SymbolKind,\n  SymbolSource,\n} from './code-symbol'\nimport {getMatchGenerator, type Matchable, symbolMatchable, textMatchable} from './get-match'\nimport {alephSymbolToCodeReference, alephSymbolToCodeSymbol, outlineSymbolToCodeSymbol} from './symbol-result-converter'\n\nconst SEARCH_RESULT_LIMIT = 200\n\nexport interface CodeSection {\n  startLine: number\n  endLine: number\n  collapsed: boolean\n  index: number\n  level: number\n}\n\nexport class CodeNavigationInfo {\n  repo: Repository\n  refInfo: RefInfo\n  language: string\n  path: string\n  loggedIn: boolean\n  blobLines: string[]\n  symbols: CodeSymbol[]\n  lineIndexedSymbols: {[line: number]: CodeSymbol} = {}\n  isPlain: boolean\n\n  symbolTree: TreeNode[]\n  stylingDirectives: StylingDirectivesDocument | undefined\n  setLoading: (loading: boolean) => void\n  codeSections: Map<number, CodeSection[]>\n  lineToSectionMap: Map<number, CodeSection[]>\n\n  constructor(\n    repo: Repository,\n    refInfo: RefInfo,\n    path: string,\n    loggedIn: boolean,\n    rawLines: string[],\n    symbols: BlackbirdSymbol[],\n    stylingDirectives: StylingDirectivesDocument | undefined,\n    language: string,\n    isPlain: boolean,\n    setLoading: (loading: boolean) => void,\n  ) {\n    this.setLoading = setLoading\n    this.setLoading(true)\n    this.repo = repo\n    this.refInfo = refInfo\n    this.path = path\n    this.loggedIn = loggedIn\n    this.language = language\n\n    this.blobLines = rawLines\n    this.stylingDirectives = stylingDirectives\n    this.isPlain = isPlain\n    this.symbols = this.initSymbols(symbols)\n\n    this.initSymbolTree()\n    this.initCodeSections()\n    this.setLoading(false)\n  }\n\n  initCodeSections() {\n    const m = new Map()\n    const lineToSectionMap = new Map()\n    for (let i = 0; i < this.symbols.length; i++) {\n      //we don't want to deal with applying sticky if it is going to be a 2 line long sticky section\n      if (this.symbols[i]!.lineNumber < this.symbols[i]!.extent.end.line - 2) {\n        const section = {\n          startLine: this.symbols[i]!.lineNumber,\n          endLine: this.symbols[i]!.extent.end.line,\n          index: i,\n          collapsed: false,\n          level: this.symbols[i]!.depth,\n        }\n        if (m.has(section.startLine)) {\n          const tempArray = m.get(section.startLine)\n          tempArray.push(section)\n          m.set(section.startLine, tempArray)\n        } else {\n          m.set(section.startLine, [section])\n        }\n        if (m.has(section.endLine)) {\n          const tempArray = m.get(section.endLine)\n          tempArray.push(section)\n          m.set(section.endLine, tempArray)\n        } else {\n          m.set(section.endLine, [section])\n        }\n\n        //don't include the start lines or end lines because they're in the other map\n        for (let j = section.startLine + 1; j < section.endLine; j++) {\n          if (lineToSectionMap.has(j)) {\n            const tempArray = lineToSectionMap.get(j)\n            tempArray.push(section)\n            lineToSectionMap.set(j, tempArray)\n          } else {\n            lineToSectionMap.set(j, [section])\n          }\n        }\n      }\n    }\n\n    this.lineToSectionMap = lineToSectionMap\n    this.codeSections = m\n  }\n\n  initSymbols(symbols: BlackbirdSymbol[]) {\n    return symbols.map(outlineSymbol => {\n      const snippet = this.blobLines[outlineSymbol.identUtf16.start.lineNumber] || ''\n      const codeSymbol = outlineSymbolToCodeSymbol(outlineSymbol, snippet, {\n        stylingDirectives: this.stylingDirectives,\n        repo: this.repo,\n        refInfo: this.refInfo,\n        path: this.path,\n      })\n\n      this.lineIndexedSymbols[codeSymbol.lineNumber] = codeSymbol\n\n      return codeSymbol\n    })\n  }\n\n  getBlobLine(line: number) {\n    return this.blobLines[line] || ''\n  }\n\n  getSymbolOnLine(lineNumber: number): CodeSymbol | undefined {\n    return this.lineIndexedSymbols[lineNumber]\n  }\n\n  initSymbolTree() {\n    if (this.symbols) {\n      const tempParents: CodeSymbol[] = []\n      const symbolTree: SymbolTreeBuildingData[] = this.symbols\n        .filter(s => s.kind.fullName !== 'field')\n        .map(symbol => {\n          let depth = 0\n          for (let i = tempParents.length - 1; i >= 0; i--) {\n            const parentSymbol = tempParents[i]!\n            if (isAfterSymbol(symbol, parentSymbol)) {\n              tempParents.pop()\n            } else {\n              depth = tempParents.length\n              break\n            }\n          }\n          tempParents.push(symbol)\n          symbol.setSymbolDepth(depth)\n          return {symbol, depth}\n        })\n      this.symbolTree = []\n\n      for (let index = 0; index < symbolTree.length; index++) {\n        const symbol = symbolTree[index]!\n        if (index + 1 < symbolTree.length) {\n          const nextSymbol = symbolTree[index + 1]!\n          if (nextSymbol.depth > symbol.depth) {\n            const symbolChildren = buildSymbolTreeChildren(symbolTree, index)\n            index += determineTotalNumberOfChildren(symbolChildren)\n            this.symbolTree.push({symbol: symbol.symbol, isParent: true, children: symbolChildren})\n            continue\n          }\n        }\n        this.symbolTree.push({symbol: symbol.symbol, isParent: false, children: []})\n      }\n    }\n  }\n\n  createReferences(matches: Range[]): CodeReference[] {\n    return matches.map(match => {\n      const reference = new CodeReference({\n        ident: match,\n        repo: this.repo,\n        refInfo: this.refInfo,\n        path: this.path,\n        isPlain: this.isPlain,\n        source: SymbolSource.BLOB_CONTENT,\n      })\n      reference.setSnippet(\n        undefined,\n        this.stylingDirectives?.[match.start.line],\n        this.blobLines[match.start.line]!,\n        undefined,\n      )\n      return reference\n    })\n  }\n\n  getReferencesToSymbol(symbolName: string): CodeReference[] {\n    //TODO: figure out loading once this is async\n    const ranges = searchInBlobContent(this.blobLines, symbolMatchable(symbolName))\n    return this.createReferences(ranges)\n  }\n\n  getReferencesToSearch(term: string): CodeReference[] {\n    //TODO: figure out loading once this is async\n    const ranges = searchInBlobContent(this.blobLines, textMatchable(term))\n    return this.createReferences(ranges)\n  }\n\n  getDefinitionsAndReferences(text: string, row: number, column: number): CodeNavPromise {\n    this.setLoading(true)\n\n    const defs = (async () => {\n      const selectedSymbol = this.getSymbolOnLine(row + 1) // row is 0-indexed, line numbers are 1-indexed\n      if (selectedSymbol && selectedSymbol.name === text) {\n        return {\n          definitions: [selectedSymbol],\n          backend: 'search' as CodeNavBackendType,\n        }\n      }\n\n      let [definitions, backend] = await this.getAlephDefinitions(text, row, column, this.loggedIn)\n\n      // Prefer locally-defined symbols over search-based definitions, unless precise results are available.\n      if (backend === 'search') {\n        const localDefinitions = this.getLocalDefinitions(text)\n        if (localDefinitions.length > 0) {\n          definitions = localDefinitions\n        }\n\n        // If we get a definition from the current file, suppress all the others\n        const localDefinition = definitions.find(d => d.path === this.path && d.repo === this.repo)\n        if (localDefinition) {\n          definitions = [localDefinition]\n        }\n        backend = 'search'\n      } else {\n        const localDefinitionsForKindFallback = this.getLocalDefinitions(text, true)\n        for (const definition of definitions) {\n          if (definition.kind.fullName === '' && definition.name === text) {\n            //local definitions always returns an array with a single item if it returns anything\n            //instead of empty string we can choose a default kind to display here when aleph and local have nothing,\n            //but for now keeping as empty string\n            definition.kind = localDefinitionsForKindFallback[0]\n              ? localDefinitionsForKindFallback[0].kind\n              : new SymbolKind({kind: ''})\n          }\n        }\n      }\n      return {\n        definitions,\n        backend,\n      }\n    })()\n\n    const localRefs = (async () => {\n      const {definitions} = await defs\n      const definitionLines = definitions.map(d => d.lineNumber)\n      const references = this.getReferencesToSymbol(text).filter(r => !definitionLines.includes(r.lineNumber))\n\n      return {\n        references,\n        backend: 'search' as CodeNavBackendType,\n      }\n    })()\n\n    const alephRefs = (async () => {\n      let symbolKind = 'SYMBOL_KIND_UNKNOWN'\n      const sym = this.getSymbolOnLine(row + 1) // row is 0-indexed, line numbers are 1-indexed\n      if (sym) {\n        // If we have this in the symbol outline (from blackbird analysis): use it.\n        symbolKind = sym.kind.enumStringVal\n      } else {\n        // Otherwise, try to use the first def\n        const {definitions} = await defs\n        symbolKind = definitions[0]?.kind?.enumStringVal || symbolKind\n      }\n      return this.getAlephReferences(text, row, column, this.loggedIn, symbolKind)\n    })()\n\n    const crossRefs = (async () => {\n      const [references, backend] = await alephRefs\n      return {\n        references,\n        backend,\n      }\n    })()\n\n    // Exclude definitions from references\n    return {\n      definitions: defs,\n      localReferences: localRefs,\n      crossReferences: crossRefs,\n      setLoading: this.setLoading,\n    }\n  }\n\n  getLocalDefinitions(text: string, getSymbolKind = false): CodeSymbol[] {\n    let bestRank = 9\n    let definitions: CodeSymbol[] = []\n    for (const sym of this.symbols) {\n      if (sym.name === text && (sym.kind.rank < bestRank || getSymbolKind)) {\n        bestRank = sym.kind.rank\n        definitions = [sym]\n      }\n    }\n\n    return definitions\n  }\n\n  async getAlephDefinitions(\n    text: string,\n    row: number,\n    column: number,\n    loggedIn: boolean,\n  ): Promise<[CodeSymbol[], CodeNavBackendType]> {\n    let backend: CodeNavBackendType = 'search'\n    if ((text === '' && row === -1 && column === -1) || !loggedIn) {\n      return [[], backend]\n    }\n\n    const definitionsUrl = codeNavigationPath({\n      repo: this.repo,\n      type: 'definition',\n      q: text,\n      language: this.language,\n      row,\n      column,\n      ref: this.refInfo.name,\n      path: this.path,\n      codeNavContext: 'BLOB_VIEW',\n      symbolKind: null,\n    })\n\n    let response: Response\n    try {\n      response = await verifiedFetchJSON(definitionsUrl)\n    } catch (e) {\n      return [[], backend]\n    }\n\n    if (!response.ok) {\n      return [[], backend]\n    }\n\n    let resultDetails: CodeNavResultDetails\n    try {\n      resultDetails = await response.json()\n    } catch (e) {\n      return [[], backend]\n    }\n\n    backend = parseAlephBackendType(resultDetails.backend) ?? 'search'\n\n    const definitions = resultDetails.payload\n      .flatMap(refs => refs)\n      .map(alephSymbol => {\n        return alephSymbolToCodeSymbol(alephSymbol, {\n          stylingDirectives: this.stylingDirectives,\n          repo: this.repo,\n          refInfo: this.refInfo,\n          path: this.path,\n          symbol: text,\n          backend,\n        })\n      })\n\n    return [definitions, backend]\n  }\n\n  async getAlephReferences(\n    text: string,\n    row: number,\n    column: number,\n    loggedIn: boolean,\n    symbolKind: string,\n  ): Promise<[CodeReference[], CodeNavBackendType]> {\n    let backend: CodeNavBackendType = 'search'\n    if ((text === '' && row === -1 && column === -1) || !loggedIn) {\n      return [[], backend]\n    }\n\n    const referencesUrl = codeNavigationPath({\n      repo: this.repo,\n      type: 'references',\n      q: text,\n      language: this.language,\n      row,\n      column,\n      ref: this.refInfo.name,\n      path: this.path,\n      codeNavContext: 'BLOB_VIEW',\n      symbolKind,\n    })\n\n    const partialResponse = await verifiedFetchJSON(referencesUrl)\n    if (!partialResponse.ok) {\n      return [[], backend]\n    }\n\n    let response: CodeNavResultDetails\n    try {\n      response = await partialResponse.json()\n    } catch (e) {\n      return [[], backend]\n    }\n\n    backend = parseAlephBackendType(response.backend) ?? 'search'\n\n    const observedLines = new Set<number>()\n    const isCheckedLine = (line: number) => {\n      if (observedLines.has(line)) {\n        return true\n      } else {\n        observedLines.add(line)\n        return false\n      }\n    }\n\n    const references = response.payload\n      .flatMap(refs => refs)\n      .reduce<CodeReference[]>((results, alephSymbol) => {\n        if (alephSymbol.path === this.path) {\n          return results\n        }\n        const reference = alephSymbolToCodeReference(alephSymbol, {\n          stylingDirectives: this.stylingDirectives,\n          repo: this.repo,\n          refInfo: this.refInfo,\n          path: this.path,\n          backend,\n        })\n\n        if (isCheckedLine(reference.lineNumber)) {\n          return results\n        }\n\n        results.push(reference)\n        return results\n      }, [])\n      // For some reason, aleph returns references out of order, so we need to sort\n      // them by line number.\n      .sort((a, b) => a.lineNumber - b.lineNumber)\n\n    return [references, backend]\n  }\n}\n\nexport function parseAlephBackendType(fromAleph: string): CodeNavBackendType | null {\n  switch (fromAleph) {\n    case 'ALEPH_PRECISE':\n    case 'ALEPH_PRECISE_PREVIEW':\n    case 'ALEPH_PRECISE_DEVELOPMENT':\n      return 'precise'\n    case 'BLACKBIRD':\n      return 'search'\n    default:\n      return null\n  }\n}\n\nexport function isAfterSymbol(symbolA: CodeSymbol, symbolB: CodeSymbol): boolean {\n  return symbolA.extent.start.line === symbolB.extent.end.line\n    ? symbolA.extent.start.column > symbolB.extent.end.column\n    : symbolA.extent.start.line > symbolB.extent.end.line\n}\n\nfunction buildSymbolTreeChildren(symbolTree: SymbolTreeBuildingData[], currentIndex: number) {\n  const symbolChildren: TreeNode[] = []\n  const symbol = symbolTree[currentIndex]!\n  for (let i = currentIndex + 1; i < symbolTree.length; i++) {\n    const tempSymbol = symbolTree[i]!\n    if (tempSymbol.depth > symbol.depth) {\n      const tempChildren = buildSymbolTreeChildren(symbolTree, i)\n      i += determineTotalNumberOfChildren(tempChildren)\n      symbolChildren.push({\n        symbol: tempSymbol.symbol,\n        children: tempChildren,\n        isParent: tempChildren.length > 0,\n      })\n    } else {\n      break\n    }\n  }\n  return symbolChildren\n}\n\nfunction determineTotalNumberOfChildren(node: TreeNode[]) {\n  let total = node.length\n  for (let i = 0; i < node.length; i++) {\n    const currNode = node[i]!\n    if (currNode.isParent) {\n      total += determineTotalNumberOfChildren(currNode.children)\n    }\n  }\n\n  return total\n}\n\nexport function searchInBlobContent(lines: string[], m: Matchable): Range[] {\n  const output: Range[] = []\n  const matches = getMatchGenerator(m, lines)\n  let match = matches.next()\n\n  while (!match.done && output.length < SEARCH_RESULT_LIMIT) {\n    const {column, columnEnd, line} = match.value\n    output.push({\n      start: {\n        line,\n        column,\n      },\n      end: {\n        line,\n        column: columnEnd,\n      },\n    })\n\n    match = matches.next()\n  }\n  return output\n}\n\nexport function searchInBlobIncrementally(\n  codeRefs: DefinitionOrReference[],\n  lines: string[],\n  matchable: Matchable,\n): Range[] {\n  if (codeRefs.length === 0) {\n    // In the incremental search we are narrowing results. If there are no results for a less specific search, there won't be any further matches.\n    return []\n  }\n\n  const startedAtResultLimit = codeRefs.length >= SEARCH_RESULT_LIMIT\n\n  const checkedLine: Record<number, true> = {}\n  const searchResults = codeRefs.reduce<Range[]>((output, ref) => {\n    if (checkedLine[ref.ident.start.line]) {\n      return output\n    }\n\n    checkedLine[ref.ident.start.line] = true\n    const matches = getMatchGenerator(matchable, [lines[ref.ident.start.line]!])\n    let match = matches.next()\n    while (!match.done && output.length < SEARCH_RESULT_LIMIT) {\n      const {column, columnEnd} = match.value\n      output.push({\n        start: {\n          line: ref.ident.start.line,\n          column,\n        },\n        end: {\n          line: ref.ident.start.line,\n          column: columnEnd,\n        },\n      })\n      match = matches.next()\n    }\n\n    return output\n  }, [])\n\n  // Add new results from the raw blob. Note: this is only necessary if we dropped the number\n  // of results below the maximum in the previous phase!\n  if (searchResults.length < SEARCH_RESULT_LIMIT && startedAtResultLimit) {\n    const startFromLine = codeRefs[codeRefs.length - 1]!.ident.start.line\n    const matchesInRawBlob = getMatchGenerator(matchable, lines, startFromLine)\n    let match = matchesInRawBlob.next()\n    while (!match.done && searchResults.length < SEARCH_RESULT_LIMIT) {\n      const {line, column, columnEnd} = match.value\n      searchResults.push({\n        start: {\n          line,\n          column,\n        },\n        end: {\n          line,\n          column: columnEnd,\n        },\n      })\n      match = matchesInRawBlob.next()\n    }\n  }\n\n  return searchResults\n}\n","import type {Repository} from '@github-ui/current-repository'\nimport type {StylingDirectivesLine} from '@github-ui/code-view-types'\nimport {blamePath, blobPath} from '@github-ui/paths'\nimport type {RefInfo} from '@github-ui/repos-types'\nimport type {SafeHTMLString} from '@github-ui/safe-html'\n\ninterface Position {\n  line: number\n  column: number\n}\n\nexport interface Range {\n  start: Position\n  end: Position\n}\n\nexport enum SymbolSource {\n  BLACKBIRD_SEARCH = 'blackbird-search',\n  BLACKBIRD_ANALYSIS = 'blackbird-analysis',\n  ALEPH_PRECISE = 'aleph-precise',\n  BLOB_CONTENT = 'blob-content-search',\n}\n\nexport class SymbolKind {\n  enumStringVal: string\n  fullName: string\n  shortName: string\n  plColor: string\n  rank: number\n\n  constructor({kind}: {kind: string | number}) {\n    const [fullName, enumStringVal] = convertBlackbirdSymbolKind(kind)\n\n    this.enumStringVal = enumStringVal\n    this.fullName = fullName\n    this.shortName = symbolKindShortName(fullName)\n    this.plColor = symbolKindColor(fullName)\n    this.rank = symbolKindRank(fullName)\n  }\n}\n\n// Convert a blackbird SymbolKind enum value to a display friendly string.\n// Source of truth: https://github.com/github/hydro-schemas/blob/main/proto/hydro/schemas/blackbird/v0/entities/symbol_kind.proto\nfunction convertBlackbirdSymbolKind(kind: string | number): [string, string] {\n  if (typeof kind === 'string') {\n    const name = kind.toString().replace('SYMBOL_KIND_', '').replace(/_DEF$/, '').replace(/_REF$/, '').toLowerCase()\n    if (kind.startsWith('SYMBOL_KIND_')) {\n      return [name, kind.toString()]\n    } else if (kind !== '' && kind !== 'unknown') {\n      let enumVal = `SYMBOL_KIND_${kind.toUpperCase()}`\n      if (kind === 'call') {\n        enumVal += '_REF'\n      } else {\n        enumVal += '_DEF'\n      }\n      return [kind, enumVal]\n    }\n  }\n\n  return ['unknown', 'SYMBOL_KIND_UNKNOWN']\n}\n\nexport function symbolKindShortName(fullName: string) {\n  switch (fullName) {\n    case 'function':\n    case 'method':\n      return 'func'\n    case 'interface':\n      return 'intf'\n    case 'implementation':\n      return 'impl'\n    case 'constant':\n      return 'const'\n    case 'module':\n      return 'mod'\n\n    case 'h1':\n    case 'h2':\n    case 'h3':\n    case 'h4':\n    case 'h5':\n    case 'h6':\n    case 'class':\n    case 'call':\n    case 'enum':\n    case 'field':\n    case 'macro':\n    case 'struct':\n    case 'trait':\n    case 'type':\n    case 'union':\n      return fullName\n\n    default:\n      return fullName.substring(0, 1)\n  }\n}\n\nfunction symbolKindColor(fullName: string) {\n  switch (fullName) {\n    case 'function':\n    case 'method':\n      return 'prettylights.syntax.entity'\n    case 'class':\n    case 'enum':\n    case 'struct':\n    case 'union':\n      return 'prettylights.syntax.constant'\n    case 'interface':\n    case 'trait':\n      return 'prettylights.syntax.keyword'\n    case 'constant':\n    case 'field':\n    case 'enum member':\n      return 'prettylights.syntax.variable'\n    case 'implementation':\n      return 'prettylights.syntax.string'\n\n    default:\n      return 'prettylights.syntax.entity'\n  }\n}\n\n// Relative rank of symbol kinds. Lower is higher relevance.\nfunction symbolKindRank(kind: string): number {\n  return (\n    {\n      class: 1,\n      struct: 1,\n      enum: 1,\n      type: 2,\n      interface: 3,\n      trait: 3,\n      module: 4,\n      implementation: 5,\n      function: 6,\n      method: 7,\n      call: 8,\n      field: 9,\n    }[kind] || 9\n  )\n}\n\nexport class CodeSymbol {\n  ident: Range\n  extent: Range\n\n  kind: SymbolKind\n  name: string\n  fullyQualifiedName: string\n  depth: number\n\n  repo: Repository\n  refInfo: RefInfo\n  path: string\n\n  // Snippet for the line the symbol is defined on\n  highlightedText: SafeHTMLString | undefined\n  stylingDirectives: StylingDirectivesLine | undefined\n  bodyText: string\n  leadingWhitespace: number | undefined\n\n  source: SymbolSource\n\n  constructor({\n    ident,\n    extent,\n    kind,\n    name,\n    fullyQualifiedName,\n    source,\n  }: {\n    ident: Range\n    extent: Range\n    kind: string | number\n    name: string\n    fullyQualifiedName: string\n    source: SymbolSource\n  }) {\n    this.ident = ident\n    this.extent = extent\n    this.kind = new SymbolKind({kind})\n    this.name = name\n    this.fullyQualifiedName = fullyQualifiedName\n    this.source = source\n  }\n\n  setSymbolDepth(depth: number) {\n    this.depth = depth\n  }\n  setFileInfo(repo: Repository, refInfo: RefInfo, path: string) {\n    this.repo = repo\n    this.refInfo = refInfo\n    this.path = path\n  }\n\n  get lineNumber() {\n    return this.ident.start.line + 1\n  }\n\n  setSnippet(\n    highlightedText: SafeHTMLString | undefined,\n    stylingDirectives: StylingDirectivesLine | undefined,\n    bodyText: string,\n    leadingWhitespace: number | undefined,\n  ) {\n    this.highlightedText = highlightedText\n    this.stylingDirectives = stylingDirectives\n    this.bodyText = bodyText\n    this.leadingWhitespace = leadingWhitespace\n  }\n\n  href(): string {\n    if (!this.repo || !this.refInfo || !this.path) {\n      return `/${window.location.pathname}#L${this.lineNumber}`\n    }\n\n    const commitish =\n      this.source === SymbolSource.BLACKBIRD_SEARCH\n        ? this.repo.defaultBranch\n        : this.refInfo.name || this.refInfo.currentOid\n\n    return blobPath({\n      owner: this.repo.ownerLogin,\n      repo: this.repo.name,\n      commitish,\n      filePath: this.path,\n      lineNumber: this.lineNumber,\n    })\n  }\n\n  // Generates a string which uniquely identifies the file this reference comes from\n  pathKey(): string {\n    return `${this.repo.ownerLogin}/${this.repo.name}/${this.refInfo.currentOid}/${this.path}`\n  }\n}\n\nexport class CodeReference {\n  ident: Range\n  repo: Repository\n  refInfo: RefInfo\n  path: string\n  isPlain: boolean\n\n  // Snippet information for the line the reference is from\n  highlightedText: SafeHTMLString | undefined\n  stylingDirectives: StylingDirectivesLine | undefined\n  bodyText: string\n  source: SymbolSource\n  leadingWhitespace: number | undefined\n\n  constructor({\n    ident,\n    repo,\n    refInfo,\n    path,\n    isPlain,\n    source,\n  }: {\n    ident: Range\n    repo: Repository\n    refInfo: RefInfo\n    path: string\n    isPlain?: boolean\n    source: SymbolSource\n  }) {\n    this.ident = ident\n    this.repo = repo\n    this.refInfo = refInfo\n    this.path = path\n    this.isPlain = isPlain ?? false\n    this.source = source\n  }\n\n  get lineNumber() {\n    return this.ident.start.line + 1\n  }\n\n  href(blame: boolean): string {\n    if (!this.repo || !this.refInfo || !this.path) {\n      return `/${window.location.pathname}#L${this.lineNumber}`\n    }\n\n    const commitish =\n      this.source === SymbolSource.BLACKBIRD_SEARCH\n        ? this.repo.defaultBranch\n        : this.refInfo.name || this.refInfo.currentOid\n\n    const params = {\n      owner: this.repo.ownerLogin,\n      repo: this.repo.name,\n      commitish,\n      filePath: this.path,\n      lineNumber: this.lineNumber,\n      plain: this.isPlain ? 1 : undefined,\n    }\n\n    return blame ? blamePath(params) : blobPath(params)\n  }\n\n  setSnippet(\n    highlightedText: SafeHTMLString | undefined,\n    stylingDirectives: StylingDirectivesLine | undefined,\n    bodyText: string,\n    leadingWhitespace: number | undefined,\n  ) {\n    this.highlightedText = highlightedText\n    this.stylingDirectives = stylingDirectives\n    this.bodyText = bodyText\n    this.leadingWhitespace = leadingWhitespace\n  }\n\n  // Generates a string which uniquely identifies the file this reference comes from\n  pathKey(): string {\n    return `${this.repo.ownerLogin}/${this.repo.name}/${this.refInfo.currentOid}/${this.path}`\n  }\n}\n\nexport type DefinitionOrReference = CodeSymbol | CodeReference\n","/**\n * Lazy iterator that returns one match at a time\n * @param regex regular expression used for the search\n * @param text raw text blob\n * @param startFromLine line in the text blob indexed from 0\n */\n\nenum MatchableType {\n  Text,\n  Symbol,\n}\n\nexport interface Matchable {\n  kind: MatchableType\n  regexp: RegExp\n}\n\nexport function symbolMatchable(symbol: string) {\n  const escapedRegex = `(\\\\W|^)${symbol.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}(\\\\W|$)`\n  return {\n    kind: MatchableType.Symbol,\n    regexp: new RegExp(escapedRegex, 'g'),\n  }\n}\n\nexport function textMatchable(query: string) {\n  const escapedQuery = query.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n  return {\n    kind: MatchableType.Text,\n    regexp: new RegExp(escapedQuery, 'gi'),\n  }\n}\n\nexport function* getMatchGenerator(regex: Matchable, lines: string[], startFromLine = 0) {\n  for (let line = startFromLine; line < lines.length; line++) {\n    const snippet = lines[line]!\n\n    let match: RegExpExecArray | null\n\n    while ((match = regex.regexp.exec(snippet)) !== null) {\n      let matchContent = match[0]\n      let column = match.index\n\n      // Symbol matcher regex match leading whitespace, but don't actually include\n      // that in the match positions! This is necessary because regex\n      // lookbehinds aren't widely supported in browsers...\n      if (regex.kind === MatchableType.Symbol) {\n        if (matchContent.length > 0 && /\\W/.test(matchContent[0]!)) {\n          matchContent = matchContent.substring(1)\n          column += match[0].length - matchContent.length\n        }\n        if (matchContent.length > 0 && /\\W/.test(matchContent[matchContent.length - 1]!)) {\n          matchContent = matchContent.substring(0, matchContent.length - 1)\n        }\n      }\n\n      yield {\n        line,\n        column,\n        columnEnd: column + matchContent.length,\n        text: snippet,\n      }\n    }\n  }\n}\n","import type {Repository} from '@github-ui/current-repository'\n\nimport type {RefInfo} from '@github-ui/repos-types'\nimport type {BlackbirdSymbol, StylingDirectivesDocument} from '@github-ui/code-view-types'\nimport {CodeReference, CodeSymbol, SymbolSource} from './code-symbol'\nimport type {AlephSymbol, CodeNavBackendType} from './code-nav-types'\n\ninterface Options {\n  stylingDirectives: StylingDirectivesDocument | undefined\n  path: string\n  repo: Repository\n  refInfo: RefInfo\n}\n\ninterface AlephSymbolOptions extends Options {\n  backend: CodeNavBackendType\n}\n\nexport function outlineSymbolToCodeSymbol(\n  outlineSymbol: BlackbirdSymbol,\n  snippet: string,\n  {stylingDirectives, repo, refInfo, path}: Options,\n): CodeSymbol {\n  const {extentUtf16, identUtf16} = outlineSymbol\n\n  const codeSymbol = new CodeSymbol({\n    kind: outlineSymbol.kind,\n    fullyQualifiedName: outlineSymbol.fullyQualifiedName,\n    name: outlineSymbol.name,\n    extent: {\n      start: {line: extentUtf16.start.lineNumber, column: extentUtf16.start.utf16Col},\n      end: {line: extentUtf16.end.lineNumber, column: extentUtf16.end.utf16Col},\n    },\n    ident: {\n      start: {line: identUtf16.start.lineNumber, column: identUtf16.start.utf16Col},\n      end: {line: identUtf16.end.lineNumber, column: identUtf16.end.utf16Col},\n    },\n    source: SymbolSource.BLACKBIRD_ANALYSIS,\n  })\n\n  codeSymbol.setSnippet(undefined, stylingDirectives?.[identUtf16.start.lineNumber], snippet, undefined)\n  codeSymbol.setFileInfo(repo, refInfo, path)\n\n  return codeSymbol\n}\n\nexport function alephSymbolToCodeSymbol(\n  alephSymbol: AlephSymbol,\n  {symbol, refInfo, repo, path, backend}: AlephSymbolOptions & {symbol: string},\n): CodeSymbol {\n  const symbolStartIdx = alephSymbol.ident?.start?.character\n  const symbolEndIdx = alephSymbol.ident?.end?.character ?? alephSymbol.ident?.start?.character\n  const ident = {\n    start: {\n      line: alephSymbol.ident.start.line,\n      column: symbolStartIdx ? symbolStartIdx - alephSymbol.leadingWhitespace : 0,\n    },\n    end: {\n      line: alephSymbol.ident?.end?.line ?? alephSymbol.ident.start.line,\n      column: symbolEndIdx ? symbolEndIdx - alephSymbol.leadingWhitespace : 0,\n    },\n  }\n\n  const extentStartIdx = alephSymbol.extent?.start?.character\n  const extentEndIdx = alephSymbol.extent?.end?.character ?? alephSymbol.extent?.start?.character\n  const extent = {\n    start: {\n      line: alephSymbol.extent.start.line,\n      column: extentStartIdx ? extentStartIdx : 0,\n    },\n    end: {\n      line: alephSymbol.extent.end?.line ?? alephSymbol.extent.start.line,\n      column: extentEndIdx ? extentEndIdx : 0,\n    },\n  }\n\n  const codeSymbol = new CodeSymbol({\n    ident,\n    extent,\n    kind: alephSymbol.symbolKind,\n    name: symbol,\n    // I guess aleph doesn't support fully qualified names? Just use the name\n    fullyQualifiedName: symbol,\n    source: backend === 'search' ? SymbolSource.BLACKBIRD_SEARCH : SymbolSource.ALEPH_PRECISE,\n  })\n\n  if (alephSymbol.local) {\n    codeSymbol.setFileInfo(repo, refInfo, path)\n  } else if (alephSymbol.commitOid && alephSymbol.path) {\n    let symbolRefInfo = refInfo\n\n    if (alephSymbol.commitOid !== refInfo.currentOid) {\n      symbolRefInfo = {\n        name: '',\n        listCacheKey: alephSymbol.commitOid,\n        currentOid: alephSymbol.commitOid,\n        canEdit: false,\n      }\n    }\n\n    codeSymbol.setFileInfo(alephSymbol.repo ?? repo, symbolRefInfo, alephSymbol.path)\n  }\n\n  const whiteSpace = new Array(alephSymbol.leadingWhitespace).fill(' ').join('')\n  const firstLineWithWhiteSpace = whiteSpace + (alephSymbol.firstLine || '')\n  codeSymbol.setSnippet(alephSymbol.highlightedText, undefined, firstLineWithWhiteSpace, alephSymbol.leadingWhitespace)\n  return codeSymbol\n}\n\nexport function alephSymbolToCodeReference(\n  alephSymbol: AlephSymbol,\n  {refInfo, path, repo, backend}: AlephSymbolOptions,\n): CodeReference {\n  let symbolRefInfo = refInfo\n  let symbolPath = path\n\n  if (!alephSymbol.local && alephSymbol.commitOid && alephSymbol.path) {\n    symbolRefInfo = refInfo\n    symbolPath = alephSymbol.path\n\n    if (alephSymbol.commitOid !== refInfo.currentOid) {\n      symbolRefInfo = {\n        name: '',\n        listCacheKey: alephSymbol.commitOid,\n        currentOid: alephSymbol.commitOid,\n\n        // TODO: this is probably the wrong value sometimes... but we most\n        // likely won't read this field\n        canEdit: false,\n      }\n    }\n  }\n\n  const identStartSymbolIdx = alephSymbol.ident.start.character\n  const identEndSymbolIdx = alephSymbol.ident.end?.character\n  const codeReference = new CodeReference({\n    repo,\n    refInfo: symbolRefInfo,\n    path: symbolPath,\n    ident: {\n      start: {\n        line: alephSymbol.ident.start.line,\n        column: identStartSymbolIdx ? identStartSymbolIdx - alephSymbol.leadingWhitespace : 0,\n      },\n      end: {\n        line: alephSymbol.ident.end?.line || alephSymbol.ident.start.line,\n        column: identEndSymbolIdx ? identEndSymbolIdx - alephSymbol.leadingWhitespace : 0,\n      },\n    },\n    source: backend === 'search' ? SymbolSource.BLACKBIRD_SEARCH : SymbolSource.ALEPH_PRECISE,\n  })\n\n  const firstLineWithWhiteSpace =\n    new Array(alephSymbol.leadingWhitespace).fill(' ').join('') + (alephSymbol.firstLine || '')\n  codeReference.setSnippet(\n    alephSymbol.highlightedText,\n    undefined,\n    firstLineWithWhiteSpace,\n    alephSymbol.leadingWhitespace,\n  )\n  return codeReference\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {type: error.name, value: error.message, stacktrace: stacktrace(error)}\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ninterface GlobalThisWithMaybeTrustedTypes {\n  trustedTypes?: typeof tinyfill\n}\n\nconst registeredPolicies = new Map<string, GHTrustedTypePolicyOptions>()\n\nconst trustedTypes = (globalThis as GlobalThisWithMaybeTrustedTypes).trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = trustedTypes.createPolicy(name, rules)\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #pse-architecture if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n","/**\n * A Fetch function which will automatically add the correct headers for\n * making requests to GitHub application servers as long as the associated controller methods allow it.\n * Track down the associated controller method and confirm the controller includes\n * ApplicationController::VerifiedFetchDependency as well as `allow_verified_fetch only:`\n * to the relevant controller methods.\n *\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetch('/foo', {method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.text())\ntest.\n *     }\n */\nexport function verifiedFetch(path: string, init: RequestInit = {}): Promise<Response> {\n  if (path.match(/^(https?:|\\/\\/)/)) {\n    throw new Error('Can not make cross-origin requests from verifiedFetch')\n  }\n\n  const headers: HeadersInit = {\n    ...init.headers,\n    'GitHub-Verified-Fetch': 'true',\n    'X-Requested-With': 'XMLHttpRequest',\n  }\n\n  return fetch(path, {...init, headers})\n}\n\nexport interface JSONRequestInit extends Omit<RequestInit, 'body'> {\n  body?: unknown\n}\n\n/**\n * A Fetch function which will automatically add the correct headers for\n * making JSON requests\n *\n * Will also `JSON.stringify` the request body if provided.\n\n * ## Example\n *\n *     const onClick = async () => {\n *       const resp = await verifiedFetchJSON('/foo', {body: {foo: 'bar'}, method: 'POST'})\n *       if (resp.ok) console.log('The response was', await resp.json())\n *     }\n */\nexport function verifiedFetchJSON(path: string, init?: JSONRequestInit): Promise<Response> {\n  const initHeaders: HeadersInit = init?.headers ?? {}\n\n  const headers: HeadersInit = {\n    ...initHeaders,\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  }\n\n  const body = init?.body ? JSON.stringify(init.body) : undefined\n\n  return verifiedFetch(path, {...init, body, headers})\n}\n"],"names":["parseBlobRange","str","lines","match","length","offset","parseBlobOffset","Object","freeze","start","end","startOffset","endOffset","ascendingBlobRange","formatBlobRange","blobRange","column","line","parseFileAnchor","anchorPrefix","parseAnchorPrefix","formatBlobRangeAnchor","lineMatch","columnMatch","parseInt","DOMRangeFromBlob","getLineElement","startContainer","_startOffset","findRangeOffset","endContainer","_endOffset","childNodes","ownerDocument","range","createRange","setStart","setEnd","lookAhead","error","lineElement","textNodes","getAllTextNodes","el","nodeType","Node","TEXT_NODE","list","node","concat","i","textNode","nextC","textContent","nextTextNode","offsets","sort","compareBlobOffsets","a","b","filterSort","items","map","compare","filterMap","item","value","key","fuzzyScore","string","query","prefixBonusWeight","score","stringScore","indexOf","basename","substring","lastIndexOf","fuzzyHighlightElement","content","text","textRe","matches","innerHTML","trim","fuzzyRegexp","chars","toLowerCase","split","regex","char","c","replace","open","html","m","push","join","clean","wordSeparators","Set","originalString","abbreviation","stringLength","totalCharacterScore","shouldAwardCommonPrefixBonus","indexCLowercase","indexCUppercase","toUpperCase","minIndex","Math","min","indexInString","max","has","charAt","abbreviationLength","abbreviationScore","finalScore","queryLast","selector","document","querySelectorAll","requestUri","window","location","protocol","host","pagePathname","locationOverride","pathname","pageQuery","stripParams","search","extraParams","meta","names","CodeNavigationInfo","initCodeSections","Map","lineToSectionMap","symbols","lineNumber","extent","section","startLine","endLine","index","collapsed","level","depth","tempArray","get","set","j","codeSections","initSymbols","outlineSymbol","snippet","blobLines","identUtf16","codeSymbol","outlineSymbolToCodeSymbol","stylingDirectives","repo","refInfo","path","lineIndexedSymbols","getBlobLine","getSymbolOnLine","initSymbolTree","tempParents","symbolTree","filter","s","kind","fullName","symbol","parentSymbol","symbolA","symbolB","pop","setSymbolDepth","nextSymbol","symbolChildren","buildSymbolTreeChildren","currentIndex","tempSymbol","tempChildren","determineTotalNumberOfChildren","children","isParent","createReferences","reference","CodeReference","ident","isPlain","source","SymbolSource","BLOB_CONTENT","setSnippet","undefined","getReferencesToSymbol","symbolName","ranges","searchInBlobContent","symbolMatchable","getReferencesToSearch","term","textMatchable","getDefinitionsAndReferences","row","setLoading","defs","selectedSymbol","name","definitions","backend","getAlephDefinitions","loggedIn","localDefinitions","getLocalDefinitions","localDefinition","find","d","localDefinitionsForKindFallback","definition","SymbolKind","localRefs","definitionLines","references","r","includes","alephRefs","symbolKind","sym","enumStringVal","getAlephReferences","crossRefs","localReferences","crossReferences","getSymbolKind","bestRank","rank","response","resultDetails","definitionsUrl","codeNavigationPath","type","q","language","ref","codeNavContext","verifiedFetchJSON","e","ok","json","parseAlephBackendType","payload","flatMap","refs","alephSymbol","alephSymbolToCodeSymbol","referencesUrl","partialResponse","observedLines","isCheckedLine","add","reduce","results","alephSymbolToCodeReference","constructor","rawLines","fromAleph","total","currNode","output","getMatchGenerator","next","done","columnEnd","searchInBlobIncrementally","codeRefs","matchable","startedAtResultLimit","checkedLine","searchResults","startFromLine","matchesInRawBlob","convertBlackbirdSymbolKind","toString","startsWith","enumVal","shortName","symbolKindShortName","plColor","symbolKindColor","class","struct","enum","interface","trait","module","implementation","function","method","call","field","CodeSymbol","setFileInfo","highlightedText","bodyText","leadingWhitespace","href","commitish","defaultBranch","currentOid","blobPath","owner","ownerLogin","filePath","pathKey","fullyQualifiedName","blame","params","plain","blamePath","escapedRegex","regexp","escapedQuery","exec","matchContent","test","MatchableType","extentUtf16","utf16Col","BLACKBIRD_ANALYSIS","symbolStartIdx","character","symbolEndIdx","extentStartIdx","extentEndIdx","BLACKBIRD_SEARCH","ALEPH_PRECISE","local","commitOid","symbolRefInfo","listCacheKey","canEdit","whiteSpace","fill","firstLineWithWhiteSpace","firstLine","symbolPath","identStartSymbolIdx","identEndSymbolIdx","codeReference","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","isExpectedError","message","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","some","code","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","newError","stacktrace","report","errorContext","formatError","unloaded","isSupported","url","head","querySelector","stack","frame","extensions","filename","fetch","body","assign","sanitizedUrl","readyState","referrer","getSoftNavReferrer","timeSinceLoad","round","user","pageUser","bundler","ui","Boolean","parse","file","String","methodName","lineno","colno","login","clientId","getOrCreateClientId","ssrSafeWindow","addEventListener","BroadcastChannel","sharedWorkerErrorChannel","event","data","TrustedTypesPolicyError","trustedTypesPolicy","apply","policy","policyName","fallback","fallbackOnError","sanitize","silenceErrorReporting","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","Promise","resolve","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","err","slice","sendEvent","outputLength","sanitizedLength","executionTime","unimplemented","functionName","fallbacks","createHTML","createScript","createScriptURL","registeredPolicies","trustedTypes","createPolicy","rules","ghTrustedTypes","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn","verifiedFetch","init","headers","initHeaders","Accept"],"sourceRoot":""}