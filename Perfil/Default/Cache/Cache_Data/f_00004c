{"version":3,"file":"app_assets_modules_github_onfocus_ts-app_assets_modules_github_settings_actions-policy-form_t-6a1c83-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/onfocus.ts","app/assets/modules/github/settings/actions-policy-form.ts","app/assets/modules/github/settings/larger-runners-image.ts","app/assets/modules/github/settings/larger-runners-scaling.ts","app/assets/modules/github/settings/larger-runners-networking.ts","app/assets/modules/github/settings/security-analysis.ts","ui/packages/analytics-overrides/analytics-overrides.ts","ui/packages/details-dialog/details-dialog.ts","ui/packages/failbot/failbot.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/trusted-types-policies/server-x-safe-html.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/trusted-types-policies/parse-html.ts","ui/packages/parse-html/parse-html.ts","ui/packages/trusted-types-policies/policy.ts","ui/packages/trusted-types/trusted-types.ts"],"sourcesContent":["// React to elements receiving focus\n//\n// Often we need to apply some behavior to form elements when they start getting\n// interacted with. We could use `observe`, but that can be expensive if there\n// are many such elements on the page, and when we aren't actually interested in\n// those elements until they receive focus.\n//\n// This is a lightweight and preferred alternative to the family of methods\n// from `github/focused` module.\n//\n// Examples\n//\n//   onFocus('.js-widget', element => {\n//     // ...\n//   })\n\nimport SelectorSet from 'selector-set'\n\nlet initialized = false\nconst selectorSet: SelectorSet<(el: HTMLElement) => void> = new SelectorSet()\n\nfunction handleFocus(event: FocusEvent) {\n  const focused = event.target\n  if (focused instanceof HTMLElement && focused.nodeType !== Node.DOCUMENT_NODE) {\n    for (const match of selectorSet.matches(focused)) {\n      match.data.call(null, focused)\n    }\n  }\n}\n\nexport function onFocus(selector: string, fn: (el: HTMLElement) => unknown) {\n  if (!initialized) {\n    initialized = true\n    // We use the \"focus\" event in the capture phase because Firefox\n    // historically had a limitation with \"focusin\" not bubbling.\n    document.addEventListener('focus', handleFocus, true)\n  }\n  selectorSet.add(selector, fn)\n\n  if (document.activeElement instanceof HTMLElement && document.activeElement.matches(selector)) {\n    fn(document.activeElement)\n  }\n}\n\nexport function onKey(\n  eventType: 'keydown' | 'keypress' | 'keyup',\n  selector: string,\n  inputHandler: (event: KeyboardEvent) => unknown,\n) {\n  function blurHandler(event: Event) {\n    const currentTarget = event.currentTarget as HTMLElement\n    if (!currentTarget) return\n    currentTarget.removeEventListener(eventType, inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener(eventType, inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n\nexport function onInput(selector: string, inputHandler: EventListener) {\n  function blurHandler(event: Event) {\n    const {currentTarget} = event\n    if (!currentTarget) return\n\n    currentTarget.removeEventListener('input', inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener('input', inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n","import {controller, target} from '@github/catalyst'\n\n@controller\nclass ActionsPolicyFormElement extends HTMLElement {\n  @target specificOptions: HTMLElement\n  @target selectRadio: HTMLInputElement\n\n  connectedCallback() {\n    // In case user refreshes the page and the form saved state in Firefox\n    this.toggleSpecificOptions()\n  }\n\n  toggleSpecificOptions() {\n    if (this.selectRadio.checked) {\n      this.specificOptions.hidden = false\n    } else {\n      this.specificOptions.hidden = true\n    }\n  }\n}\n","import {attr, controller, target, targets} from '@github/catalyst'\nimport {ready} from '@github-ui/document-ready'\n\ntype RunnerPlatform = 'linux-x64' | 'win-x64' | 'custom'\ntype RunnerImageSource = 'Curated' | 'Marketplace' | 'Custom'\ntype RunnerImageId =\n  | 'codespaces-prebuild'\n  | 'ubuntu-latest'\n  | 'windows-latest'\n  | 'arm:avh_custom_runner:github'\n  | 'canonical:0001-com-ubuntu-server-focal:20_04-lts'\n  | 'microsoftwindowsserver:windowsserver:2022-datacenter'\n\n@controller\nclass RunnerImageElement extends HTMLElement {\n  @targets platforms: HTMLInputElement[]\n  @targets imageVersions: RunnerImageVersionElement[]\n  @targets selectedImageHints: RunnerSelectedImageHint[]\n  @target customImageUriInput: HTMLInputElement\n  @target machineSpecsDropdown: MachineSpecsDropdownElement\n  @target selectedImageSource: HTMLInputElement\n  @target customImageGenerationOptions: HTMLElement\n  @target persistentOsDiskCheckbox: HTMLInputElement\n  @targets imageContents: HTMLElement[]\n  @target bypassMaxGpuRunners: HTMLInputElement\n\n  async connectedCallback() {\n    // trigger 'selectRunnerPlatform' when page become ready to update visibility of machine specs elements\n    await ready\n    this.selectRunnerPlatform()\n\n    // prevent switching tabs on arrow key press. By default, it happens because input element is located inside \"tablist\"\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role#keyboard_interaction\n    this.customImageUriInput.onkeydown = (e: Event) => e.stopPropagation()\n  }\n\n  selectRunnerPlatform() {\n    const selectedPlatform = this.getSelectedPlatform()\n\n    this.updateImageTabContent(selectedPlatform)\n\n    this.customImageUriInput.required = selectedPlatform === 'custom'\n\n    const selectedImageVersion = this.getSelectedImageVersion(selectedPlatform)\n    if (!selectedImageVersion) {\n      return\n    }\n\n    this.updateSelectedImageHint(selectedImageVersion)\n    if (this.customImageGenerationOptions) {\n      this.updateCustomImageGenerationOptions(selectedImageVersion)\n    }\n    if (this.machineSpecsDropdown) {\n      this.machineSpecsDropdown.updateOptionsVisibility(selectedPlatform, selectedImageVersion)\n    }\n\n    this.selectedImageSource.value = selectedImageVersion.imageSource\n  }\n\n  getSelectedPlatform(): RunnerPlatform {\n    const selectedPlatform = this.platforms.find(platform => platform.checked)\n    if (selectedPlatform) {\n      return selectedPlatform.value as RunnerPlatform\n    }\n\n    return 'linux-x64'\n  }\n\n  getSelectedImageVersion(selectedPlatform: RunnerPlatform): RunnerImageVersionElement | null {\n    if (this.imageVersions.length === 0) {\n      return null\n    }\n\n    return (\n      this.imageVersions.find(imageVer => imageVer.imagePlatform === selectedPlatform && imageVer.checked) ??\n      this.imageVersions[0]!\n    )\n  }\n\n  updateImageTabContent(selectedPlatform: RunnerPlatform) {\n    const imageLabels = this.imageContents.map(c => c.getAttribute('data-image-label')!)\n\n    for (let i = 0; i < imageLabels.length; i++) {\n      this.imageContents[i]!.hidden = selectedPlatform !== imageLabels[i]\n    }\n  }\n\n  updateSelectedImageHint(selectedImageVersion: RunnerImageVersionElement) {\n    // we have multiple image hint elements because it is separate element for every platform tab (Linux and Windows)\n    for (const imageHintElement of this.selectedImageHints) {\n      imageHintElement.renderContent(selectedImageVersion)\n    }\n  }\n\n  // hide/clear image gen options if runner image id is not a base image; show otherwise\n  updateCustomImageGenerationOptions(imageVersion: RunnerImageVersionElement) {\n    const isBaseImage = this.isBaseImage(imageVersion.imageId)\n    this.customImageGenerationOptions.hidden = !isBaseImage\n\n    if (!isBaseImage) {\n      this.persistentOsDiskCheckbox.checked = false\n    }\n  }\n\n  isBaseImage(imageId: RunnerImageId): boolean {\n    return (\n      imageId === 'canonical:0001-com-ubuntu-server-focal:20_04-lts' ||\n      imageId === 'microsoftwindowsserver:windowsserver:2022-datacenter'\n    )\n  }\n\n  // Temporary hacky solution for updating GPU runners max limit before we implement the React version\n  // Issue: https://github.com/github/actions-larger-runners/issues/2514\n  // This hack is only needed while we are creating new runners,\n  // we do not use this during updating as we do not interact with this controller in the edit page\n  updateMaxLimit() {\n    const selectedMachineSpec = this.machineSpecsDropdown.getSelectedItem()\n\n    // MAX_GPU_RUNNERS_UPPER_LIMIT\n    const gpuRunnersMaxLimit = 20\n    // MAX_RUNNERS_UPPER_LIMIT\n    const runnersMaxLimit = 1000\n    const maxRunners: HTMLInputElement = document.querySelector(\"input[name='maximum_runners']\")!\n    const maxGpuTooHighErrorMessage: HTMLSpanElement = document.querySelector(\"span[id='max-gpu-runners-error']\")!\n    const maxTooHighErrorMessage: HTMLSpanElement = document.querySelector(\"span[id='max-runners-error']\")!\n    const minTooLowErrorMessage: HTMLSpanElement = document.querySelector(\"span[id='min-runners-error']\")!\n    const maxGroup = document.querySelector(\"div[id='max-group']\")!\n    const submitButton = document.querySelector<HTMLButtonElement>('.js-submit-custom-hosted-runner-button')!\n\n    if (!maxRunners) return\n\n    // Resetting errors\n    // Similar to resetMaxState in larger-runners-scaling.ts\n    maxGpuTooHighErrorMessage.hidden = true\n    maxTooHighErrorMessage.hidden = true\n    minTooLowErrorMessage.hidden = true\n    submitButton.disabled = false\n    maxGroup.classList.remove('errored')\n\n    if (selectedMachineSpec!.runnerType === 'gpu_optimized' && this.bypassMaxGpuRunners.value === 'false') {\n      // If it is a GPU Runner && the FF to bypass if OFF\n      // we will set the new max limit to 20\n      // and error out if customers have inputted something greater than the limit\n      maxRunners.max = gpuRunnersMaxLimit.toString()\n\n      if (parseInt(maxRunners.value) > gpuRunnersMaxLimit) {\n        maxGpuTooHighErrorMessage.hidden = false\n\n        submitButton.disabled = true\n        maxGroup.classList.add('errored')\n      }\n    } else {\n      // If it is not a GPU runner OR the FF is ON,\n      // Use the old limit which is 1000\n      maxRunners.max = runnersMaxLimit.toString()\n\n      if (parseInt(maxRunners.value) > runnersMaxLimit) {\n        maxTooHighErrorMessage.hidden = false\n\n        submitButton.disabled = true\n        maxGroup.classList.add('errored')\n      }\n    }\n  }\n}\n\n@controller\nclass MachineSpecsDropdownElement extends HTMLElement {\n  @targets tabs: MachineSpecsTabElement[]\n  @targets items: MachineSpecsItemElement[]\n  @target tabsHeader: HTMLElement\n\n  updateOptionsVisibility(platform: RunnerPlatform, imageVersion: RunnerImageVersionElement) {\n    // refresh visibility of machine specs elements\n    for (const item of this.items) {\n      item.setVisibility(platform, imageVersion)\n    }\n\n    // only show tabs with visible items\n    this.updateTabsVisibility()\n\n    // if no item is selected or it's not visible, select the first visible item\n    // the selected item might become hidden after the visibility refresh\n    let selectedItem = this.getSelectedItem()\n    if (!selectedItem || !selectedItem.visible) {\n      const defaultItem = this.getFirstVisibleItem()\n      defaultItem?.selectItem()\n      selectedItem = defaultItem\n    }\n\n    // make sure the tab with selected item is selected\n    if (selectedItem) {\n      this.selectTabByType(selectedItem.runnerType)\n    }\n  }\n\n  getSelectedItem(): MachineSpecsItemElement | undefined {\n    return this.items.find(item => item.checked)\n  }\n\n  private updateTabsVisibility() {\n    let numberVisibleTabs = 0\n    for (const tab of this.tabs) {\n      const shouldTabBeVisible = this.items.some(item => item.runnerType === tab.type && item.visible)\n      numberVisibleTabs += shouldTabBeVisible ? 1 : 0\n      tab.setVisibility(shouldTabBeVisible)\n    }\n\n    if (this.tabsHeader) {\n      this.tabsHeader.hidden = numberVisibleTabs < 2\n    }\n  }\n\n  private selectTabByType(type: string) {\n    const targetTab = this.tabs.find(tab => tab.type === type)\n    targetTab?.selectTab()\n  }\n\n  private getFirstVisibleItem(): MachineSpecsItemElement | undefined {\n    return this.items.find(item => item.visible)\n  }\n}\n\n@controller\nclass MachineSpecsTabElement extends HTMLElement {\n  @target clickArea: HTMLElement\n  @attr type: string\n\n  selectTab() {\n    this.clickArea.click()\n  }\n\n  setVisibility(visible: boolean) {\n    this.hidden = !visible\n  }\n}\n\n@controller\nclass MachineSpecsItemElement extends HTMLElement {\n  @target checkbox: HTMLInputElement\n\n  static attrPrefix = ''\n  @attr storageGb = 0\n  @attr runnerType: string\n\n  get checked(): boolean {\n    return this.checkbox.checked\n  }\n\n  get visible(): boolean {\n    return !this.hidden\n  }\n\n  selectItem() {\n    this.checkbox.click()\n  }\n\n  setVisibility(platform: RunnerPlatform, imageVersion: RunnerImageVersionElement) {\n    this.hidden = !this.shouldBeVisible(platform, imageVersion)\n  }\n\n  private shouldBeVisible(platform: RunnerPlatform, imageVersion: RunnerImageVersionElement): boolean {\n    if (platform === 'win-x64' || platform === 'linux-x64') {\n      if (this.runnerType === 'gpu_optimized' && imageVersion.imageSource === 'Curated') {\n        // Curated images don't play well with GPU SKUs so hide them\n        return false\n      }\n    }\n\n    // if SKU has less disk space than required by selected image, hide it\n    if (this.storageGb < imageVersion.sizeGb) {\n      return false\n    }\n\n    return true\n  }\n}\n\n@controller\nclass RunnerImageVersionElement extends HTMLElement {\n  @target checkbox: HTMLInputElement\n\n  static attrPrefix = ''\n  @attr sizeGb = 0\n  @attr imagePlatform: RunnerPlatform\n  @attr imageSource: RunnerImageSource\n  @attr imageId: RunnerImageId\n\n  get checked(): boolean {\n    return this.checkbox.checked\n  }\n}\n\n@controller\nclass RunnerSelectedImageHint extends HTMLElement {\n  renderContent(selectedImageVersion: RunnerImageVersionElement): void {\n    this.innerHTML = this.getContent(selectedImageVersion)\n  }\n\n  private getContent(selectedImageVersion: RunnerImageVersionElement): string {\n    let content = ''\n    if (selectedImageVersion.imageSource === 'Curated') {\n      const imageInfoUrl = this.getCuratedImageInfoUrl(selectedImageVersion)\n      content += `\n        <p class='text-small color-fg-muted'>\n          GitHub images are kept up to date and secure, containing all the tools you need to get started building and testing your applications. <a class=\"Link--inTextBlock\" href='${imageInfoUrl}'>Learn more about images.</a>\n        </p>\n      `\n\n      if (selectedImageVersion.imageId === 'ubuntu-latest' || selectedImageVersion.imageId === 'windows-latest') {\n        content += `\n          <p class=\"text-small color-fg-muted\">\n            \"Latest\" tag matches with standard GitHub-hosted runners latest tag for the images. <a class=\"Link--inTextBlock\" href='https://github.com/actions/runner-images#label-scheme'>Learn more about latest tags. </a>\n          </p>\n        `\n      }\n    } else if (selectedImageVersion.imageSource === 'Marketplace') {\n      content += `\n        <p class=\"text-small color-fg-muted\">\n          Partner images are created and managed by members of GitHub's Technology Partner Program. <a class=\"Link--inTextBlock\" href=\"https://github.com/actions/partner-runner-images\">Learn more about partner images.</a>\n        </p>\n      `\n    }\n\n    return content\n  }\n\n  private getCuratedImageInfoUrl(selectedImageVersion: RunnerImageVersionElement): string {\n    if (selectedImageVersion.imageId === 'codespaces-prebuild') {\n      return 'https://github.com/github/codespaces'\n    }\n\n    return 'https://github.com/actions/runner-images/releases'\n  }\n}\n","import {controller, target} from '@github/catalyst'\nimport {announceFromElement} from '@github-ui/aria-live'\n\nconst maxInput = document.querySelector(\"input[name='maximum_runners']\") as HTMLInputElement\n\n@controller\nclass RunnerScalingElement extends HTMLElement {\n  // Max runner input\n  @target maxInput: HTMLInputElement\n  @target maxGroup: HTMLElement\n  @target maxTooLowErrorMessage: HTMLElement\n  @target maxTooHighErrorMessage: HTMLElement\n  @target maxGpuTooHighErrorMessage: HTMLElement\n  @target maxNote: HTMLElement\n\n  disableSubmitButton() {\n    const submitButton = document.querySelector<HTMLButtonElement>('.js-submit-custom-hosted-runner-button')!\n    submitButton.disabled = true\n  }\n\n  enableSubmitButton() {\n    const submitButton = document.querySelector<HTMLButtonElement>('.js-submit-custom-hosted-runner-button')!\n    submitButton.disabled = false\n  }\n\n  validateMax() {\n    this.resetMaxState()\n\n    if (!this.maxInput.value) return\n\n    const maxValue: number = +this.maxInput.value\n\n    const maxInputUpperLimit = parseInt(maxInput.max)\n    const maxInputLowerLimit = parseInt(maxInput.min)\n\n    // MAX_GPU_RUNNERS_UPPER_LIMIT\n    const gpuRunnersMaxLimit = 20\n\n    // Maximum input is too low\n    if (maxValue < maxInputLowerLimit) {\n      this.maxGroup.classList.add('errored')\n      this.maxTooLowErrorMessage.hidden = false\n      announceFromElement(this.maxNote)\n      this.disableSubmitButton()\n      return\n    }\n\n    // Maximum input is too high\n    if (maxValue > maxInputUpperLimit) {\n      this.maxGroup.classList.add('errored')\n      if (maxInputUpperLimit === gpuRunnersMaxLimit) {\n        this.maxGpuTooHighErrorMessage.hidden = false\n        this.maxTooHighErrorMessage.hidden = true\n      } else {\n        this.maxGpuTooHighErrorMessage.hidden = true\n        this.maxTooHighErrorMessage.hidden = false\n      }\n      announceFromElement(this.maxNote)\n      this.disableSubmitButton()\n      return\n    }\n  }\n\n  resetMaxState() {\n    this.maxTooHighErrorMessage.hidden = true\n    this.maxTooLowErrorMessage.hidden = true\n    this.maxGpuTooHighErrorMessage.hidden = true\n    this.maxGroup.classList.remove('errored')\n    this.enableSubmitButton()\n  }\n}\n","import {attr, controller, target} from '@github/catalyst'\n\n@controller\nclass PublicIpElement extends HTMLElement {\n  @target checkbox: HTMLInputElement\n  @target description: HTMLDivElement\n  @target labelSection: HTMLDivElement\n\n  static attrPrefix = ''\n  @attr isAllowed = false\n\n  connectedCallback() {\n    this.isAllowed = this.hasAttribute('is-allowed')\n  }\n\n  checkboxChanged() {\n    const publicIpEnabled = this.checkbox.checked\n    const isAllowed = this.isAllowed\n    if (!isAllowed && !publicIpEnabled) {\n      this.checkbox.setAttribute('disabled', 'disabled')\n      this.description.classList.remove('color-fg-muted')\n      this.labelSection.classList.add('color-fg-subtle')\n    }\n  }\n}\n","import {controller, target} from '@github/catalyst'\nimport {requestSubmit} from '@github-ui/form-utils'\nimport type {ModalDialogElement} from '@primer/view-components/app/components/primer/alpha/modal_dialog'\n\n@controller\nclass AdvancedSecurityNewReposElement extends HTMLElement {\n  @target checkbox: HTMLFormElement\n  @target status: HTMLElement\n  @target dialog: ModalDialogElement\n  @target form: HTMLFormElement\n\n  // Handle the checkbox changing state\n  toggle(event: Event) {\n    if (this.checkbox.checked) {\n      // Show the dialog if they're enabling\n      // Hide the status indicator - it may be shown from a previous submission,\n      // but we don't want to give the impression that the current selection has\n      // been submitted yet.\n      this.status.hidden = true\n      this.dialog.show()\n      event.stopPropagation()\n    } else {\n      // For disable, just submit the form, but ensure the indicator is visible\n      this.status.hidden = false\n      requestSubmit(this.form)\n    }\n  }\n\n  // Handle the buttons in the confirmation dialog\n\n  confirm() {\n    this.status.hidden = false\n    requestSubmit(this.form)\n    this.dialog.open = false\n  }\n\n  // clear the checkbox if the dialog is closed by anything other\n  // than the confirm button (which won't fire this event)\n  close() {\n    this.checkbox.checked = false\n  }\n}\n","function queryLast<T extends Element>(selector: string): T | undefined {\n  const list = document.querySelectorAll<T>(selector)\n  if (list.length > 0) {\n    return list[list.length - 1]\n  }\n}\n\nfunction pagePathname() {\n  const locationOverride = queryLast<HTMLMetaElement>('meta[name=analytics-location]')\n  if (locationOverride) {\n    return locationOverride.content\n  } else {\n    return window.location.pathname\n  }\n}\n\nfunction pageQuery() {\n  const stripParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-query-strip]')\n  let search = ''\n\n  if (!stripParams) {\n    search = window.location.search\n  }\n\n  const extraParams = queryLast<HTMLMetaElement>('meta[name=analytics-location-params]')\n  if (extraParams) {\n    search += (search ? '&' : '?') + extraParams.content\n  }\n\n  for (const meta of document.querySelectorAll<HTMLMetaElement>('meta[name=analytics-param-rename]')) {\n    const names = meta.content.split(':', 2)\n    search = search.replace(new RegExp(`(^|[?&])${names[0]}($|=)`, 'g'), `$1${names[1]}$2`)\n  }\n\n  return search\n}\n\nexport function requestUri() {\n  return `${window.location.protocol}//${window.location.host}${pagePathname() + pageQuery()}`\n}\n","import {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch (error) {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","// Report uncaught JS errors to Sentry\n//   https://sentry.io/github/github-js\n\nimport {getOrCreateClientId} from '@github/hydro-analytics-client'\nimport {isSupported} from '@github/browser-support'\nimport {parse} from 'stacktrace-parser'\nimport {requestUri} from '@github-ui/analytics-overrides'\nimport {getSoftNavReferrer} from '@github-ui/soft-nav'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\n\nlet extensionErrors = false\nlet errorsReported = 0\nconst loadTime = Date.now()\n// network error messages are not consistent across browsers, this is a list of known messages for chrome and firefox\nexport const EXPECTED_NETWORK_ERROR_MESSAGES = new Set([\n  'Failed to fetch',\n  'NetworkError when attempting to fetch resource.',\n])\n\ntype ErrorContext = {\n  message?: string\n}\n\n// Check if an arbitrary object is an error, or at least an object that satisfies the interface of an error,\n// with the necessary information to be able to report it to Sentry.\nfunction isError(error: unknown): error is Error {\n  // Check if it's a definite instance of an error\n  if (error instanceof Error) return true\n  // Otherwise, check that it at least satisfies the interface of an error\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    typeof error.name === 'string' &&\n    'message' in error &&\n    typeof error.message === 'string'\n  )\n}\n\n/** Tries to serialize an arbitrary error value that is not an Error object, and returns a default message otherwise */\nfunction serializeNonError(error: unknown): string {\n  try {\n    return JSON.stringify(error)\n  } catch {\n    return 'Unserializable'\n  }\n}\n\nfunction isExpectedError(error: Error): boolean {\n  // We use AbortController to control events and some workflows. When we call `abort()` on it, it will raise an\n  // `AbortError` which doesn't represent a real error, so we don't want to report it.\n  if (error.name === 'AbortError') return true\n  // Failed to fetch errors are usually related to the user's network connection. They also do not represent\n  // real errors related to our code, so we will also ignore them.\n  if (error.name === 'TypeError' && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n  // For memex we use an ApiError class to represent errors returned from the API\n  // Additional details in the format of ApiErrorOpts are affixed to the name as a stringified JSON object\n  // so we just need to ensure the error name starts with ApiError\n  // see ui/packages/memex/src/client/platform/api-error.ts for more details.\n  if (error.name.startsWith('ApiError') && EXPECTED_NETWORK_ERROR_MESSAGES.has(error.message)) return true\n\n  return false\n}\n\n// @deprecated Re-throw the caught exception instead.\nexport function reportError(error: unknown, context: ErrorContext = {}) {\n  if (isFeatureEnabled('FAILBOT_HANDLE_NON_ERRORS')) {\n    if (!isError(error)) {\n      if (isIgnoredNonError(error)) return\n\n      // Create an error instance so that we can get the stacktrace of how this was reported\n      const errorForStackTrace = new Error()\n      const serializedErrorValue = serializeNonError(error)\n      // Construct a custom error object so we can keep track of anywhere that we report an error that isn't an Error object\n      const newError: PlatformJavascriptError = {\n        type: 'UnknownError',\n        value: `Unable to report error, due to a thrown non-Error type: ${typeof error}, with value ${serializedErrorValue}`,\n        stacktrace: stacktrace(errorForStackTrace),\n      }\n      report(errorContext(newError, context))\n      return\n    }\n    if (!isExpectedError(error)) {\n      report(errorContext(formatError(error), context))\n    }\n  } else {\n    // Without feature flag, we will cast the `error` variable which was implicitly the old\n    // behavior of the non-feature flagged code.\n    if (!isExpectedError(error as Error)) {\n      report(errorContext(formatError(error as Error), context))\n    }\n  }\n}\n\n// Report context info to Sentry.\nasync function report(context: PlatformReportBrowserErrorInput) {\n  if (!reportable()) return\n\n  const url = document.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-errors-url\"]')?.content\n  if (!url) return\n\n  if (isExtensionError(context.error.stacktrace)) {\n    extensionErrors = true\n    return\n  }\n\n  errorsReported++\n\n  try {\n    await fetch(url, {method: 'post', body: JSON.stringify(context)})\n  } catch {\n    // Error reporting failed so do nothing.\n  }\n}\n\nfunction formatError(error: Error): PlatformJavascriptError {\n  return {type: error.name, value: error.message, stacktrace: stacktrace(error)}\n}\n\nfunction errorContext(error: PlatformJavascriptError, context: ErrorContext = {}): PlatformReportBrowserErrorInput {\n  return Object.assign(\n    {\n      error,\n      sanitizedUrl: requestUri() || window.location.href,\n      readyState: document.readyState,\n      referrer: getSoftNavReferrer(),\n      timeSinceLoad: Math.round(Date.now() - loadTime),\n      user: pageUser() || undefined,\n      bundler,\n      ui: Boolean(document.querySelector('meta[name=\"ui\"]')),\n    },\n    context,\n  )\n}\n\nexport function stacktrace(error: Error): PlatformStackframe[] {\n  return parse(error.stack || '').map(frame => ({\n    filename: frame.file || '',\n    function: String(frame.methodName),\n    lineno: (frame.lineNumber || 0).toString(),\n    colno: (frame.column || 0).toString(),\n  }))\n}\n\nconst extensions = /(chrome|moz|safari)-extension:\\/\\//\n\n// Does this stack trace contain frames from browser extensions?\nfunction isExtensionError(stack: PlatformStackframe[]): boolean {\n  return stack.some(frame => extensions.test(frame.filename) || extensions.test(frame.function))\n}\n\nexport function pageUser() {\n  const login = document.head?.querySelector<HTMLMetaElement>('meta[name=\"user-login\"]')?.content\n  if (login) return login\n\n  const clientId = getOrCreateClientId()\n  return `anonymous-${clientId}`\n}\n\nlet unloaded = false\nssrSafeWindow?.addEventListener('pageshow', () => (unloaded = false))\nssrSafeWindow?.addEventListener('pagehide', () => (unloaded = true))\n\nfunction reportable() {\n  return !unloaded && !extensionErrors && errorsReported < 10 && isSupported()\n}\n\nif (typeof BroadcastChannel === 'function') {\n  const sharedWorkerErrorChannel = new BroadcastChannel('shared-worker-error')\n  sharedWorkerErrorChannel.addEventListener('message', event => {\n    // SharedWorker will emit a formatted error\n    reportError(event.data.error)\n  })\n}\n\nconst ignoredErrorMessages = [\n  'Object Not Found Matching Id', // from Microsoft Outlook SafeLink crawler\n  'Not implemented on this platform', // LastPass Safari extension\n  `provider because it's not your default extension`, // MetaMask extension\n]\n\n/**\n * We see a fair number of \"errors\" which are not actually Error objects. This function will return true if the\n * error is one of these known non-Error types and has content which we know can safely be ignored.\n * Most of these errors come from specific browsers or extensions which we can't control, so we just ignore them.\n * @param error An error that is not an Error object\n * @returns boolean\n */\nfunction isIgnoredNonError(error: unknown) {\n  if (!error || typeof error === 'boolean' || typeof error === 'number') {\n    // Rejected with a type that is not useful to report. Just ignore it.\n    return true\n  } else if (typeof error === 'string') {\n    // rejected with a string. See if it's a known error that we can ignore\n    if (ignoredErrorMessages.some(message => error.includes(message))) {\n      return true\n    }\n  } else if (\n    typeof error === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).message === 'string' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (error as any).code === 'number'\n  ) {\n    // We see an object like {\"message\":\"Not connected\",\"code\":4900} from some extension, likely MetaMask. Ignore these\n    return true\n  }\n\n  return false\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'server-x-safe-html'\n\n// This is a no-op policy to be used with server-side rendered HTML.\nexport const serverXSafeHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string, response: Response) => {\n    return trustedTypesPolicy.apply({\n      policy: () => {\n        verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n        return s\n      },\n      policyName,\n      fallback: s,\n      silenceErrorReporting: true,\n    })\n  },\n})\n","import {parseHTML} from '@github-ui/parse-html'\nimport {serverXSafeHTMLPolicy} from '@github-ui/trusted-types-policies/server-x-safe-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n  const trustedHTML = serverXSafeHTMLPolicy.createHTML(await response.text(), response)\n  return parseHTML(document, trustedHTML)\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch (_) {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ghTrustedTypes} from '@github-ui/trusted-types'\nimport {trustedTypesPolicy} from './policy'\n\nconst policyName = 'parse-html-no-op'\n// This is a temporary policy to allow us to migrate to Trusted Types without breaking existing code.\nexport const temporaryPermissiveParseHTMLPolicy = ghTrustedTypes.createPolicy(policyName, {\n  createHTML: (s: string) => {\n    return trustedTypesPolicy.apply({\n      policy: () => s,\n      policyName,\n      fallback: s,\n      sanitize: false,\n      fallbackOnError: true,\n    })\n  },\n})\n","import {temporaryPermissiveParseHTMLPolicy} from '@github-ui/trusted-types-policies/parse-html'\n\nexport function parseHTML(document: Document, html: string): DocumentFragment {\n  const template = document.createElement('template')\n  template.innerHTML = temporaryPermissiveParseHTMLPolicy.createHTML(html)\n  return document.importNode(template.content, true)\n}\n","import {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {sendStats} from '@github-ui/stats'\nimport {reportError} from '@github-ui/failbot'\nimport dompurify from 'dompurify'\nimport {sendEvent} from '@github-ui/hydro-analytics'\n\nexport class TrustedTypesPolicyError extends Error {}\n\ninterface PolicyParam {\n  policy: () => string\n  policyName: string\n  fallback: string\n  fallbackOnError?: boolean\n  sanitize?: boolean // report-only mode for now\n  silenceErrorReporting?: boolean\n}\n\nfunction apply({\n  policy,\n  policyName,\n  fallback,\n  fallbackOnError = false,\n  sanitize,\n  silenceErrorReporting = false,\n}: PolicyParam): string {\n  try {\n    if (isFeatureEnabled('BYPASS_TRUSTED_TYPES_POLICY_RULES')) return fallback\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_CALLED', trustedTypesPolicyName: policyName}, false, 0.1)\n    const policyOutput = policy()\n    if (sanitize) {\n      new Promise(resolve => {\n        const startTime = window.performance.now()\n        const sanitized = dompurify.sanitize(policyOutput, {FORBID_ATTR: []})\n        const endTime = window.performance.now()\n        const executionTime = endTime - startTime\n        if (policyOutput.length !== sanitized.length) {\n          const err = new Error('Trusted Types policy output sanitized')\n          const stack = err.stack?.slice(0, 1000)\n          const output = policyOutput.slice(0, 250)\n          sendEvent('trusted_types_policy.sanitize', {\n            policyName,\n            output,\n            stack,\n            outputLength: policyOutput.length,\n            sanitizedLength: sanitized.length,\n            executionTime,\n          })\n          resolve(policyOutput)\n        }\n      })\n    }\n    return policyOutput\n  } catch (e) {\n    if (e instanceof TrustedTypesPolicyError) throw e\n    if (!silenceErrorReporting) reportError(e)\n    sendStats({incrementKey: 'TRUSTED_TYPES_POLICY_ERROR', trustedTypesPolicyName: policyName})\n    if (!fallbackOnError) throw e\n  }\n\n  return fallback\n}\n\nexport const trustedTypesPolicy = {apply}\n","import {ssrSafeDocument} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\n/*\n * Tinyfill for trusted types\n */\n\ninterface GHTrustedTypePolicyOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createHTML: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScript: (input: string, ...args: any[]) => string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createScriptURL: (input: string, ...args: any[]) => string\n}\n\ninterface GHTrustedTypePolicyWithName extends GHTrustedTypePolicyOptions {\n  name: string\n}\n\nfunction unimplemented(functionName: string) {\n  return () => {\n    throw new TypeError(`The policy does not implement the function ${functionName}`)\n  }\n}\n\nconst fallbacks = {\n  createHTML: unimplemented('createHTML'),\n  createScript: unimplemented('createScript'),\n  createScriptURL: unimplemented('createScriptURL'),\n}\n\nconst tinyfill = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => ({\n    name,\n    ...fallbacks,\n    ...rules,\n  }),\n}\n\ninterface GlobalThisWithMaybeTrustedTypes {\n  trustedTypes?: typeof tinyfill\n}\n\nconst registeredPolicies = new Map<string, GHTrustedTypePolicyOptions>()\n\nconst trustedTypes = (globalThis as GlobalThisWithMaybeTrustedTypes).trustedTypes ?? tinyfill\n\nexport const ghTrustedTypes = {\n  createPolicy: (name: string, rules: Partial<GHTrustedTypePolicyOptions>): GHTrustedTypePolicyWithName => {\n    if (registeredPolicies.has(name)) {\n      sendStats({\n        incrementKey: 'TRUSTED_TYPES_POLICY_INITIALIZED_TWICE',\n      })\n      return registeredPolicies.get(name) as GHTrustedTypePolicyWithName\n    } else {\n      const policy = trustedTypes.createPolicy(name, rules)\n      registeredPolicies.set(name, policy)\n      return policy\n    }\n  },\n}\n\n// This export is only for testing. Do not import in production code.\nexport const registeredPoliciesForTesting = registeredPolicies\nexport const tinyfillForTesting = tinyfill\n\n/*\n *\n * This is a temporary warning to indicate to hubbers that the following errors are expected and safe to ignore.\n *\n */\nlet hasWarnedHubberAboutTrustedTypes = false\n\nssrSafeDocument?.addEventListener('securitypolicyviolation', (e: SecurityPolicyViolationEvent) => {\n  if (e.violatedDirective === 'require-trusted-types-for' && !hasWarnedHubberAboutTrustedTypes) {\n    // eslint-disable-next-line no-console\n    console.warn(`Hi fellow Hubber!\n    You're probably seeing a Report Only Trusted Types error near this message. This is intended behaviour, staff-only,\n    does not impact application control flow, and is used solely for statistic collection. Unfortunately we\n    can't gather these statistics without adding the above warnings to your console. Sorry about that!\n    Feel free to drop by #pse-architecture if you have any additional questions about Trusted Types or CSP.`)\n    hasWarnedHubberAboutTrustedTypes = true\n  }\n})\n"],"names":["initialized","selectorSet","SelectorSet","handleFocus","event","focused","target","HTMLElement","nodeType","Node","DOCUMENT_NODE","match","matches","data","call","onFocus","selector","fn","document","addEventListener","add","activeElement","onKey","eventType","inputHandler","blurHandler","currentTarget","removeEventListener","field","onInput","ActionsPolicyFormElement","connectedCallback","toggleSpecificOptions","selectRadio","checked","specificOptions","hidden","controller","RunnerImageElement","ready","selectRunnerPlatform","customImageUriInput","onkeydown","e","stopPropagation","selectedPlatform","getSelectedPlatform","updateImageTabContent","required","selectedImageVersion","getSelectedImageVersion","updateSelectedImageHint","customImageGenerationOptions","updateCustomImageGenerationOptions","machineSpecsDropdown","updateOptionsVisibility","selectedImageSource","value","imageSource","platforms","find","platform","imageVersions","length","imageVer","imagePlatform","imageLabels","imageContents","map","c","getAttribute","i","imageHintElement","selectedImageHints","renderContent","imageVersion","isBaseImage","imageId","persistentOsDiskCheckbox","updateMaxLimit","selectedMachineSpec","getSelectedItem","maxRunners","querySelector","maxGpuTooHighErrorMessage","maxTooHighErrorMessage","minTooLowErrorMessage","maxGroup","submitButton","disabled","classList","remove","runnerType","bypassMaxGpuRunners","max","gpuRunnersMaxLimit","parseInt","runnersMaxLimit","targets","MachineSpecsDropdownElement","item","items","setVisibility","updateTabsVisibility","selectedItem","visible","defaultItem","getFirstVisibleItem","selectItem","selectTabByType","numberVisibleTabs","tab","tabs","shouldTabBeVisible","some","type","tabsHeader","targetTab","selectTab","MachineSpecsTabElement","clickArea","click","attr","MachineSpecsItemElement","checkbox","shouldBeVisible","storageGb","sizeGb","attrPrefix","RunnerImageVersionElement","RunnerSelectedImageHint","innerHTML","getContent","content","imageInfoUrl","getCuratedImageInfoUrl","maxInput","RunnerScalingElement","disableSubmitButton","enableSubmitButton","validateMax","resetMaxState","maxValue","maxInputUpperLimit","maxInputLowerLimit","min","maxTooLowErrorMessage","announceFromElement","maxNote","PublicIpElement","isAllowed","hasAttribute","checkboxChanged","publicIpEnabled","setAttribute","description","labelSection","AdvancedSecurityNewReposElement","toggle","status","dialog","show","requestSubmit","form","confirm","open","close","queryLast","list","querySelectorAll","requestUri","window","location","protocol","host","pagePathname","locationOverride","pathname","pageQuery","stripParams","search","extraParams","meta","names","split","replace","options","dialogTemplate","clonedDetails","cloneNode","details","detailsDialog","spinner","detailsClass","dialogClass","label","labelledBy","body","append","prepend","error","errorSpan","createElement","textContent","errorMessage","fire","extensionErrors","errorsReported","loadTime","Date","now","EXPECTED_NETWORK_ERROR_MESSAGES","Set","isExpectedError","name","has","message","startsWith","reportError","context","isFeatureEnabled","Error","isIgnoredNonError","ignoredErrorMessages","includes","code","errorForStackTrace","serializedErrorValue","serializeNonError","JSON","stringify","newError","stacktrace","report","errorContext","formatError","unloaded","isSupported","url","head","stack","frame","extensions","test","filename","function","fetch","method","Object","assign","sanitizedUrl","href","readyState","referrer","getSoftNavReferrer","timeSinceLoad","Math","round","user","pageUser","undefined","bundler","ui","Boolean","parse","file","String","methodName","lineno","lineNumber","toString","colno","column","login","clientId","getOrCreateClientId","ssrSafeWindow","BroadcastChannel","sharedWorkerErrorChannel","ResponseError","constructor","response","policyName","serverXSafeHTMLPolicy","ghTrustedTypes","createPolicy","createHTML","s","trustedTypesPolicy","apply","policy","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","headers","get","responseNonce","getDocumentHtmlSafeNonces","fallback","silenceErrorReporting","fetchSafeDocumentFragment","request","Request","self","statusText","trustedHTML","text","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","Promise","resolve","setTimeout","fetchRetry","fetchOptions","attempt","retry","reject","err","result","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","getOptionsFromMeta","baseContext","AnalyticsClient","_","extendBaseContext","key","app_id","event_url","entries","visitorMeta","visitorHash","atob","urlParams","URLSearchParams","toLowerCase","staff","isStaff","sendPageView","sendEvent","service","cleanContext","typeWithFallback","stringifyObjectValues","obj","fromEntries","k","v","temporaryPermissiveParseHTMLPolicy","sanitize","fallbackOnError","html","template","importNode","TrustedTypesPolicyError","sendStats","incrementKey","trustedTypesPolicyName","policyOutput","startTime","performance","sanitized","dompurify","FORBID_ATTR","endTime","slice","output","outputLength","sanitizedLength","executionTime","unimplemented","functionName","fallbacks","createScript","createScriptURL","registeredPolicies","Map","trustedTypes","rules","set","hasWarnedHubberAboutTrustedTypes","ssrSafeDocument","violatedDirective","console","warn"],"sourceRoot":""}