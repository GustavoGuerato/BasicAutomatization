{"version":3,"file":"ui_packages_paths_index_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/paths/path.ts","ui/packages/paths/utils.ts"],"sourcesContent":["import type {PathFunction} from './types'\nimport {encodePart} from './utils'\n\ntype Repository = {\n  name: string\n  ownerLogin: string\n}\n\ntype ActivityFilter = {\n  actor?: {\n    login: string\n  }\n  activityType: string\n  timePeriod: string\n  sort: string\n}\n\nexport type RepositoryTreePathAction =\n  | 'tree'\n  | 'blob'\n  | 'blame'\n  | 'raw'\n  | 'new'\n  | 'edit'\n  | 'delete'\n  | 'upload'\n  | 'tree/delete'\n  | 'latest-commit'\n  | 'tree-commit-info'\n  | 'branch-infobar'\n  | 'file-contributors'\n\nexport type RepositoryPathAction =\n  | 'hovercard'\n  | 'refs'\n  | 'actions'\n  | 'pulls'\n  | 'issues'\n  | 'issues/new'\n  | 'branches'\n  | 'tags'\n  | 'settings'\n\nexport const codeNavGeneralSearchPath: PathFunction<{searchTerm: string}> = ({searchTerm}) =>\n  `/search?q=${encodePart(`${searchTerm}`)}&type=code`\n\nexport const codeNavSearchPath: PathFunction<{owner: string; repo: string; searchTerm: string}> = ({\n  owner,\n  repo,\n  searchTerm,\n}) => `/search?q=${encodePart(`repo:${owner}/${repo} ${searchTerm}`)}&type=code`\n\nexport const searchPath: PathFunction = () => `/search`\n\nexport const advancedSearchPath = () => `/search/advanced`\n\nexport const searchStatsPath: PathFunction = () => `/search/stats`\n\nexport const ownerPath: PathFunction<{owner: string}> = ({owner}) => `/${encodePart(owner)}`\n\nexport const ownerAvatarPath: PathFunction<{owner: string}> = ({owner}) => `/${encodePart(owner)}.png`\n\nexport const userHovercardPath: PathFunction<{owner: string}> = ({owner}) => `/users/${encodePart(owner)}/hovercard`\n\nexport const teamHovercardPath: PathFunction<{owner: string; team: string}> = ({owner, team}) =>\n  `/orgs/${encodePart(owner)}/teams/${encodePart(team)}/hovercard`\n\nexport const orgHovercardPath: PathFunction<{owner: string}> = ({owner}) => `/orgs/${encodePart(owner)}/hovercard`\n\nexport const userIdHovercardPath: PathFunction<{userId: number}> = ({userId}) => `/hovercards?user_id=${userId}`\n\nexport function repositoryPath({owner, repo, action}: {owner: string; repo: string; action?: RepositoryPathAction}) {\n  return action ? `/${encodePart(owner)}/${encodePart(repo)}/${action}` : `/${encodePart(owner)}/${encodePart(repo)}`\n}\n\nexport const repositoryStatsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/stats`\n\nexport const repositoryParticipationPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/graphs/participation`\n\nexport const refNameCheckPath: PathFunction<{owner: string; repo: string; refName: string}> = ({\n  owner,\n  repo,\n  refName,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/branches/${encodePart(refName)}/rename_ref_check`\n\nexport const renameBranchEffectsPath: PathFunction<{owner: string; repo: string; branchName: string}> = ({\n  owner,\n  repo,\n  branchName,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/branches/rename_form/${encodePart(branchName)}`\n\nexport const renameRefPath: PathFunction<{owner: string; repo: string; refName: string}> = ({owner, repo, refName}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/branches/${encodePart(refName)}`\n\nexport const checkTagNameExistsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/branches/check_tag_name_exists`\n\nexport const branchPath: PathFunction<{owner: string; repo: string; branch: string}> = ({owner, repo, branch}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/tree/${encodePart(branch)}`\n\nexport const tagPath: PathFunction<{owner: string; repo: string; tag: string}> = ({owner, repo, tag}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/releases/tag/${encodePart(tag)}`\n\nexport const invitationsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/invitations`\n\nexport const newBranchProtectionPath: PathFunction<{owner: string; repo: string; branchName: string}> = ({\n  owner,\n  repo,\n  branchName,\n}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/branch_protection_rules/new?branch_name=${encodePart(branchName)}`\n\nexport const rulesetsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules`\n\nexport const newRulesetPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules/new?target=branch&enforcement=disabled`\n\nexport const blobPath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  lineNumber?: number\n  plain?: number\n}> = ({owner, repo, commitish, filePath, lineNumber, plain}) => {\n  const params = plain ? `?plain=${plain}` : ''\n  const suffix = lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/blob/${encodePart(commitish)}/${encodePart(\n    filePath,\n  )}${params}${suffix}`\n}\n\nexport const editBlobPath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  hash?: string\n  lineNumber?: number\n  plain?: number\n}> = ({owner, repo, commitish, filePath, hash, lineNumber}) => {\n  const suffix = hash ? hash : lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/edit/${encodePart(commitish)}/${encodePart(filePath)}${suffix}`\n}\n\nexport const blamePath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  lineNumber?: number\n}> = ({owner, repo, commitish, filePath, lineNumber}) => {\n  const suffix = lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/blame/${encodePart(commitish)}/${encodePart(filePath)}${suffix}`\n}\n\nexport function dismissRepositoryNoticePathPath({login}: {login: string}) {\n  return `/users/${encodePart(login)}/dismiss_repository_notice`\n}\n\nexport function deferredMetadataPath({repo, commitish, path}: {repo: Repository; commitish: string; path: string}) {\n  const parts = ['', repo.ownerLogin, repo.name, 'deferred-metadata', commitish, path]\n  return parts.map(encodePart).join('/')\n}\n\nexport function repoOverviewUrl(repo: Pick<Repository, 'name' | 'ownerLogin'>) {\n  return `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}`\n}\n\nexport function repoDefaultBrachUrl(repo: Repository) {\n  return `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}?files=1`\n}\n\nexport function repositoryTreePath({\n  repo,\n  commitish,\n  action,\n  path,\n}: {\n  repo: Pick<Repository, 'name' | 'ownerLogin'>\n  commitish: string\n  action: RepositoryTreePathAction\n  path?: string\n}) {\n  const parts = ['', repo.ownerLogin, repo.name, action, commitish]\n\n  if (path && path !== '/') {\n    parts.push(path)\n  }\n\n  return parts.map(encodePart).join('/')\n}\n\nexport const blobSidePanelMetadataPath: PathFunction<{\n  owner: string\n  repo: string\n}> = ({owner, repo}) => `/${owner}/${repo}/sidepanel-metadata`\n\nexport function blobDetectLanguage(repo: Repository, encodedFileName: string) {\n  return `/${repo.ownerLogin}/${repo.name}/detect_language?filename=${encodedFileName}`\n}\n\nexport const commitPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({owner, repo, commitish}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitish}`\n\nexport const commitsPath: PathFunction<{owner: string; repo: string; ref?: string; path?: string}> = ({\n  owner,\n  repo,\n  ref,\n  path,\n}) => {\n  const base = `/${encodePart(owner)}/${encodePart(repo)}/commits`\n  if (!ref) return base\n  if (!path) return `${base}/${encodePart(ref)}`\n  return `${base}/${encodePart(ref)}/${encodePart(stripLeadingSlash(path))}`\n}\n\nexport function commitsPathByAuthor({\n  repo,\n  branch,\n  path,\n  author,\n}: {\n  repo: Repository\n  branch: string\n  path: string\n  author: string\n}) {\n  const url = [repo.ownerLogin, repo.name, 'commits', branch, path].map(encodePart).join('/')\n  return `/${url}?author=${encodePart(author)}`\n}\n\nexport function commitStatusDetailsPath(repo: Repository, oid: string) {\n  return `/${repo.ownerLogin}/${repo.name}/commit/${oid}/status-details`\n}\n\nexport function commitsByAuthor({repo, author}: {repo: Repository; author: string}) {\n  const parts = [repo.ownerLogin, repo.name]\n\n  return `/${parts.map(encodePart).join('/')}/commits?author=${encodePart(author)}`\n}\n\nexport const commitHovercardPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(`${owner}/${repo}/commit/${commitish}/hovercard`)}`\n\nexport const branchCommmitsPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(`${owner}/${repo}/branch_commits/${commitish}`)}`\n\nexport const topicPath: PathFunction<{topicName: string}> = ({topicName}) => `/topics/${topicName}`\n\nexport const marketplaceCategoryPath: PathFunction<{categoryName: string}> = ({categoryName}) =>\n  `/marketplace/category/${parametrize(categoryName)}`\n\nexport const marketplaceActionPath: PathFunction<{slug: string}> = ({slug}) =>\n  `/marketplace/actions/${encodePart(slug)}`\n\nexport const actionsWorkflowRunPath: PathFunction<{owner: string; repo: string; runId?: string; attempt?: string}> = ({\n  owner,\n  repo,\n  runId,\n  attempt,\n}) => {\n  const parts = [owner, repo, 'actions']\n  if (runId) {\n    parts.push('runs', runId)\n  }\n  // Attempt defaults to '1' when not set\n  if (runId && attempt) {\n    parts.push('attempts', attempt)\n  }\n\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport const actionsWorkflowFilePath: PathFunction<{owner: string; repo: string; runId?: string}> = ({\n  owner,\n  repo,\n  runId,\n}) => {\n  const parts = [owner, repo, 'actions']\n  if (runId) {\n    parts.push('runs', runId, 'workflow')\n  }\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport const codeownersErrorPath: PathFunction<{owner: string; repo: string; commitish: string; filePath: string}> = ({\n  owner,\n  repo,\n  commitish,\n  filePath,\n}) => `/${owner}/${repo}/codeowners-validity/${commitish}/${filePath}`\n\nfunction stripLeadingSlash(path: string) {\n  return path.startsWith('/') ? path.slice(1) : path\n}\n\n/**\n * Replaces all non-alphanumeric characters with dashes, just like string.parametrize in ruby.\n */\nfunction parametrize(value: string) {\n  return value.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase()\n}\n\nexport function parentPath(path: string) {\n  return path.split('/').slice(0, -1).join('/')\n}\n\n/**\n * Returns the path to the activity index page for a repository.\n *\n * To reuse this path in apps rendered in different places (e.g. GitHub.com vs Stafftools) - pass in the `baseUrl` param.\n */\nexport function activityIndexPath({\n  repo,\n  baseUrl = '',\n  branch,\n  filter,\n  pagination,\n  perPage = 30,\n}: {\n  repo: Repository\n  baseUrl?: string\n  branch?: string\n  filter?: ActivityFilter\n  pagination?: {before?: string | null; after?: string | null}\n  perPage?: number\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'activity']\n  const params = []\n\n  if (branch) params.push(`ref=${encodePart(branch)}`)\n  if (filter) {\n    // Don't add default values to the path/query-string\n    if (filter.activityType && filter.activityType.toLocaleLowerCase() !== 'all') {\n      params.push(`activity_type=${encodePart(filter.activityType)}`)\n    }\n\n    if (filter.actor?.login) {\n      params.push(`actor=${encodePart(filter.actor.login)}`)\n    }\n\n    // Don't add default values to the path/query-string\n    if (filter.timePeriod && filter.timePeriod.toLocaleLowerCase() !== 'all') {\n      params.push(`time_period=${encodePart(filter.timePeriod)}`)\n    }\n\n    // Don't add default values to the path/query-string\n    if (filter.sort && filter.sort.toLocaleLowerCase() !== 'desc') {\n      params.push(`sort=${encodePart(filter.sort)}`)\n    }\n  }\n\n  if (pagination) {\n    if (pagination.after) {\n      params.push(`after=${encodePart(pagination.after)}`)\n    } else if (pagination.before) {\n      params.push(`before=${pagination.before}`)\n    }\n  }\n\n  // Don't add default values to the path/query-string\n  if (perPage && perPage !== 30) {\n    params.push(`per_page=${perPage}`)\n  }\n\n  return `${baseUrl}/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\n/**\n * Returns the path to the activity actors endpoing for a repository.\n *\n * To reuse this path in apps rendered in different places (e.g. GitHub.com vs Stafftools) - pass in the `baseUrl` param.\n */\nexport function activityActorsPath({\n  repo,\n  baseUrl = '',\n  branch,\n  timePeriod,\n}: {\n  repo: Repository\n  baseUrl?: string\n  branch?: string\n  timePeriod?: string\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'activity', 'actors']\n  const params = []\n\n  if (branch) params.push(`ref=${encodePart(branch)}`)\n  if (timePeriod) params.push(`time_period=${encodePart(timePeriod)}`)\n\n  return `${baseUrl}/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\nexport function ruleInsightsActorsPath() {\n  return `insights/actors`\n}\n\nexport function comparePath({repo, base = undefined, head}: {repo: Repository; base?: string; head: string}) {\n  const baseSegment = [repo.ownerLogin, repo.name, 'compare'].map(encodePart).join('/')\n  const compareSegment = base ? `${encodePart(base)}...${encodePart(head)}` : encodePart(head)\n  return `/${baseSegment}/${compareSegment}`\n}\n\nexport function mergeabilityCheckPath({repo, base, head}: {repo: Repository; base: string; head: string}) {\n  const baseSegment = [repo.ownerLogin, repo.name, 'branches', 'pre_mergeable'].map(encodePart).join('/')\n  const compareSegment = `${encodePart(base)}...${encodePart(head)}`\n  return `/${baseSegment}/${compareSegment}`\n}\n\nexport function repoPullRequestsPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/pulls`\n}\n\nexport function repoStargazersPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/stargazers`\n}\n\nexport function newPullRequestPath({repo, refName}: {repo: Repository; refName: string}) {\n  return `/${[repo.ownerLogin, repo.name, 'pull', 'new', refName].map(encodePart).join('/')}`\n}\n\nexport function pullRequestPath({repo, number}: {repo: Repository; number: number}) {\n  return `/${[repo.ownerLogin, repo.name, 'pull', number.toString()].map(encodePart).join('/')}`\n}\n\nexport const pullRequestTitlePath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n}> = ({owner, repo, number}) => `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}`\n\nexport const pullRequestBodyPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) => `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#issue-${contentId}`\n\nexport const pullRequestCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#issuecomment-${contentId}`\n\nexport const pullRequestReviewPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#pullrequestreview-${contentId}`\n\nexport const pullRequestReviewCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#discussion_r${contentId}`\n\nexport function fetchAndMergePath({repo, refName, discard}: {repo: Repository; refName: string; discard?: boolean}) {\n  return `/${[repo.ownerLogin, repo.name, 'branches', 'fetch_and_merge', refName].map(encodePart).join('/')}${\n    discard ? '?discard_changes=true' : ''\n  }`\n}\n\nexport function reposSurveyPath(repo: Repository, action?: 'dismiss' | 'answer') {\n  const parts = [repo.ownerLogin, repo.name, 'repos', 'survey']\n  if (action) parts.push(action)\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function codeNavSurveyPath(ownerLogin: string, repoName: string, action?: 'answer') {\n  const parts = [ownerLogin, repoName, 'repos', 'code_nav_survey']\n  if (action) parts.push(action)\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function treeListPath({\n  repo,\n  commitOid,\n  includeDirectories = false,\n}: {\n  repo: Repository\n  commitOid: string\n  includeDirectories?: boolean\n}) {\n  const path = `/${[repo.ownerLogin, repo.name, 'tree-list', commitOid].map(encodePart).join('/')}`\n\n  return includeDirectories ? `${path}?include_directories=${includeDirectories}` : path\n}\n\nexport function codeNavigationPath({\n  repo,\n  type,\n  q,\n  language,\n  row,\n  column,\n  ref,\n  path,\n  codeNavContext,\n  symbolKind,\n}: {\n  repo: Repository\n  type: string\n  q: string\n  language: string\n  row: number\n  column: number\n  ref: string\n  path: string\n  codeNavContext: string\n  symbolKind: string | null\n}) {\n  const repoSegment = [repo.ownerLogin, repo.name].map(encodePart).join('/')\n  const params = new URLSearchParams()\n  params.append('q', q)\n  params.append('language', language)\n  params.append('row', String(row))\n  params.append('col', String(column))\n  params.append('ref', ref)\n  params.append('blob_path', path)\n  params.append('code_nav_context', codeNavContext)\n  if (symbolKind) {\n    params.append('symbol_kind', symbolKind)\n  }\n  return `/${repoSegment}/find-react-${type}?${params.toString()}`\n}\n\nexport const discussionPath: PathFunction<{owner: string; repo: string; discussionNumber: number}> = ({\n  owner,\n  repo,\n  discussionNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}`\n\nexport const discussionCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  discussionNumber: number\n  contentId: number\n}> = ({owner, repo, discussionNumber, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}#discussioncomment-${contentId}`\n\nexport const discussionBodyPath: PathFunction<{\n  owner: string\n  repo: string\n  discussionNumber: number\n  contentId: number\n}> = ({owner, repo, discussionNumber, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}#discussion-${contentId}`\n\nexport function repoIssuesPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/issues`\n}\n\nexport const issuePath: PathFunction<{owner: string; repo: string; issueNumber: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}`\n\nexport const issueCommentPath: PathFunction<{owner: string; repo: string; issueNumber: number; contentId: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n  contentId,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}#issuecomment-${contentId}`\n\nexport const issueBodyPath: PathFunction<{owner: string; repo: string; issueNumber: number; contentId: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n  contentId,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}#issue-${contentId}`\n\nexport const issueHovercardPath: PathFunction<{owner: string; repo: string; issueNumber: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}/hovercard`\n\nexport const issueLinkedPullRequestHovercardPath: PathFunction<{\n  owner: string\n  repo: string\n  pullRequestNumber: number\n}> = ({owner, repo, pullRequestNumber}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${pullRequestNumber}/hovercard`\n\nexport const featurePreviews: PathFunction<{login: string}> = ({login}) =>\n  `/users/${encodePart(login)}/feature_previews`\n\nexport function extractPathFromPathname(pathname: string, refName: string, defaultPath: string) {\n  // We expect the pathname to be in the form of /owner/repo/action/branch/path\n  // That's why we split the pathname by '/' and take the 4th element (after the action)\n  const indexOfBranchAndPath = getIndexOfNth(pathname, '/', 4)\n  const branchAndPath = pathname.substring(indexOfBranchAndPath)\n\n  if (branchAndPath === `/${refName}`) {\n    // there is no path so there is no trailing slash\n    return ''\n  } else if (branchAndPath.startsWith(`/${refName}/`)) {\n    return branchAndPath.substring(refName.length + 2)\n  } else {\n    return defaultPath\n  }\n}\n\nexport function codeOfConductPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/community/code-of-conduct/new`\n}\n\nexport function licenseSelectorPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/community/license/new`\n}\n\nexport function securityPolicyPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/security/policy`\n}\n\nfunction getIndexOfNth(text: string, subString: string, index: number) {\n  return text.split(subString, index).join(subString).length\n}\n\nexport const repoTransferPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/transfer`\n\nexport const repositoryCheckNamePath = () => '/repositories/check-name'\n\nexport const repositoriesPath = () => '/repositories'\n\nexport const repoTransferTeamSuggestionsPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/transfer`\n\nexport const repoAbortTransferPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/abort_transfer`\n\nexport const repositoryImportsPath = () => '/new/import'\n\nexport const templateReposPath = () => `/repositories/new/templates`\n\nexport const repoOwnerItemsPath = () => '/repositories/forms/owner_items'\n\nexport const repoForkOwnerItemsPath = (repoId: number) => `/repositories/forms/fork_owner_items?repo_id=${repoId}`\n\nexport function repoOwnerDetailPath(owner: string): string\nexport function repoOwnerDetailPath(owner: string, action: 'transfer', repoId: number): string\nexport function repoOwnerDetailPath(owner: string, action?: 'transfer', repoId?: number): string {\n  const base = `/repositories/forms/owner_detail`\n  const params = new URLSearchParams({owner})\n\n  if (action && repoId) {\n    params.set('form', action)\n    params.set('repo_id', repoId.toString())\n  }\n\n  return `${base}?${params.toString()}`\n}\n\nexport const getContributorsPath = (repo: Repository) => `/repositories/${encodePart(repo.name)}/contributors/`\n\nexport const repoContributorsPath = (repo: Repository) =>\n  `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}/graphs/contributors`\n\nexport const repoAccessSettingsPath = (repo: Repository) =>\n  `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}/settings/access`\n\nexport function propertyDefinitionSettingsPath({org, propertyName}: {org: string; propertyName?: string}) {\n  const base = `/organizations/${encodePart(org)}/settings/custom-properties`\n  if (propertyName) {\n    return `${base}/${encodePart(propertyName)}`\n  } else {\n    return base\n  }\n}\n\nexport function customPropertyDetailsPath({org, propertyName}: {org: string; propertyName?: string}) {\n  const base = `/organizations/${encodePart(org)}/settings/custom-property`\n  if (propertyName) {\n    return `${base}/${encodePart(propertyName)}`\n  } else {\n    return base\n  }\n}\n\nexport function updateOrgPropertyValuesPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/custom-properties/values`\n}\n\nexport function listOrgReposPropertyValuesPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/custom-properties/list-repos-values`\n}\n\nexport function propertyDefinitionsListPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/custom-properties`\n}\n\nexport function checkPropertyUsagePath({org, propertyName}: {org: string; propertyName: string}) {\n  return ['', 'organizations', encodePart(org), 'settings', 'custom-properties-usage', encodePart(propertyName)].join(\n    '/',\n  )\n}\n\nexport function repositoryPropertiesSettingsPath({org, repo}: {org: string; repo: string}) {\n  return `/${encodePart(`${org}/${repo}`)}/settings/custom-properties`\n}\n\nexport function forkPath({owner, repo}: {owner: string; repo: string}) {\n  return `/${encodePart(`${owner}/${repo}`)}/fork`\n}\n\nexport function forksListPath({owner, repo}: {owner: string; repo: string}) {\n  return `/${encodePart(`${owner}/${repo}`)}/forks`\n}\n\nexport function newRepoPath({org}: {org?: string}) {\n  if (org) {\n    return `/organizations/${encodePart(org)}/repositories/new`\n  }\n\n  return `/new`\n}\n\nexport function orgReposIndexPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/repositories`\n}\n\nexport function orgReposListPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/repos_list`\n}\n\nexport function orgTopicReposPath({topic, org}: {topic: string; org: string}) {\n  return `/search?q=topic%3A${encodePart(topic)}+org%3A${encodePart(org)}&type=Repositories`\n}\n\nexport function repoAttestationsIndexPath({\n  repo,\n  pagination = {before: null, after: null},\n  perPage = 30,\n}: {\n  repo: Repository\n  pagination?: {before?: string | null; after?: string | null}\n  perPage?: number\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'attestations']\n  const params = []\n\n  if (pagination) {\n    if (pagination.after) {\n      params.push(`after=${encodePart(pagination.after)}`)\n    } else if (pagination.before) {\n      params.push(`before=${encodePart(pagination.before)}`)\n    }\n  }\n\n  // Don't add default values to the path/query-string\n  if (perPage && perPage !== 30) {\n    params.push(`per_page=${perPage}`)\n  }\n\n  return `/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\nexport function repoAttestationShowPath({repo, attestationId}: {repo: Repository; attestationId: number | string}) {\n  // Coerce attestationId to string as it's sometimes a number (SSR vs client-side hydration)\n  return `/${[repo.ownerLogin, repo.name, 'attestations', attestationId.toString()].map(encodePart).join('/')}`\n}\n\nexport function repoAttestationDownloadPath({repo, attestationId}: {repo: Repository; attestationId: number | string}) {\n  // Coerce attestationId to string as it's sometimes a number (SSR vs client-side hydration)\n  return `/${[repo.ownerLogin, repo.name, 'attestations', attestationId.toString(), 'download']\n    .map(encodePart)\n    .join('/')}`\n}\n\nexport function branchesPath({repo}: {repo: Repository}) {\n  return `/${[repo.ownerLogin, repo.name, 'branches'].map(encodePart).join('/')}`\n}\n\nexport function tagsPath({repo}: {repo: Repository}) {\n  return `/${[repo.ownerLogin, repo.name, 'tags'].map(encodePart).join('/')}`\n}\n\nexport function settingsOrgSecurityProductsPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products`\n}\n\nexport function settingsOrgSecurityProductsConfigurationsNewPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/new`\n}\n\nexport function settingsOrgSecurityProductsConfigurationsCreatePath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations`\n}\n\nexport function settingsOrgSecurityProductsConfigurationsEditPath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/edit/${id}`\n}\n\nexport function settingsOrgSecurityProductsConfigurationsUpdatePath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/${id}`\n}\n\nexport function settingsOrgSecurityProductsRepositories({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesApplyPath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/${id}/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesDeletePath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/repositories`\n}\n\nexport function settingsOrgSecurityProductsConfigurationsViewPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/view`\n}\n","import type {PathFunction, PathParams, Query} from './types'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\n\n/**\n * Given a path function, a set of parameters for that function, and a query, returns a URL.\n */\nexport function getUrl<T extends PathParams | void>(path: PathFunction<T>, args: T, query?: Query): URL {\n  const pathname = path(args)\n  const target = new URL(pathname, ssrSafeLocation.origin || 'https://github.com')\n\n  if (pathname === ssrSafeLocation.pathname) {\n    target.search = new URLSearchParams(ssrSafeLocation.search).toString()\n  }\n\n  for (const [key, value] of Object.entries(query || {})) {\n    if (value === null || value === undefined) {\n      target.searchParams.delete(key)\n    } else {\n      target.searchParams.set(key, value.toString())\n    }\n  }\n\n  return target\n}\n\n/**\n * Get an href for use in links. This will be a relative URL, and will work properly in SSR.\n */\nexport function getRelativeHref<T extends PathParams>(path: PathFunction<T>, args: T, query?: Query): string {\n  const url = getUrl(path, args, query)\n  return url.href.replace(url.origin, '') // strip origin, but keep the rest to make it relative\n}\n\n/**\n * Encodes special characters in a URL part, except `/`\n */\nexport function encodePart(part: string): string {\n  return part.split('/').map(encodeURIComponent).join('/')\n}\n"],"names":["codeNavGeneralSearchPath","searchTerm","encodePart","codeNavSearchPath","owner","repo","searchPath","advancedSearchPath","searchStatsPath","ownerPath","ownerAvatarPath","userHovercardPath","teamHovercardPath","team","orgHovercardPath","userIdHovercardPath","userId","repositoryPath","action","repositoryStatsPath","repositoryParticipationPath","refNameCheckPath","refName","renameBranchEffectsPath","branchName","renameRefPath","checkTagNameExistsPath","branchPath","branch","tagPath","tag","invitationsPath","newBranchProtectionPath","newRulesetPath","blobPath","commitish","filePath","lineNumber","plain","params","suffix","editBlobPath","hash","blamePath","dismissRepositoryNoticePathPath","login","deferredMetadataPath","path","parts","ownerLogin","name","map","join","repoOverviewUrl","repoDefaultBrachUrl","repositoryTreePath","push","blobSidePanelMetadataPath","commitPath","commitsPath","ref","base","stripLeadingSlash","startsWith","slice","commitsPathByAuthor","author","url","commitStatusDetailsPath","oid","commitsByAuthor","commitHovercardPath","branchCommmitsPath","topicPath","topicName","marketplaceCategoryPath","categoryName","value","replace","toLowerCase","marketplaceActionPath","slug","actionsWorkflowRunPath","runId","attempt","actionsWorkflowFilePath","codeownersErrorPath","parentPath","split","activityIndexPath","baseUrl","filter","pagination","perPage","activityType","toLocaleLowerCase","actor","timePeriod","sort","after","before","length","activityActorsPath","ruleInsightsActorsPath","comparePath","head","baseSegment","compareSegment","mergeabilityCheckPath","repoPullRequestsPath","repoStargazersPath","newPullRequestPath","pullRequestPath","number","toString","pullRequestTitlePath","pullRequestBodyPath","contentId","pullRequestCommentPath","pullRequestReviewPath","pullRequestReviewCommentPath","fetchAndMergePath","discard","treeListPath","commitOid","includeDirectories","codeNavigationPath","type","q","language","row","column","codeNavContext","symbolKind","repoSegment","URLSearchParams","append","String","discussionPath","discussionNumber","discussionCommentPath","discussionBodyPath","repoIssuesPath","issuePath","issueNumber","issueCommentPath","issueBodyPath","issueHovercardPath","issueLinkedPullRequestHovercardPath","pullRequestNumber","extractPathFromPathname","pathname","defaultPath","indexOfBranchAndPath","text","branchAndPath","substring","repoTransferPath","repositoryCheckNamePath","repositoriesPath","repoTransferTeamSuggestionsPath","repoAbortTransferPath","repositoryImportsPath","templateReposPath","repoOwnerItemsPath","repoForkOwnerItemsPath","repoId","repoOwnerDetailPath","set","repoContributorsPath","repoAccessSettingsPath","propertyDefinitionSettingsPath","org","propertyName","customPropertyDetailsPath","updateOrgPropertyValuesPath","listOrgReposPropertyValuesPath","propertyDefinitionsListPath","checkPropertyUsagePath","repositoryPropertiesSettingsPath","forkPath","forksListPath","newRepoPath","orgReposListPath","orgTopicReposPath","topic","repoAttestationsIndexPath","repoAttestationShowPath","attestationId","repoAttestationDownloadPath","branchesPath","tagsPath","settingsOrgSecurityProductsPath","settingsOrgSecurityProductsConfigurationsNewPath","settingsOrgSecurityProductsConfigurationsCreatePath","settingsOrgSecurityProductsConfigurationsEditPath","id","settingsOrgSecurityProductsConfigurationsUpdatePath","settingsOrgSecurityProductsRepositoriesApplyPath","settingsOrgSecurityProductsRepositoriesDeletePath","settingsOrgSecurityProductsConfigurationsViewPath","getUrl","args","query","target","URL","ssrSafeLocation","origin","key","search","Object","entries","searchParams","delete","getRelativeHref","href","part","encodeURIComponent"],"sourceRoot":""}